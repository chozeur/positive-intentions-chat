{"version":3,"file":"877.main.js","mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAE+E;AACrC;AACM;AACN;AACA;AACQ;AACC;AACc;AASpB;AACU;AACQ;AACI;AACT;AACqB;AAC/B;AACc;AACA;AACF;AACd;AAC2B;AACf;AACR;AACd;AACkB;AACQ;AACV;AACF;AACR;AACI;AAIG;AACP;AACM;AACc;AACU;AAI1B;AACkC;AAC5B;AACpD;AACiC;AACO;AACM;AACpB;AACqB;AACa;AACf;AACuC;AAC1B;AACuB;AACV;AACkB;AACV;AACM;AACd;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGvD,IAAM4D,OAAO,GAAG,CACd;EACE7V,GAAG,EAAEoV,kBAAOA;AACd,CAAC,EACD;EACEpV,GAAG,EAAEqV,kBAAOA;AACd,CAAC,EACD;EACErV,GAAG,EAAEsV,kBAAOA;AACd,CAAC,EACD;EACEtV,GAAG,EAAEuV,kBAAOA;AACd,CAAC,EACD;EACEvV,GAAG,EAAEwV,kBAAOA;AACd,CAAC,EACD;EACExV,GAAG,EAAEyV,kBAAOA;AACd,CAAC,EACD;EACEzV,GAAG,EAAE0V,kBAAOA;AACd,CAAC,EACD;EACE1V,GAAG,EAAE2V,kBAAOA;AACd,CAAC,EACD;EACE3V,GAAG,EAAE4V,kBAAOA;AACd,CAAC,CACF;AAED,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAAra,IAAA,EAAqB;EAAA,IAAfsa,QAAQ,GAAAta,IAAA,CAARsa,QAAQ;EAC9B,IAAMC,QAAQ,GAAG;IACf9T,SAAS,EAAE,QAAQ;IACnB+T,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,IAAI;IACdC,aAAa,EAAE,MAAM;IACrBC,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE,GAAG;IACVza,KAAK,EAAE;MACL8B,MAAM,EAAE;IACV;EACF,CAAC;EACD;EACA,oBACEnC,gCAAA;IAAKK,KAAK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A,UAAAsgB,MAAA,GAAAta,SAAA,CAAAhG,CAAA,YAAApB,GAAA,IAAA0hB,MAAA,QAAA5gB,MAAA,CAAAC,SAAA,CAAAE,cAAA,CAAArC,IAAA,CAAA8iB,MAAA,EAAA1hB,GAAA,KAAA/C,MAAA,CAAA+C,GAAA,IAAA0hB,MAAA,CAAA1hB,GAAA,gBAAA/C,MAAA,YAAAskB,QAAA,CAAAla,KAAA,OAAAD,SAAA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEoE;AACpB;AACF;AACJ;AACA;AACQ;AACM;AACE;AACR;AACF;AACY;AACT;AACI;AACc;AACL;AACe;AACrC;AACE;AACI;AAGU;AACF;AAMlB;AACY;AACA;AACV;AACY;AACM;AACO;AACnB;AACR;AACsB;AACY;AACW;AAIzC;AAC+B;AAC1B;AACc;AACrB;AACE;AACU;AACI;AACA;AACN;AAC8B;AAEhF,IAAMic,eAAe,GAAG,+BAA+B;AACvD,IAAMC,cAAc,GAAG,8BAA8B;AAErD,IAAMC,aAAa,GAAGb,8BAAe;AAErC,IAAMxwB,aAAS,GAAGJ,6BAAU,CAAC,UAACK,KAAK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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEoE;AAC9B;AACQ;AACQ;AACC;AACR;AACI;AACT;AACQ;AACQ;AAChB;AACA;AACY;AACM;AACxB;AACU;AACe;AACkB;AACpC;AACqB;AAChB;AACE;AACA;AACQ;AACJ;AACN;AACR;AACkC;AACF;AAI1B;AACmC;AACtC;AACS;AACL;AAC4B;AAC9B;AACa;AAE1D,IAAMsB,kBAAS,GAAGJ,6BAAU,CAAC,UAACK,KAAK;EAAA,OAAM;IACvC8Z,MAAM,EAAE;MACNlZ,MAAM,EAAEZ,KAAK,CAACK,OAAO,CAAC,CAAC;IACzB,CAAC;IACD2Z,KAAK,EAAE;MACLC,UAAU,EAAE,MAAM;MAClBC,SAAS,EAAE,MAAM;MACjBha,OAAO,EAAE,MAAM;MACfia,UAAU,EAAE,QAAQ;MACpBvZ,MAAM,EAAE,MAAM;MACdhC,OAAO,OAAA+K,MAAA,CAAO3J,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IAChC,CAAC;IACDonB,OAAO,EAAE;MACPC,cAAc,EAAE;IAClB,CAAC;IACDiX,GAAG,EAAE;MACHv+B,QAAQ,EAAE,qBAAqB;MAC/B06B,MAAM,EAAE96B,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;MACxBY,KAAK,EAAEjB,KAAK,CAACK,OAAO,CAAC,CAAC;IACxB,CAAC;IACD+Z,MAAM,EAAE;MACNla,OAAO,EAAE;IACX,CAAC;IACD8H,YAAY,EAAE;MACZpH,MAAM,EAAE,O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BACPtK,gCAAA,CAACsJ,gCAAQ;IACPoG,KAAK,EAAE,GAAI;IACX/I,SAAS,EAAE9C,OAAO,CAAC0F,YAAa;IAChCoG,OAAO,EAAE1B,WAAY;IACrB2B,MAAM,EAAEpC,UAAW;IACnBqC,WAAW,EAAE;MACXC,KAAK,EAAE;QACLC,UAAU,EAAE;MACd;IACF;EAAE,CACH,CAEU,CAAC;AAEpB;;;;;;;;;;;;;;;;;;ACtbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEoE;AACpB;AACN;AACA;AACQ;AACF;AACc;AACA;AACF;AACF;AACR;AACI;AACb;AACc;AACc;AAK/B;AAEkC;AACW;AACpC;AACgC;AACrC;AACG;AAIH;AACF;AACyC;AACpB;AAInB;AAC1C;AAC+C;AACa;AACf;AAE7C,IAAMzO,wBAAS,GAAGJ,6BAAU,CAAC,UAACK,KAAK;EAAA,OAAM;IACvC4Z,IAAI,EAAE;MACJC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAE;MACNlZ,MAAM,EAAEZ,KAAK,CAACK,OAAO,CAAC,CAAC;IACzB,CAAC;IACD0Z,IAAI,EAAE;MACJnb,OAAO,EAAEoB,KAAK,CAACK,OAAO,CAAC,CAAC;IAC1B,CAAC;IACD2Z,KAAK,EAAE;MACLC,UAAU,EAAE,MAAM;MAClBC,SAAS,EAAE,MAAM;MACjBha,OAAO,EAAE,MAAM;MACfia,UAAU,EAAE,QAAQ;MACpBvZ,MAAM,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ACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;ACrmB+D;AAExD,SAASmpB,qBAAqBA,CAAA,EAAmB;EAAA,IAAlBypC,WAAW,GAAAnlD,SAAA,CAAA1J,MAAA,QAAA0J,SAAA,QAAAlI,SAAA,GAAAkI,SAAA,MAAG,EAAE;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","sources":["webpack://chat/./src/index.css?cfe4","webpack://chat/./src/components/redux/slices/contactsSlice.js","webpack://chat/./src/components/redux/slices/encryptionSlice.js","webpack://chat/./src/components/atomic/atom/termsAndConditions/TermsAndConditions-1.0.0.js","webpack://chat/./src/components/atomic/atom/termsAndConditions/TermsAndConditions-2.0.0.js","webpack://chat/./src/components/atomic/atom/termsAndConditions/index.js","webpack://chat/./src/components/atomic/atom/signatureCanvas/SignatureCanvas.js","webpack://chat/./src/components/atomic/molecules/webrtc-wizard/WebRTCWizard.js","webpack://chat/./src/components/atomic/molecules/connect-to-peer/ConnectToPeer.js","webpack://chat/./src/components/pages/login/Login.js","webpack://chat/./src/components/atomic/molecules/list/List.js","webpack://chat/./src/components/utils/analytics.js","webpack://chat/./src/components/pages/pods/Pods.js","webpack://chat/./src/components/atomic/atom/voiceRecorder/VoiceRecorder.js","webpack://chat/./src/components/pages/pod/Pod.js","webpack://chat/./src/components/pages/podDetails/PodDetails.js","webpack://chat/./src/components/pages/contacts/Contacts.js","webpack://chat/./src/components/pages/contactDetails/ContactDetails.js","webpack://chat/./src/components/pages/profile/Profile.js","webpack://chat/./src/components/pages/files/Files.js","webpack://chat/./src/components/pages/file/File.js","webpack://chat/./src/components/utils/calculateMd5.js","webpack://chat/./src/components/pages/feed/splitpanestyle.css?8625","webpack://chat/./src/components/pages/feed/Feed.js","webpack://chat/./src/components/pages/maintainance/Maintainance.js","webpack://chat/./src/components/pages/hands/style.css?5b2a","webpack://chat/./src/components/pages/hands/Hands.js","webpack://chat/./src/components/atomic/molecules/qr-text/QRText.js","webpack://chat/./src/components/atomic/molecules/qr-file/QRFile.js","webpack://chat/./src/components/pages/shareQr/ShareQR.js","webpack://chat/./src/components/pages/encryption/RSA.js","webpack://chat/./src/components/pages/encryption/Symmetric.js","webpack://chat/./src/components/pages/encryption/HashInputs.js","webpack://chat/./src/components/pages/encryption/Hashing.js","webpack://chat/./src/components/pages/encryption/Encryption.js","webpack://chat/./src/components/pages/termsAndConditions/TermsAndConditions.js","webpack://chat/./src/components/pages/privacyPolicy/PrivacyPolicy.js","webpack://chat/./src/components/pages/map/Map.js","webpack://chat/./src/components/pages/ai/AI.js","webpack://chat/./src/components/atomic/atom/qrInput/QRInput.js","webpack://chat/./src/components/pages/webrtc/WebRTC.js","webpack://chat/./src/components/pages/layout/Layout.js","webpack://chat/./src/components/router/Router.js","webpack://chat/./src/components/redux/store.js","webpack://chat/./src/components/redux/Redux.js","webpack://chat/./src/components/p2p/appi/encryptionMiddleware.js","webpack://chat/./src/components/p2p/appi/handshakeEndpoints.js","webpack://chat/./src/components/p2p/appi/pingPingEndpoints.js","webpack://chat/./src/components/p2p/appi/podEndpoints.js","webpack://chat/./src/components/p2p/appi/appiSchema.js","webpack://chat/./src/components/p2p/ReduxConnectedPeerProvider.js","webpack://chat/./src/components/cryptography/ReduxConnectedCryptography.js","webpack://chat/./src/components/atomic/atom/errorBoundary/ErrorBoundary.js","webpack://chat/./src/App.tsx","webpack://chat/./src/stories/components/Example.tsx","webpack://chat/./src/bootstrap.tsx","webpack://chat/./src/components/atomic/atom/dropdown/NestedMenuItem.js","webpack://chat/./src/components/atomic/atom/dropdown/Dropdown.js","webpack://chat/./src/components/atomic/atom/message/Attachment.js","webpack://chat/./src/components/atomic/atom/message/Location.js","webpack://chat/./src/components/atomic/atom/message/Payload.js","webpack://chat/./src/components/atomic/atom/message/Message.js","webpack://chat/./src/components/atomic/molecules/conversation/style.css?05be","webpack://chat/./src/components/atomic/molecules/conversation/Conversation.js","webpack://chat/./src/components/atomic/molecules/thread/style.css?4b25","webpack://chat/./src/components/atomic/atom/customAccordion/CustomAccordion.js","webpack://chat/./src/components/atomic/atom/post/Post.js","webpack://chat/./src/components/atomic/molecules/thread/Thread.js","webpack://chat/./src/components/atomic/molecules/app-header/AppHeader.js","webpack://chat/./src/components/atomic/organism/page-container/PageContainer.js","webpack://chat/./src/components/utils/calculateSha3512.js","webpack://chat/./src/components/blockchain/Blockchain.js","webpack://chat/./src/components/blockchain/chains/podChain.js","webpack://chat/./src/components/blockchain/chains/profileChain.js","webpack://chat/./src/components/cryptography/Cryptography.js","webpack://chat/./src/components/encryption/Encryption.js","webpack://chat/./src/components/notifications/notificationManager.js","webpack://chat/./src/components/p2p/PeerProvider.js","webpack://chat/./src/components/p2p/usePeer.js","webpack://chat/./src/components/redux/slices/podsSlice.js","webpack://chat/./src/components/redux/slices/storageSlice.js","webpack://chat/./src/components/redux/slices/userProfileSlice.js","webpack://chat/./src/components/translations/i18n.js","webpack://chat/./src/components/utils/calculateSha256.js","webpack://chat/./src/components/atomic/molecules/conversation/style.css","webpack://chat/./src/components/atomic/molecules/thread/style.css","webpack://chat/./src/components/pages/feed/splitpanestyle.css","webpack://chat/./src/components/pages/hands/style.css","webpack://chat/./src/index.css"],"sourcesContent":["\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { createSlice, current } from \"@reduxjs/toolkit\";\n\nexport const contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: [],\n  reducers: {\n    addContact: (state, action) => {\n      if (!state.find((contact) => contact.id === action.payload.id)) {\n        state.push(action.payload);\n      }\n    },\n    removeContact: (state, action) => {\n      const newState = current(state);\n      const filteredNewState = newState.filter(\n        (contact) => contact.id !== action.payload.id,\n      );\n\n      state = filteredNewState;\n      return state;\n    },\n    updateContact: (state, action) => {\n      state = state.map((contact) => {\n        if (contact.id === action.payload.id) {\n          return { ...contact, ...action.payload };\n        }\n        return contact;\n      });\n      return state;\n    },\n    setContacts: (state, action) => {\n      state = action.payload;\n      return state;\n    },\n    updateContactDisplayName: (state, action) => {\n      state = state.map((contact) => {\n        if (contact.id === action.payload.id) {\n          return { ...contact, displayName: action.payload.displayName };\n        }\n        return contact;\n      });\n      return state;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addContact,\n  removeContact,\n  updateContact,\n  setContacts,\n  updateContactDisplayName,\n} = contactsSlice.actions;\n\nexport default contactsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst encryptionSlice = createSlice({\n  name: \"encryption\",\n  initialState: {},\n  reducers: {\n    addEncryptionKeys: (state, action) => {\n      const { userId, publicKey, privateKey, remotePublicKey, symmetricKey } =\n        action.payload;\n      state[userId] = { publicKey, privateKey, remotePublicKey, symmetricKey };\n    },\n    updateEncryptionKeys: (state, action) => {\n      const { userId, publicKey, privateKey, remotePublicKey, established } =\n        action.payload;\n      if (state[userId]) {\n        state[userId].publicKey = publicKey || state[userId].publicKey;\n        state[userId].privateKey = privateKey || state[userId].privateKey;\n        state[userId].remotePublicKey =\n          remotePublicKey || state[userId].remotePublicKey;\n        state[userId].established = established || state[userId].established;\n      }\n    },\n    deleteEncryptionKeys: (state, action) => {\n      const userId = action.payload;\n      delete state[userId];\n    },\n    setEncryption: (state, action) => {\n      state = action.payload;\n      return state;\n    },\n  },\n});\n\nexport const {\n  addEncryptionKeys,\n  updateEncryptionKeys,\n  deleteEncryptionKeys,\n  setEncryption,\n} = encryptionSlice.actions;\n\nexport default encryptionSlice.reducer;\n","import React from \"react\";\n\nconst TermsAndConditions = ({ padding }) => {\n  return (\n    <div style={{ padding }}>\n      <h2>1. Introduction</h2>\n      <p>\n        <ol>\n          <li>\n            Welcome to <em>positive-intentions</em>, a secure and comprehensive\n            web-based peer-to-peer (P2P) communication platform designed to\n            facilitate easy and intuitive connections between users. Our app\n            offers text messaging, multimedia sharing, and voice calling for\n            both one-on-one and group conversations, all without requiring\n            registration or storing user data on any centralized servers. By\n            using <em>positive-intentions</em>, you can communicate with your\n            peers directly, with all data stored locally on your browser's\n            storage.\n          </li>\n          <li>\n            Please read these terms and conditions (\"Terms\") carefully before\n            using <em>positive-intentions</em>. By accessing and using our app,\n            you agree to be bound by these Terms. If you do not agree with these\n            Terms, you must not use <em>positive-intentions</em>. These Terms\n            govern your use of the app, and any updates, modifications, or\n            enhancements made to the app in the future. We reserve the right to\n            change or modify these Terms at any time, and your continued use of\n            the app constitutes your acceptance of such changes or\n            modifications.\n          </li>\n        </ol>\n      </p>\n      <h2>2. User eligibility</h2>\n      <p>\n        <ol>\n          <li>\n            Age Restriction: Users of the <em>positive-intentions</em> app must\n            be at least 13 years of age or older. By using the app, you\n            represent and warrant that you are of the required age or older and\n            have the legal capacity to understand and accept these terms and\n            conditions.\n          </li>\n          <li>\n            Geographical Availability: The <em>positive-intentions</em> app is\n            available for use in countries and regions where WebRTC technology\n            is legally permitted. By using the app, you confirm that you are\n            located in a jurisdiction where the use of such technology is\n            allowed.\n          </li>\n          <li>\n            Regulatory Compliance: Users are responsible for ensuring that their\n            use of the <em>positive-intentions</em> app complies with all\n            applicable laws and regulations in their respective jurisdictions,\n            including but not limited to data protection and privacy laws,\n            telecommunications regulations, and any specific rules governing P2P\n            communication.\n          </li>\n          <li>\n            Intended Use: The <em>positive-intentions</em> app is designed for\n            personal, non-commercial use only. Any use for business, commercial,\n            or organizational purposes is strictly prohibited.\n          </li>\n          <li>\n            Responsible Use: We strive to create a safe and inclusive\n            environment for all users of the <em>positive-intentions</em> app.\n            Users are expected to treat each other with respect and not engage\n            in any activities that may be harmful or offensive to others. This\n            includes, but is not limited to, harassment, discrimination, racism,\n            sexism, hate speech, threats, or any other behavior that may\n            infringe upon the rights or well-being of others. We encourage all\n            users to report any inappropriate behavior or content to us.\n            However, as a P2P chat app using PeerJS and presented as a web app,\n            we are unable to remove content or ban users.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the <em>positive-intentions</em> app, you agree to comply with\n        these eligibility requirements and to use the app in a responsible and\n        respectful manner. Failure to adhere to these terms may result in the\n        suspension or termination of your access to the app.\n      </p>\n      <h2>3. Account registration and security:</h2>\n      <p>\n        <ol>\n          <li>\n            Display Names: Upon using the <em>positive-intentions</em>, users\n            are required to create a display name, which will be visible to\n            other users within the app. Display names must be tasteful and not\n            offensive. We reserve the right to remove or modify any display name\n            that violates these guidelines or infringes on the rights of others.\n          </li>\n          <li>\n            Unique Identifiers: The app will generate two unique identifiers for\n            each user: a connection ID and a device/browser ID. Users are\n            responsible for securely managing their connection IDs and sharing\n            them only with trusted individuals.\n          </li>\n          <li>\n            Data Storage: All user data is stored locally on the user's\n            browser's storage, which can be accessed via the browser's inspect\n            tools. Users are responsible for the security of their devices,\n            operating systems, and browsers, and for following security best\n            practices to protect their stored data.\n          </li>\n          <li>\n            App Stability and Data Backup: The <em>positive-intentions</em> is a\n            work-in-progress, and users should not rely on its stability.\n            Breaking changes may be implemented as we continue to develop and\n            improve the app. Users are responsible for backing up their data and\n            should not expect the app to maintain data integrity during updates\n            or changes.\n          </li>\n          <li>\n            Responsible Use: Users are encouraged to exercise caution when\n            sharing sensitive or personal information through the app. Do not\n            disclose personal data to unknown users, and be aware of the risks\n            associated with sharing information with others. By using the{\" \"}\n            <em>positive-intentions</em>, you agree to use the app in a\n            responsible and respectful manner, adhering to the guidelines\n            outlined in the \"User Eligibility\" section.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the <em>positive-intentions</em>, you agree to comply with\n        these account registration and security requirements and to use the app\n        in a responsible and respectful manner.\n      </p>\n      <h2>4. User conduct and content:</h2>\n      <p>\n        <ol>\n          <li>\n            User Conduct: Users of the <em>positive-intentions</em> app are\n            expected to conduct themselves in a respectful and responsible\n            manner. By using the app, you agree not to engage in any activities\n            that may be harmful or offensive to others, violate the rights of\n            others, or otherwise interfere with the normal functioning of the\n            app. This includes, but is not limited to:\n          </li>\n          <ul>\n            <li>Harassment, bullying, or intimidation of other users.</li>\n            <li>\n              Discrimination or hate speech based on race, ethnicity, religion,\n              gender, sexual orientation, or any other protected characteristic.\n            </li>\n            <li>\n              Posting or sharing content that is obscene, pornographic,\n              excessively violent, or otherwise inappropriate for a general\n              audience.\n            </li>\n            <li>\n              Engaging in illegal activities or encouraging others to do so.\n            </li>\n            <li>\n              Spamming, phishing, or engaging in other disruptive or deceptive\n              practices.\n            </li>\n            <li>Distributing viruses, malware, or other harmful software.</li>\n            <li>\n              Infringing on the intellectual property rights, privacy rights, or\n              any other rights of others.\n            </li>\n          </ul>\n          <li>\n            Content: Users are solely responsible for any content they create,\n            transmit, or share using the <em>positive-intentions</em> app. By\n            using the app, you represent and warrant that you have the necessary\n            rights and permissions to use and share any content you provide and\n            that your content does not violate any applicable laws or\n            regulations.\n          </li>\n          <li>\n            We strive to create a safe and inclusive environment for all users\n            of the <em>positive-intentions</em> app. However, as a P2P chat app\n            using PeerJS and presented as a web app, we are unable to remove\n            content or ban users. We may still remove content or terminate the\n            access of any user found to be in violation of these terms at our\n            sole discretion. We may also cooperate with law enforcement\n            authorities or comply with legal requests to disclose user\n            information or content when required by law.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the <em>positive-intentions</em> app, you acknowledge and agree\n        to these user conduct and content guidelines. Failure to adhere to these\n        guidelines may result in the suspension or termination of your access to\n        the app.\n      </p>\n      <h2>5. Intellectual property:</h2>\n      <p>\n        <ol>\n          <li>\n            Ownership: The intellectual property rights related to the{\" \"}\n            <em>positive-intentions</em>, including but not limited to the app's\n            name, logo, design, source code, and other proprietary elements, are\n            owned by the company (to be established) responsible for the app's\n            development. The app is currently a proof of concept and not\n            associated with any company.\n          </li>\n          <li>\n            Respecting Intellectual Property Rights: Users are expected to\n            respect the intellectual property rights of others when using the{\" \"}\n            <em>positive-intentions</em>. This includes, but is not limited to,\n            not sharing copyrighted material, trademarks, or other proprietary\n            content without the express permission of the rights holder.\n            Unauthorized use or distribution of protected content may result in\n            the suspension or termination of the user's access to the app and\n            potential legal liability.\n          </li>\n          <li>\n            User Content: Users retain ownership of the intellectual property\n            rights in any content they create or share within the app. By using\n            the app and sharing content with peers, users acknowledge that they\n            may be granting other users a non-exclusive license to access, use,\n            reproduce, or modify the shared content.\n          </li>\n          <li>\n            Infringement Claims: Currently, there are no formal procedures in\n            place for handling intellectual property infringement claims.\n            However, users are encouraged to be mindful of intellectual property\n            rights when sharing content and to report any suspected infringement\n            to the app's developers for further investigation.\n          </li>\n          <li>\n            Performance Monitoring: We reserve the right to introduce tools and\n            technologies for monitoring the <em>positive-intentions</em>'s\n            performance and improving its functionality. By using the app, you\n            acknowledge and agree to this potential monitoring.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the <em>positive-intentions</em>, you acknowledge and agree to\n        these intellectual property guidelines. If you believe that any\n        intellectual property rights have been violated within the app, please\n        report the issue to the app's developers for further investigation.\n      </p>\n      <h2>6. Data privacy and security:</h2>\n      <p>\n        <ol>\n          <li>\n            Data Storage: The <em>positive-intentions</em> saves user and app\n            data locally on the storage provided by the user's browser. Users\n            are responsible for ensuring the security of their devices and\n            browsers, and for following security best practices to protect their\n            stored data. The company does not collect user data, apart from what\n            is needed for monitoring tools to ensure the app's stability and to\n            make improvements.\n          </li>\n          <li>\n            Third-Party Services: The app uses PeerJS for establishing peer\n            connections and the official PeerJS server as the connection broker.\n            We are not affiliated with PeerJS and are not responsible for the\n            management of the PeerJS server. We also use Sentry.io for error\n            monitoring and NLevel Software for analytics. We retain the right to\n            add analytics tools to help manage the stability of the app and make\n            improvements.\n          </li>\n          <li>\n            Data Access and User Rights: Users can access their data through the\n            app's user interface or their browser's inspect tools. The app may\n            provide functionality to export data for backup purposes. Users have\n            the right to delete any or all data stored within the app, subject\n            to the limitations of the app's design and the nature of\n            peer-to-peer communication.\n          </li>\n          <li>\n            Data Retention: User data is retained for as long as the user and\n            browser allow. Users are responsible for backing up their data and\n            managing the data stored within the app.\n          </li>\n          <li>\n            Reporting and Investigations: The app may include functionality to\n            report users, and we reserve the right for this functionality to\n            send necessary details for any investigation.\n          </li>\n          <li>\n            Compliance with Laws: Users of the <em>positive-intentions</em> are\n            responsible for complying with the laws in their place of residence.\n            The app will be registered in the UK, and users should be aware of\n            and adhere to any applicable privacy laws and regulations. It is the\n            user's responsibility to understand and comply with any specific\n            laws that apply to their use of the app.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the <em>positive-intentions</em>, you acknowledge and agree to\n        these data privacy and security guidelines. If you have any concerns or\n        questions about how your data is used or stored within the app, please\n        contact the app's developers for further information.\n      </p>\n      <h2>7. Third-party services and links:</h2>\n      <p>\n        <ol>\n          <li>\n            Third-Party Services and Links: The <em>positive-intentions</em> may\n            use third-party services, tools, and libraries, such as PeerJS and\n            its connection broker, to provide and enhance its functionality. We\n            are not affiliated with, nor do we endorse or assume responsibility\n            for, any third-party services, tools, or libraries used within the\n            app. Users acknowledge that these third parties may have their own\n            terms of service, privacy policies, and data handling practices, and\n            that the <em>positive-intentions</em> is not responsible for the\n            content, privacy, or security of these third parties. We also use\n            Sentry.io for error monitoring and NLevel Software for analytics.\n          </li>\n          <li>\n            In addition, the app may include or provide links to external\n            websites or resources that are not under our control. We do not\n            endorse or assume responsibility for the content, privacy policies,\n            or practices of these external websites or resources. Users access\n            and use these external websites or resources at their own risk.\n          </li>\n          <li>\n            We reserve the right to add or remove third-party services, tools,\n            libraries, or links at our discretion. By using the{\" \"}\n            <em>positive-intentions</em>, users acknowledge and agree to the\n            potential risks and limitations associated with third-party\n            services, tools, libraries, and links.\n          </li>\n        </ol>\n      </p>\n      <p>\n        If you have any questions or concerns about the third-party services or\n        links used within the app, please contact the app's developers for\n        further information.\n      </p>\n      <h2>8. Modification and termination:</h2>\n      <p>\n        <ol>\n          <li>\n            Modification: As a proof of concept (POC), the{\" \"}\n            <em>positive-intentions</em> is subject to updates and modifications\n            as we deem necessary for improving the app's functionality and\n            performance. Users acknowledge that changes may be made without\n            prior notice and may impact their experience using the app. It is\n            the user's responsibility to regularly review the terms and\n            conditions for any updates or changes.\n          </li>\n          <li>\n            Termination by User: Users retain the right to terminate their use\n            of the app at any time. To remove their data, users can utilize the\n            app's data removal functionality or their browser's inspect tools to\n            delete stored data.\n          </li>\n          <li>\n            Termination by Company: Due to the P2P nature of the app, we do not\n            have the ability to remove or ban users. However, users acknowledge\n            that the app is a POC in a volatile state and may become unavailable\n            at any time at our discretion.\n          </li>\n          <li>\n            Discontinuation: In the event that the <em>positive-intentions</em>{\" \"}\n            is discontinued, users are responsible for ensuring the removal of\n            their data from their devices and browsers. We are not responsible\n            for any loss of data or functionality resulting from the\n            discontinuation of the app.\n          </li>\n        </ol>\n      </p>\n      <h2>9. Warranty disclaimer and limitation of liability:</h2>\n      <p>\n        1. Warranty Disclaimer: The p2p-chat-app is provided \"as is\" and \"with\n        all faults,\" without any warranties or guarantees of any kind, express\n        or implied, including but not limited to warranties of merchantability,\n        fitness for a particular purpose, or non-infringement. Users acknowledge\n        and agree that their use of the app is at their sole risk, and that they\n        are responsible for any damages or losses resulting from such use.\n      </p>\n      <p>\n        2. As a proof of concept (POC), the app may have unexpected issues,\n        errors, interruptions, or defects. We do not warrant that the app will\n        be error-free, uninterrupted, or that any defects will be corrected. We\n        make no representations or warranties regarding the app's performance,\n        reliability, accuracy, or suitability for any particular purpose.\n      </p>\n      <p>\n        3. Limitation of Liability: To the fullest extent permitted by\n        applicable law, we, our affiliates, and our respective officers,\n        directors, employees, and agents, shall not be liable for any direct,\n        indirect, incidental, consequential, special, punitive, or exemplary\n        damages, including but not limited to damages for loss of profits,\n        goodwill, use, data, or other intangible losses, resulting from the use\n        of or inability to use the app, even if we have been advised of the\n        possibility of such damages.\n      </p>\n      <p>\n        Users acknowledge and agree that they are solely responsible for their\n        use of the p2p-chat-app and that we disclaim all liability for any\n        actions, omissions, or consequences arising from or related to their use\n        of the app.\n      </p>\n      <h2>10. Indemnification:</h2>\n      <p>\n        1. Indemnification: Users agree to indemnify, defend, and hold harmless\n        the app owner, its affiliates, and their respective officers, directors,\n        employees, and agents from and against any and all claims, damages,\n        losses, liabilities, costs, and expenses (including reasonable\n        attorneys' fees) arising from or related to their use of the\n        p2p-chat-app, their violation of these terms and conditions, or their\n        infringement of any intellectual property or other rights of any third\n        party.\n      </p>\n      <p>\n        Users shall defend the app owner and its affiliates at their own\n        expense, and the app owner reserves the right, at its own expense, to\n        assume the exclusive defense and control of any matter otherwise subject\n        to indemnification by users. Users agree to cooperate with the app owner\n        in the defense of any claim subject to indemnification.\n      </p>\n      <h2>11. Governing law and dispute resolution:</h2>\n      <ol>\n        <li>\n          <p>\n            Governing Law: These terms and conditions and any disputes arising\n            out of or in connection with the p2p-chat-app or your use thereof\n            shall be governed by and construed in accordance with the laws of\n            the United Kingdom, without regard to its conflict of law\n            principles.\n          </p>\n        </li>\n        <li>\n          <p>\n            Dispute Resolution: In the event of any dispute, controversy, or\n            claim arising out of or relating to these terms and conditions or\n            your use of the p2p-chat-app, the parties shall first attempt to\n            resolve the dispute through good faith negotiations. If the dispute\n            cannot be resolved through negotiations within a reasonable time,\n            either party may submit the dispute to the exclusive jurisdiction of\n            the courts located in the United Kingdom.\n          </p>\n        </li>\n      </ol>\n      <h2>12. Changes to terms and conditions:</h2>\n      <ol>\n        <li>\n          <p>\n            Changes to Terms and Conditions: The app owner reserves the right,\n            in its sole discretion, to modify or update these terms and\n            conditions at any time without prior notice. As the p2p-chat-app is\n            currently a proof of concept and in active development, users will\n            not be notified of changes to the terms and conditions. Users are\n            advised to periodically review the terms and conditions for any\n            updates or modifications.\n          </p>\n          <p>\n            Upon any update to the terms and conditions, the app may be\n            temporarily locked, and users will be required to agree to the\n            updated terms and conditions before regaining access to the app. By\n            continuing to use the app after any modifications to the terms and\n            conditions, users indicate their acceptance of such changes.\n          </p>\n        </li>\n      </ol>\n      <h2>13. Contact information:</h2>\n      <p>\n        1. Contact Information: The p2p-chat-app is currently a proof of concept\n        and not associated with an established company or organization. If you\n        have any questions, concerns, or issues related to these terms and\n        conditions or the app, please contact our team via our{\" \"}\n        <a href=\"https://www.reddit.com/r/positive_intentions/\">Reddit</a> user\n        profile. We will make every effort to respond to your inquiries in a\n        timely manner.\n      </p>\n    </div>\n  );\n};\n\nexport default TermsAndConditions;\n","import React from \"react\";\n\nconst TermsAndConditions = ({ padding }) => {\n  return (\n    <div style={{ padding }}>\n      <h2>1. Introduction</h2>\n      <p>\n        <ol>\n          <li>\n            Welcome to positive-intentions , a secure and comprehensive\n            web-based peer-to-peer (P2P) communication platform designed to\n            facilitate easy and intuitive connections between users. Our app\n            offers text messaging, multimedia sharing, and voice calling for\n            both one-on-one and group conversations, all without requiring\n            registration or storing user data on any centralized servers of any\n            party. By using positive-intentions, you can communicate with your\n            peers directly, with all data stored locally on your browser's\n            storage.\n          </li>\n          <li>\n            Please read and accept these terms and conditions (\"Terms\")\n            carefully before using positive-intentions. By accessing and using\n            our app, you agree to be bound by these Terms. If you do not agree\n            with these Terms, you cannot use positive-intentions. These Terms\n            govern your use of the app, and any updates, modifications, or\n            enhancements made to the app in the future. We reserve the right to\n            change or modify these Terms at any time, and your continued use of\n            the app constitutes your acceptance of such changes or\n            modifications.\n          </li>\n        </ol>\n      </p>\n      <h2>2. User eligibility</h2>\n      <p>\n        <ol>\n          <li>\n            Age Restriction: Users of the positive-intentions app must be at\n            least 13 years of age or older. By using the app, you represent and\n            warrant that you are of the required age or older and have the legal\n            capacity to understand and accept these Terms.\n          </li>\n          <li>\n            Geographical Availability: The positive-intentions app is available\n            for use in countries and regions where WebRTC technology is legally\n            permitted. By using the app, you confirm that you are located in a\n            jurisdiction where the use of such technology is allowed.\n          </li>\n          <li>\n            Regulatory Compliance: Users are responsible for ensuring that their\n            use of the positive-intentions app complies with all applicable laws\n            and regulations in their respective jurisdictions, including but not\n            limited to data protection and privacy laws, telecommunications\n            regulations, and any specific rules governing P2P communication.\n          </li>\n          <li>\n            Intended Use: The positive-intentions app is designed for personal,\n            non-commercial use. We strive to create a safe and inclusive\n            environment for all users of the positive-intentions app. Users are\n            expected to treat each other with respect and not engage in any\n            activities that may be harmful or offensive to others. This\n            includes, but is not limited to, harassment, discrimination, racism,\n            sexism, hate speech, threats, or any other behaviour that may\n            infringe upon the rights or well-being of others. However, as a P2P\n            chat app using PeerJS and presented as a web app, we are unable to\n            remove content from users or ban users.\n          </li>\n          <li>\n            Responsible Use: We strive to create a safe and inclusive\n            environment for all users of the <em>positive-intentions</em> app.\n            Users are expected to treat each other with respect and not engage\n            in any activities that may be harmful or offensive to others. This\n            includes, but is not limited to, harassment, discrimination, racism,\n            sexism, hate speech, threats, or any other behavior that may\n            infringe upon the rights or well-being of others. We encourage all\n            users to report any inappropriate behavior or content to us.\n            However, as a P2P chat app using PeerJS and presented as a web app,\n            we are unable to remove content or ban users.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the positive-intentions app, you agree to comply with these\n        eligibility requirements and to use the app in a responsible and\n        respectful manner.\n      </p>\n      <h2>3. Account registration and security:</h2>\n      <p>\n        <ol>\n          <li>\n            Display Names: Upon using the positive-intentions, users get an\n            auto-generated display name. Users can edit a display name, which\n            will be visible to other users within the app. Display names should\n            be tasteful and not offensive.\n          </li>\n          <li>\n            Unique Identifiers: The app will generate two unique identifiers for\n            each user: a connection ID and a device/browser ID. Users are\n            responsible for securely managing their connection IDs and sharing\n            them only with trusted individuals.\n          </li>\n          <li>\n            Data Storage: All user data is stored locally on the user's\n            browser's storage, which can be accessed via the browser's inspect\n            tools. Users are responsible for the security of their devices,\n            operating systems, and browsers, and for following security best\n            practices to protect their stored data.\n          </li>\n          <li>\n            App Stability and Data Backup: The positive-intentions is a\n            work-in-progress, and users should not rely on its stability.\n            Breaking changes may be implemented as we continue to develop and\n            improve the app. Users are responsible for backing up their data and\n            should not expect the app to maintain data integrity during updates\n            or changes.\n          </li>\n          <li>\n            Responsible Use: Users are encouraged to exercise caution when\n            sharing sensitive or personal information through the app. Do not\n            disclose personal data to unknown users, and be aware of the risks\n            associated with sharing information with others. By using the\n            positive-intentions, you agree to use the app in a responsible and\n            respectful manner, adhering to the guidelines outlined in the \"User\n            Eligibility\" section.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the app, you agree to comply with these account registration\n        and security requirements and to use the app in a responsible and\n        respectful manner.\n      </p>\n      <h2>4. User conduct and content:</h2>\n      <p>\n        <ol>\n          <li>\n            User Conduct: Users of the app are expected to conduct themselves in\n            a respectful and responsible manner. By using the app, you agree not\n            to engage in any activities that may be harmful or offensive to\n            others, violate the rights of others, or otherwise interfere with\n            the normal functioning of the app. This includes, but is not limited\n            to:\n          </li>\n          <ul>\n            <li>Harassment, bullying, or intimidation of other users.</li>\n            <li>\n              Discrimination or hate speech based on race, ethnicity, religion,\n              gender, sexual orientation, or any other protected characteristic.\n            </li>\n            <li>\n              Posting or sharing content that is obscene, pornographic,\n              excessively violent, or otherwise inappropriate for a general\n              audience.\n            </li>\n            <li>\n              Engaging in illegal activities or encouraging others to do so.\n            </li>\n            <li>\n              Spamming, phishing, or engaging in other disruptive or deceptive\n              practices.\n            </li>\n            <li>Distributing viruses, malware, or other harmful software.</li>\n            <li>\n              Infringing on the intellectual property rights, privacy rights, or\n              any other rights of others.\n            </li>\n            <li>Using the app may not be against the penal code.</li>\n          </ul>\n          <li>\n            Content: Users are solely responsible for any content they create,\n            transmit, or share using the positive-intentions app. By using the\n            app, you represent and warrant that you have the necessary rights\n            and permissions to use and share any content you provide and that\n            your content does not violate any applicable laws or regulations.\n          </li>\n          <li>\n            We strive to create a safe and inclusive environment for all users\n            of the positive-intentions app. However, as a P2P chat app using\n            PeerJS and presented as a web app, we are unable to remove content\n            or ban users.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the app, you acknowledge and agree to these user conduct and\n        content guidelines.\n      </p>\n      <h2>5. Intellectual property:</h2>\n      <p>\n        <ol>\n          <li>\n            Ownership: The intellectual property rights related to the\n            positive-intentions, including but not limited to the app's name,\n            logo, design, source code, and other proprietary elements, are owned\n            by the company responsible for the app's development. The app is\n            currently a proof of concept and not associated with any company.\n          </li>\n          <li>\n            Respecting Intellectual Property Rights: Users are expected to\n            respect the intellectual property rights of others when using the\n            app. This includes, but is not limited to, not sharing copyrighted\n            material, trademarks, or other proprietary content without the\n            express permission of the rights holder. Unauthorized use or\n            distribution of protected content may potentially result in legal\n            liability.\n          </li>\n          <li>\n            User Content: Users retain ownership of the intellectual property\n            rights in any content they create or share within the app. By using\n            the app and sharing content with peers, users acknowledge that they\n            may be granting other users a non-exclusive license to access, use,\n            reproduce, or modify the shared content.\n          </li>\n          <li>\n            Infringement Claims: Currently, there are no formal procedures in\n            place for handling intellectual property infringement claims.\n            However, users are encouraged to be mindful of intellectual property\n            rights when sharing content and to report any suspected infringement\n            to the app's developers for further investigation.\n          </li>\n          <li>\n            Performance Monitoring: We reserve the right to introduce tools and\n            technologies for monitoring the performance of the app and improving\n            its functionality. By using the app, you acknowledge and agree to\n            this potential monitoring.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the positive-intentions, you acknowledge and agree to these\n        intellectual property guidelines. If you believe that any intellectual\n        property rights have been violated within the app, please report the\n        issue to the app's developers for further investigation.\n      </p>\n      <h2>6. Data privacy and security:</h2>\n      <p>\n        <ol>\n          <li>\n            Data Storage: The app saves user and app data locally on the storage\n            provided by the user's browser. Users are responsible for ensuring\n            the security of their devices and browsers, and for following\n            security best practices to protect their stored data. The company\n            does not collect user data, apart from what is needed for monitoring\n            tools to ensure the app's stability and to make improvements.\n          </li>\n          <li>\n            Third-Party Services: The app uses PeerJS for establishing peer\n            connections and the official PeerJS server as the connection broker.\n            We are not affiliated with PeerJS and are not responsible for the\n            management of the PeerJS server. We may also use Sentry.io for error\n            monitoring and NLevel Software for analytics. We retain the right to\n            add analytics tools to help manage the stability of the app and make\n            improvements.\n          </li>\n          <li>\n            Data Access and User Rights: Users can access their data through the\n            app's user interface or their browser's inspect tools. The app may\n            provide functionality to export data for backup purposes. Users have\n            the right to delete any or all data stored within the app, subject\n            to the limitations of the app's design and the nature of\n            peer-to-peer communication.\n          </li>\n          <li>\n            Data Retention: User data is retained for as long as the user and\n            browser allow. Users are responsible for backing up their data and\n            managing the data stored within the app.\n          </li>\n          <li>\n            Reporting and Investigations: The app may include functionality to\n            report users, and we reserve the right for this functionality to\n            send necessary details for any investigation.\n          </li>\n          <li>\n            Compliance with Laws: Users of the positive-intentions are\n            responsible for complying with the laws in their place of residence.\n            Users should be aware of and adhere to any applicable privacy laws\n            and regulations. It is the user's responsibility to understand and\n            comply with any specific laws that apply to their use of the app.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the app, you acknowledge and agree to these data privacy and\n        security guidelines. If you have any concerns or questions about how\n        your data is used or stored within the app, please contact the app's\n        developers for further information.\n      </p>\n      <h2>7. Third-party services and links:</h2>\n      <p>\n        <ol>\n          <li>\n            Third-Party Services and Links: The positive-intentions may use\n            third-party services, tools, and libraries, such as PeerJS and its\n            connection broker, to provide and enhance its functionality. We are\n            not affiliated with, nor do we endorse or assume responsibility for,\n            any third-party services, tools, or libraries used within the app.\n            Users acknowledge that these third parties may have their own terms\n            of service, privacy policies, and data handling practices, and that\n            the positive-intentions is not responsible for the content, privacy,\n            or security of these third parties. We also use Sentry.io for error\n            monitoring and NLevel Software for analytics.\n          </li>\n          <li>\n            In addition, the app may include or provide links to external\n            websites or resources that are not under our control. We do not\n            endorse or assume responsibility for the content, privacy policies,\n            or practices of these external websites or resources. Users access\n            and use these external websites or resources at their own risk.\n          </li>\n          <li>\n            We reserve the right to add or remove third-party services, tools,\n            libraries, or links at our discretion. By using the app, users\n            acknowledge and agree to the potential risks and limitations\n            associated with third-party services, tools, libraries, and links.\n          </li>\n        </ol>\n      </p>\n      <p>\n        If you have any questions or concerns about the third-party services or\n        links used within the app, please contact the app's developers for\n        further information.\n      </p>\n      <h2>8. Modification and termination:</h2>\n      <p>\n        <ol>\n          <li>\n            Modification: As a proof of concept (POC), the app is subject to\n            updates and modifications as we deem necessary for improving the\n            app's functionality and performance. Users acknowledge that changes\n            may be made without prior notice and may impact their experience\n            using the app. It is the user's responsibility to regularly review\n            the terms and conditions for any updates or changes.\n          </li>\n          <li>\n            Termination by User: Users retain the right to terminate their use\n            of the app at any time. To remove their data, users can utilize the\n            app's data removal functionality or their browser's inspect tools to\n            delete stored data.\n          </li>\n          <li>\n            Termination by Company: Due to the P2P nature of the app, we do not\n            have the ability to remove or ban users. However, users acknowledge\n            that the app is a POC in a volatile state and may become unavailable\n            at any time at our discretion.\n          </li>\n          <li>\n            Discontinuation: In the event that the app is discontinued, users\n            are responsible for ensuring the removal of their data from their\n            devices and browsers. We are not responsible for any loss of data or\n            functionality resulting from the discontinuation of the app.\n          </li>\n        </ol>\n      </p>\n      <h2>9. Warranty disclaimer and limitation of liability:</h2>\n      <p>\n        <ol>\n          <li>\n            Warranty Disclaimer: The app is provided \"as is\" and \"with all\n            faults\", without any warranties or guarantees of any kind, express\n            or implied, including but not limited to warranties of\n            merchantability, fitness for a particular purpose, or\n            non-infringement. Users acknowledge and agree that their use of the\n            app is at their sole risk, and that they are responsible for any\n            damages or losses resulting from such use.\n          </li>\n          <li>\n            As a proof of concept (POC), the app may have unexpected issues,\n            errors, interruptions, or defects. We do not warrant that the app\n            will be error-free, uninterrupted, or that any defects will be\n            corrected. We make no representations or warranties regarding the\n            app's performance, reliability, accuracy, or suitability for any\n            particular purpose.\n          </li>\n          <li>\n            Limitation of Liability: To the fullest extent permitted by\n            applicable law, we, our affiliates, and our respective officers,\n            directors, employees, and agents, shall not be liable for any\n            direct, indirect, incidental, consequential, special, punitive, or\n            exemplary damages, including but not limited to damages for loss of\n            profits, goodwill, use, data, or other intangible losses, resulting\n            from the use of or inability to use the app, even if we have been\n            advised of the possibility of such damages.\n          </li>\n        </ol>\n      </p>\n      <p>\n        Users acknowledge and agree that they are solely responsible for their\n        use of the app and that we disclaim all liability for any actions,\n        omissions, or consequences arising from or related to their use of the\n        app.\n      </p>\n      <h2>10. Indemnification:</h2>\n      <p>\n        <ol>\n          <li>\n            Indemnification: Users agree to indemnify, defend, and hold harmless\n            the app owner, its affiliates, and their respective officers,\n            directors, employees, and agents from and against any and all\n            claims, damages, losses, liabilities, costs, and expenses (including\n            reasonable attorneys' fees) arising from or related to their use of\n            the app, their violation of these terms and conditions, or their\n            infringement of any intellectual property or other rights of any\n            third party.\n          </li>\n        </ol>\n      </p>\n      <p>\n        Users shall defend the app owner and its affiliates at their own\n        expense, and the app owner reserves the right, at its own expense, to\n        assume the exclusive defense and control of any matter otherwise subject\n        to indemnification by users. Users agree to cooperate with the app owner\n        in the defense of any claim subject to indemnification.\n      </p>\n      <h2>11. Governing law and dispute resolution:</h2>\n      <ol>\n        <li>\n          <p>\n            Governing Law: These terms and conditions and any disputes arising\n            out of or in connection with the app or your use thereof shall be\n            governed by and construed in accordance with the users local laws,\n            without regard to its conflict of law principles.\n          </p>\n        </li>\n        <li>\n          <p>\n            Dispute Resolution: In the event of any dispute, controversy, or\n            claim arising out of or relating to these terms and conditions or\n            your use of the app, the parties shall first attempt to resolve the\n            dispute through good faith negotiations. If the dispute cannot be\n            resolved through negotiations within a reasonable time, either party\n            may submit the dispute to the local judicial system of the user.\n          </p>\n        </li>\n      </ol>\n      <h2>12. Changes to terms and conditions:</h2>\n      <ol>\n        <li>\n          <p>\n            Changes to Terms and Conditions: The app owner reserves the right,\n            in its sole discretion, to modify or update these terms and\n            conditions at any time without prior notice. As the app is currently\n            a proof of concept and in active development, users may not be\n            notified of changes to the terms and conditions. Users are advised\n            to periodically review the terms and conditions for any updates or\n            modifications.\n          </p>\n          <p>\n            Upon any update to the terms and conditions, the app may be\n            temporarily locked, and users will be required to agree to the\n            updated terms and conditions before regaining access to the app. By\n            continuing to use the app after any modifications to the terms and\n            conditions, users indicate their acceptance of such changes.\n          </p>\n        </li>\n      </ol>\n      <h2>13. Contact information:</h2>\n      <p>\n        Contact Information: The app is currently a proof of concept and not\n        associated with an established company or organization. If you have any\n        questions, concerns, or issues related to these terms and conditions or\n        the app, you may be able to contact our team via our{\" \"}\n        <a href=\"https://www.reddit.com/r/positive_intentions/\">Reddit</a> user\n        profile. We will make an effort to respond to your inquiries in a timely\n        manner.\n      </p>\n    </div>\n  );\n};\n\nexport const PrivacyPolicy = ({ padding }) => {\n  return (\n    <div style={{ padding }}>\n      <h2>Privacy Policy</h2>\n      <p>\n        <ol>\n          <li>\n            Data Storage: The app saves user and app data locally on the storage\n            provided by the user's browser. Users are responsible for ensuring\n            the security of their devices and browsers, and for following\n            security best practices to protect their stored data. The company\n            does not collect user data, apart from what is needed for monitoring\n            tools to ensure the app's stability and to make improvements.\n          </li>\n          <li>\n            Third-Party Services: The app uses PeerJS for establishing peer\n            connections and the official PeerJS server as the connection broker.\n            We are not affiliated with PeerJS and are not responsible for the\n            management of the PeerJS server. We may also use Sentry.io for error\n            monitoring and NLevel Software for analytics. We retain the right to\n            add analytics tools to help manage the stability of the app and make\n            improvements. The app uses data from openstreetmap.org for the map.\n          </li>\n          <li>\n            Data Access and User Rights: Users can access their data through the\n            app's user interface or their browser's inspect tools. The app may\n            provide functionality to export data for backup purposes. Users have\n            the right to delete any or all data stored within the app, subject\n            to the limitations of the app's design and the nature of\n            peer-to-peer communication.\n          </li>\n          <li>\n            Data Retention: User data is retained for as long as the user and\n            browser allow. Users are responsible for backing up their data and\n            managing the data stored within the app.\n          </li>\n          <li>\n            Reporting and Investigations: The app may include functionality to\n            report users, and we reserve the right for this functionality to\n            send necessary details for any investigation.\n          </li>\n          <li>\n            Compliance with Laws: Users of the positive-intentions are\n            responsible for complying with the laws in their place of residence.\n            Users should be aware of and adhere to any applicable privacy laws\n            and regulations. It is the user's responsibility to understand and\n            comply with any specific laws that apply to their use of the app.\n          </li>\n        </ol>\n      </p>\n      <p>\n        By using the app, you acknowledge and agree to these data privacy and\n        security guidelines. If you have any concerns or questions about how\n        your data is used or stored within the app, please contact the app's\n        developers for further information.\n      </p>\n    </div>\n  );\n};\n\nexport default TermsAndConditions;\n","import version1 from \"./TermsAndConditions-1.0.0\";\nimport version2, {PrivacyPolicy} from \"./TermsAndConditions-2.0.0\";\n\nexport default [\n  {\n    version: \"1.0.0\",\n    terms: version1,\n  },\n  {\n    version: \"2.0.0\",\n    terms: version2,\n    privacyPolicy: PrivacyPolicy,\n  },\n];\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { useTheme, makeStyles } from \"@mui/styles\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nconst useStyles = makeStyles((theme) => ({\n  canvasContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\", // Add this to position the delete icon\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    height: 200,\n  },\n  canvas: {\n    width: \"100%\",\n  },\n  deleteIcon: {\n    position: \"absolute\",\n    top: \"10px\", // Adjust top and right for positioning\n    right: \"10px\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst SignatureCanvas = ({ heading, onChange, defaultValue }) => {\n  const canvasContainerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [context, setContext] = useState(null);\n  const [hasContent, setHasContent] = useState(false);\n  const theme = useTheme();\n  const classes = useStyles();\n\n  useEffect(() => {\n    // Set the canvas size based on its container's dimensions\n    const canvasContainer = canvasContainerRef.current;\n    canvasRef.current.width = canvasContainer.clientWidth;\n    canvasRef.current.height = canvasContainer.clientHeight;\n\n    // Get the canvas context after setting its size\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    setContext(ctx);\n\n    // Set pen color based on the theme\n    ctx.strokeStyle = theme.palette.mode === \"dark\" ? \"#90caf9\" : \"#1565c0\";\n    ctx.fillStyle = theme.palette.mode === \"dark\" ? \"#90caf9\" : \"#1565c0\";\n\n    // Ensure that the correct stroke and fill colors are used\n    ctx.lineWidth = 2; // Adjust the line width as needed\n\n    // Clear the canvas before applying the color\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Load the initial value if provided\n    if (defaultValue) {\n      const img = new Image();\n      img.src = defaultValue;\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        setHasContent(true);\n      };\n    }\n  }, [theme, defaultValue]);\n\n  useEffect(() => {\n    // Prevent scrolling on touch devices while drawing\n    const preventScroll = (e) => {\n      if (isDrawing) {\n        e.preventDefault();\n      }\n    };\n\n    window.addEventListener(\"touchmove\", preventScroll, { passive: false });\n\n    return () => {\n      window.removeEventListener(\"touchmove\", preventScroll);\n    };\n  }, [isDrawing]);\n\n  const startDrawing = (e) => {\n    const { offsetX, offsetY } = getRelativeCoordinates(e);\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n    // Prevent scrolling on touch devices\n    e.preventDefault();\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n    const { offsetX, offsetY } = getRelativeCoordinates(e);\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n    // Prevent scrolling on touch devices\n    e.preventDefault();\n  };\n\n  const stopDrawing = () => {\n    context.closePath();\n    setIsDrawing(false);\n\n    // Convert canvas content to base64 and call the onChange function\n    const canvas = canvasRef.current;\n    const canvasDataUrl = canvas.toDataURL(\"image/png\"); // Change format as needed\n\n    // Call the onChange function with the canvas data URL\n    onChange(canvasDataUrl);\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    setHasContent(false);\n  };\n\n  const getRelativeCoordinates = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    let offsetX, offsetY;\n\n    if (e.type === \"touchstart\" || e.type === \"touchmove\") {\n      const touch = e.touches[0];\n      offsetX = touch.clientX - rect.left;\n      offsetY = touch.clientY - rect.top;\n    } else {\n      offsetX = e.clientX - rect.left;\n      offsetY = e.clientY - rect.top;\n    }\n\n    return { offsetX, offsetY };\n  };\n\n  return (\n    <Paper className={classes.canvasContainer} ref={canvasContainerRef}>\n      <Typography\n        sx={{\n          flexShrink: 0,\n          color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\n        }}\n      >\n        {heading}\n      </Typography>\n      <ClearIcon className={classes.deleteIcon} onClick={clearCanvas} />\n      <canvas\n        ref={canvasRef}\n        className={classes.canvas}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onTouchStart={startDrawing}\n        onTouchMove={draw}\n        onTouchEnd={stopDrawing}\n      />\n    </Paper>\n  );\n};\n\nexport default SignatureCanvas;\n","import React, { useState, useEffect } from \"react\";\n\n// steps:\n// 1. select to create or scan offer\n// 2. scan answer\n// 3. scan ice candidate 1\n// 4. scan ice candidate 2\n\nexport default ({\n    onConnect,\n    onReceive,\n}) => {\n\n    return (\n        <div>\n            <button onClick={onConnect}>Connect</button>\n            <button onClick={onReceive}>Receive</button>\n        </div>\n    );\n}","import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  updateUsername,\n  updatePeerId,\n  updateAvatar,\n  logout,\n  setInAppNotification,\n  setBrowserNotification,\n} from \"../../../redux/slices/userProfileSlice\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport QRCode from \"react-qr-code\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\nimport ConnectWithoutContactIcon from \"@mui/icons-material/ConnectWithoutContact\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Blockchain, { useBlockchain } from \"../../../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../../../blockchain/chains/profileChain\";\nimport { useTranslation } from \"react-i18next\";\nimport WebRTCWizard from \"../webrtc-wizard/WebRTCWizard\";\n\nimport QRReader from \"react-qr-scanner\";\n\nconst useStyles = makeStyles((theme) => ({\n  qrcodeReader: {\n    // height: '100vh',\n    width: \"100%\",\n    // top: 0,\n    // left: 0,\n    // position: 'absolute',\n    zIndex: 10000,\n  },\n}));\n\nconst ConnectToPeer = ({ qr, open, link, collapse }) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { contactId } = useParams();\n  const [result, setResult] = useState(\"No result\");\n  const [scanning, setScanning] = useState(false);\n\n  const qrcodeRef = useRef(null);\n  const [expanded, setExpanded] = React.useState([]);\n  const handleChange = (panel) => (event, isExpanded) => {\n    if (isExpanded) {\n      setExpanded((prevExpanded) => [...prevExpanded, panel]);\n    } else {\n      setExpanded((prevExpanded) =>\n        prevExpanded.filter((item) => item !== panel),\n      );\n    }\n  };\n  const [contactNamePreset, setContactNamePreset] = useState(\"\");\n  const [peerLink, setPeerLink] = useState(\"\");\n\n  const storedBlockchain = useSelector((state) => state.userProfile.blockchain);\n  const { compiledBlockchain: compiledProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: storedBlockchain,\n  });\n  // const storedConnectionId = useSelector((state) => state.userProfile.id);\n  const storedConnectionId = compiledProfile.connectionId;\n  const updateConnectionIdDispatch = (connectionId) =>\n    dispatch(updatePeerId(connectionId));\n\n  const handleConnectionIdChange = (e) => {\n    updateConnectionIdDispatch(e.target.value);\n  };\n\n  const handlePeerLinkChange = (e) => {\n    const value = e.target.value;\n    const previousValue = extractIDFromLink(peerLink) || \"\";\n\n    // Check if more than 2 characters have changed\n    const isPasted =\n      Math.abs(extractIDFromLink(value)?.length - previousValue.length) > 2;\n\n    if (isPasted) {\n      // Call a different function for paste event\n      setPeerLink(value);\n      handlePeerLinkConnect(value);\n    } else {\n      // Call the regular function for other change events\n      setPeerLink(value);\n    }\n  };\n\n  function extractIDFromLink(link) {\n    // Regular expression pattern to extract the ID\n    const pattern = /(login|contact)\\/(\\w+)/;\n\n    // Extracting the ID using the pattern\n    const match = link.match(pattern);\n\n    // If a match is found, return the ID\n    if (match && match.length > 2) {\n      return match[2];\n    }\n\n    // If no match is found, return null or handle the error as desired\n    return null;\n  }\n\n  const handlePeerLinkConnect = (link) => {\n    const peerLink = link || peerLink || \"\";\n    if (\n      !extractIDFromLink(peerLink) ||\n      extractIDFromLink(peerLink) === storedConnectionId\n    ) {\n      return;\n    }\n    if (collapse) {\n      setExpanded([]);\n    } else {\n      navigate(`/contact/${extractIDFromLink(peerLink)}`);\n    }\n  };\n\n  const handleCopyConnectionIdToClipboard = () => {\n    navigator.clipboard.writeText(\n      `${window.location.origin}/#/login/${storedConnectionId}${contactNamePreset ? `/${contactNamePreset}` : \"\"}`,\n    );\n  };\n\n  const handleScan = (data) => {\n    if (!data?.text) return;\n    data && setResult(data);\n    const peerLink = new URL(data.text)?.hash?.split?.('/')[2];\n    peerLink && navigate(`/login/${peerLink}`);\n\n    if (collapse) {\n      setExpanded([]);\n    }\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  return (\n    <Accordion\n      expanded={expanded.includes(\"share-panel\") || qr || open || link}\n      onChange={qr || open || link ? undefined : handleChange(\"share-panel\")}\n    >\n      <AccordionSummary\n        expandIcon={!!qr || open || link ? undefined : <ExpandMoreIcon />}\n        aria-controls=\"panel4bh-content\"\n        id=\"panel4bh-header\"\n      >\n        <Typography sx={{ flexShrink: 0 }}>\n          {t(\"components.connectToPeer.connectToPeer\")}\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Accordion\n          expanded={expanded.includes(\"share-link\") || link}\n          onChange={handleChange(\"share-link\")}\n        >\n          <AccordionSummary\n            expandIcon={link ? undefined : <ExpandMoreIcon />}\n            aria-controls=\"panel4bh-content\"\n            id=\"panel4bh-header\"\n          >\n            <Typography noWrap sx={{ flexShrink: 0 }}>\n              {t(\"components.connectToPeer.shareLink\")}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            {/* <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"contactNamePreset\"\n                  label=\"Set contact name\"\n                  name=\"contactNamePreset\"\n                  defaultValue={contactNamePreset}\n                  onChange={handleContactNamePresetChange}\n                /> */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label={t(\"components.connectToPeer.shareToConnect\")}\n              name=\"connectionId\"\n              value={`${window.location.origin}/#/login/${storedConnectionId}${contactNamePreset ? `/${contactNamePreset}` : \"\"}`}\n              onChange={handleConnectionIdChange}\n              InputProps={{\n                readOnly: true,\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleCopyConnectionIdToClipboard}\n                      edge=\"end\"\n                    >\n                      <ContentCopyIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n            {!contactId && (\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                color={\n                  extractIDFromLink(peerLink) &&\n                  extractIDFromLink(peerLink) !== storedConnectionId\n                    ? \"primary\"\n                    : \"error\"\n                }\n                id=\"connectionId\"\n                label={t(\"components.connectToPeer.enterLink\")}\n                name=\"connectionId\"\n                value={peerLink}\n                autoComplete=\"off\"\n                onChange={handlePeerLinkChange}\n                onKeyPress={(ev) => {\n                  if (ev.key === \"Enter\" && !ev.shiftKey) {\n                    ev.preventDefault();\n                    handlePeerLinkConnect();\n                  }\n                }}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handlePeerLinkConnect}\n                        edge=\"end\"\n                        disabled={\n                          !peerLink ||\n                          extractIDFromLink(peerLink) === storedConnectionId\n                        }\n                        color={\n                          peerLink\n                            ? extractIDFromLink(peerLink) &&\n                              extractIDFromLink(peerLink) !== storedConnectionId\n                              ? \"primary\"\n                              : \"error\"\n                            : \"default\"\n                        }\n                      >\n                        <ConnectWithoutContactIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            )}\n          </AccordionDetails>\n        </Accordion>\n        <Accordion\n          expanded={expanded.includes(\"panel4\") || qr}\n          onChange={handleChange(\"panel4\")}\n        >\n          <AccordionSummary\n            expandIcon={qr ? undefined : <ExpandMoreIcon />}\n            aria-controls=\"panel4bh-content\"\n            id=\"panel4bh-header\"\n          >\n            <Typography sx={{ flexShrink: 0 }}>\n              {t(\"components.connectToPeer.shareQr\")}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails style={{ background: \"white\" }}>\n            {!scanning && (\n              <QRCode\n                ref={qrcodeRef}\n                size={256}\n                style={{ height: \"auto\", maxWidth: \"100%\", width: \"100%\" }}\n                value={`${window.location.origin}/#/login/${storedConnectionId}`}\n                viewBox={`0 0 256 256`}\n              />\n            )}\n\n            {scanning && (\n              <QRReader\n                delay={300}\n                className={classes.qrcodeReader}\n                onError={handleError}\n                onScan={handleScan}\n                constraints={{\n                  video: {\n                    facingMode: \"environment\",\n                  },\n                }}\n              />\n            )}\n\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              onClick={() => setScanning(!scanning)}\n              color={scanning ? \"error\" : \"primary\"}\n            >\n              {scanning\n                ? t(\"components.connectToPeer.stopScanning\")\n                : t(\"components.connectToPeer.scanQr\")}\n            </Button>\n          </AccordionDetails>\n        </Accordion>\n        {!!false && (<Accordion\n          expanded={expanded.includes(\"panel5\")}\n          onChange={handleChange(\"panel5\")}\n        >\n          <AccordionSummary\n            expandIcon={qr ? undefined : <ExpandMoreIcon />}\n            aria-controls=\"panel4bh-content\"\n            id=\"panel4bh-header\"\n          >\n            <Typography sx={{ flexShrink: 0 }}>\n              {t(\"components.connectToPeer.shareWebRtcQr\")}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <WebRTCWizard />\n          </AccordionDetails>\n        </Accordion>)}\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default ConnectToPeer;\n","// import React, { useState } from 'react';\n// import TextField from '@mui/material/TextField';\n// import Button from '@mui/material/Button';\n// import { useSelector, useDispatch } from 'react-redux'\n// import { updateUsername } from '../../redux/slices/userProfileSlice';\n// import { useNavigate } from \"react-router-dom\";\n// import AppHeader from '../../atomic/molecules/app-header/AppHeader';\n// import Container from '@mui/material/Container';\n// import Box from '@mui/material/Box';\n\n// export default function LoginForm() {\n//   // const classes = useStyles();\n//   const [username, setUsername] = useState('');\n//   const navigate = useNavigate();\n\n//   const storedUsername = useSelector((state) => state.userProfile.username)\n//   const dispatch = useDispatch();\n//   const updateUsernameDispatch = (username) => dispatch(updateUsername(username));\n\n//   const handleUsernameChange = (event) => {\n//     setUsername(event.target.value);\n//   };\n\n//   const isSubmitDisabled = !username;\n\n//   // make the form submit button dispatch the update action for username\n//   return (\n//     <Container maxWidth={false} disableGutters>\n//       <AppHeader\n//         title=\"Login\"\n//       />\n\n//       {/* <box>\n\n//       </box>\n\n//       <Box>\n//         <form noValidate autoComplete=\"off\" style={{ padding: '20px' }}\n//           onSubmit={(event) => {\n//             event.preventDefault();\n//             updateUsernameDispatch(username);\n//           }}\n//         >\n//           <TextField\n//             id=\"username\"\n//             label=\"Username\"\n//             value={username}\n//             onChange={handleUsernameChange}\n//           />\n//           <br />\n//           <br />\n//           <Button\n//             variant=\"contained\"\n//             color=\"primary\"\n//             disabled={isSubmitDisabled}\n//             onClick={() => {\n//               // update user name in redux and navigate to the chat page\n//               updateUsernameDispatch(username);\n//               navigate('/conversations');\n//             }}\n//           >\n//             Submit\n//           </Button>\n//           <div>Username: {storedUsername || 'not set'}</div>\n//         </form>\n//       </Box>\n\n//     </Container> */}\n\n//     <Container maxWidth={false} disableGutters>\n//       <Box\n//         sx={{\n//           display: 'flex',\n//           flexDirection: 'column',\n//           height: '100vh',\n//           justifyContent: 'center',\n//           alignItems: 'center',\n//         }}\n//       >\n//         {/* random image related to \"login\" */}\n//         <img  src=\"https://source.unsplash.com/random/400x200?login\" alt=\"random\" />\n\n//         <Box\n//           sx={{\n//             display: 'flex',\n//             flexDirection: 'column',\n//             justifyContent: 'center',\n//             alignItems: 'center',\n//             width: '400px',\n//           }}\n//         >\n//           <form noValidate autoComplete=\"off\" style={{ padding: '20px' }}\n//             onSubmit={(event) => {\n//               event.preventDefault();\n//               updateUsernameDispatch(username);\n//             }}\n//           >\n//             <TextField\n//               id=\"username\"\n//               label=\"Username\"\n//               value={username}\n//               onChange={handleUsernameChange}\n//               fullWidth\n//             />\n//             <br />\n//             <br />\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               disabled={isSubmitDisabled}\n//               fullWidth\n//               onClick={() => {\n//                 // update user name in redux and navigate to the chat page\n//                 updateUsernameDispatch(username);\n//                 navigate('/conversations');\n//               }}\n//             >\n//               Login\n//             </Button>\n//             {/* <div>Username: {storedUsername\n//               || 'not set'}</div> */}\n//           </form>\n//               </Box>\n//       </Box>\n//     </Container>\n\n//     </Container>\n//   );\n\n//   // return (\"hello world\")\n// }\n\nimport React, { useState, useRef, useMemo, useEffect, Component } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\nimport {\n  updateUsername,\n  updateAgreedToTerms,\n  setUserProfile,\n  updateAvatar,\n  setInAppNotification,\n  setBrowserNotification,\n  addToBlockchain,\n} from \"../../redux/slices/userProfileSlice\";\nimport { setPods } from \"../../redux/slices/podsSlice\";\nimport { setContacts } from \"../../redux/slices/contactsSlice\";\nimport { setEncryption } from \"../../redux/slices/encryptionSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport AllTermsAndConditions from \"../../atomic/atom/termsAndConditions\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport {\n  // useSnackbar,\n  useNotification,\n} from \"../../notifications/notificationManager\";\nimport Switch from \"@mui/material/Switch\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/profileChain\";\nimport SignatureCanvas from \"../../atomic/atom/signatureCanvas/SignatureCanvas\";\nimport { ColorModeContext } from \"../../../App.tsx\";\n// import {Adsense} from '@ctrl/react-adsense';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport JSZip from \"jszip\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCryptography } from \"cryptography/Cryptography\";\nimport { CoachMark } from \"react-coach-mark\";\nimport ConnectToPeer from \"../../atomic/molecules/connect-to-peer/ConnectToPeer.js\";\nimport hipaintImage from \"../../../../public/logo512.png\";\nimport decentralisedImage from \"../../../../public/home-icons/decentralized.png\";\nimport agnosticImage from \"../../../../public/home-icons/agnostic.png\";\nimport dataImportExportImage from \"../../../../public/home-icons/data-export-import.png\";\nimport noRegistration from \"../../../../public/home-icons/no-registration.png\";\nimport pushNotifications from \"../../../../public/home-icons/push-notifications.png\";\nimport videoCalls from \"../../../../public/home-icons/video-calls.png\";\n\nimport avatar1 from \"../../../../public/avatars/1.jpg\";\nimport avatar2 from \"../../../../public/avatars/2.jpg\";\nimport avatar3 from \"../../../../public/avatars/3.jpg\";\nimport avatar4 from \"../../../../public/avatars/4.jpg\";\nimport avatar5 from \"../../../../public/avatars/5.jpg\";\nimport avatar6 from \"../../../../public/avatars/6.jpg\";\nimport avatar7 from \"../../../../public/avatars/7.jpg\";\nimport avatar8 from \"../../../../public/avatars/8.jpg\";\nimport avatar9 from \"../../../../public/avatars/9.jpg\";\n\n\nconst avatars = [\n  {\n    src: avatar1,\n  },\n  {\n    src: avatar2,\n  },\n  {\n    src: avatar3,\n  },\n  {\n    src: avatar4,\n  },\n  {\n    src: avatar5,\n  },\n  {\n    src: avatar6,\n  },\n  {\n    src: avatar7,\n  },\n  {\n    src: avatar8,\n  },\n  {\n    src: avatar9,\n  },\n];\n\nconst SimpleSlider = ({ onSelect }) => {\n  const settings = {\n    className: \"center\",\n    centerMode: true,\n    infinite: true,\n    centerPadding: \"30px\",\n    slidesToShow: 2,\n    speed: 500,\n    style: {\n      height: '108px'\n    }\n  };\n  // heading with artist link dark mode adjusted color based on the default from material ui for text\n  return (\n    <div style={{ margin: \"0 25px 20px\" }}>\n      <Slider {...settings}>\n        {avatars.map((avatar, index) => (\n          <div key={index}>\n            <Button onClick={() => onSelect(avatar.src)}>\n              <Avatar\n                src={avatar.src}\n                style={{\n                  minHeight: \"100px\",\n                  minWidth: \"100px\",\n                  margin: \"auto\",\n                }}\n              />\n            </Button>\n          </div>\n        ))}\n      </Slider>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    height: theme.spacing(8),\n  },\n  form: {\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  img: {\n    width: \"100%\",\n  },\n  hidden: {\n    display: \"none\",\n    visibility: \"hidden\",\n  },\n}));\n\nexport default function LoginPage() {\n  const { chance, randomString } = useCryptography();\n  const { contactId, contactName } = useParams();\n  const {\n    version: latestTermsAndConditionsVersion,\n    terms: TermsAndConditions,\n  } = AllTermsAndConditions[AllTermsAndConditions.length - 1];\n  const classes = useStyles();\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  const store = useStore();\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n  const updateUsernameDispatch = (username) =>\n    dispatch(updateUsername(username));\n  const updateAgreedToTermsDispatch = (agreedToTerms) =>\n    dispatch(updateAgreedToTerms(agreedToTerms));\n  const setUserProfileDispatch = (userProfile) =>\n    dispatch(setUserProfile(userProfile));\n  const updateAvatarDispatch = (avatar) => dispatch(updateAvatar(avatar));\n  const setPodsDispatch = (pods) => dispatch(setPods(pods));\n  const setContactsDispatch = (contacts) => dispatch(setContacts(contacts));\n  const setEncryptionDispatch = (encryption) =>\n    dispatch(setEncryption(encryption));\n  const setInAppNotificationDispatch = (inAppNotification) =>\n    dispatch(setInAppNotification(inAppNotification));\n  const setBrowserNotificationDispatch = (browserNotification) =>\n    dispatch(setBrowserNotification(browserNotification));\n\n  const contacts = useSelector((state) => state.contacts) || [];\n  // const { enqueueSnackbar } = useSnackbar();\n  // const sendNotification = useNotification();\n\n  const fileRef = useRef(null);\n  const setAvatarRef = useRef(null);\n  // make it so the form submits and updates the username in redux and navigates to the conversations page\n  const [username, setUsername] = useState(contactName ?? `${chance.animal()}`);\n  const [avatarBase64, setAvatarBase64] = useState(null);\n  const [agreedToTerms, setAgreedToTerms] = useState(false);\n  // const storeInAppNotication = useSelector((state) => state?.userProfile?.inAppNotification)\n  // const storeBrowserNotication = useSelector((state) => state?.userProfile?.browserNotification)\n  const addToBlockchainDispatch = ({ block, blocks, storage }) =>\n    dispatch(addToBlockchain({ block, blocks, storage }));\n  const [expanded, setExpanded] = React.useState(false);\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  const storedBlockchain = useSelector((state) => state.userProfile.blockchain);\n  const { compiledBlockchain: compiledProfile, addBlocks: addBlocksToProfile } =\n    useBlockchain({\n      compiler: profileCompiler,\n      blockchain: storedBlockchain,\n      dispatch: addToBlockchainDispatch,\n    });\n\n  // const profileBlockchain = useMemo(() => new Blockchain({\n  //   compiler: profileCompiler,\n  //   chain: storedBlockchain.chain.filter(b => !!b) || [],\n  //   storage: storedBlockchain.storage || {},\n  // }), [storedBlockchain.chain, storedBlockchain.storage]);\n\n  // const compiledProfile = useMemo(() => profileBlockchain.compile(), [profileBlockchain]);\n  const storedUsername = compiledProfile.displayName;\n  const storedId = compiledProfile.id;\n  const storedConnectionId = compiledProfile.connectionId;\n  const storedInAppNotification = compiledProfile.settings?.inAppNotification;\n  const storedBrowserNotification =\n    compiledProfile.settings?.browserNotification;\n\n  const [peerjsServer, setPeerjsServer] = useState(\"\");\n  const handlePeerjsServerChange = (event) => {\n    setPeerjsServer(event.target.value);\n  };\n  const [encryptionSignature, setEncryptionSignature] = useState(\"\");\n  const handleEncryptionSignatureChange = (signature) => {\n    setEncryptionSignature(signature);\n  };\n\n  const setAvatar = (avatar) => {\n    fetch(avatar)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = function () {\n          setAvatarBase64(reader.result);\n        };\n      });\n  };\n\n  useEffect(() => {\n    //get random avatar\n    const randomAvatar =\n      avatars[Math.floor(Math.random() * avatars.length)].src;\n    setAvatar(randomAvatar);\n  }, []);\n\n  const isInstalledPwa = useMemo(() => {\n    return (\n      window.matchMedia(\"(display-mode: standalone)\").matches ||\n      window.navigator.standalone ||\n      document.referrer.includes(\"android-app://\")\n    );\n  }, []);\n\n  // list of random groups from chancejs\n  const randomGroups = [\n    'Random String',\n    'Animals',\n    'Countries',\n    'Months',\n  ]\n\n  const [idType, setIdType] = useState(randomGroups[0]);\n  const [fromUser, setFromUser] = useState(storedId || randomString());\n\n  const removeAllNonAlphaNumeric = (str) => {\n    // except hyphen\n    return str.replace(/[^a-zA-Z0-9-]/g, '');\n  }\n\n  const setNewId = () => {\n    if (idType === 'Random String') {\n      setFromUser(randomString());\n    } else if (idType === 'Animals') {\n      // create list of 6 animals as a hyphen separated string\n      const animals = Array.from({ length: 6 }, () => chance.animal()).map((a) => a.toLowerCase().replace(/\\s/g, '-')).join('-');\n\n      setFromUser(removeAllNonAlphaNumeric(animals));\n    } else if (idType === 'Countries') {\n      const countries = Array.from({ length: 6 }, () => chance.country({ full: true })).map((a) => a.toLowerCase().replace(/\\s/g, '-')).join('-');\n      setFromUser(removeAllNonAlphaNumeric(countries));\n    } else if (idType === 'Months') {\n      const months = Array.from({ length: 6 }, () => chance.month()).map((a) => a.toLowerCase().replace(/\\s/g, '-')).join('-');\n      setFromUser(months);\n    }\n  }\n\n  useEffect(() => {\n    setNewId();\n  }, [idType]);\n\n  // const storedUsername = compiledProfile.displayName;\n  // const storedConnectionId = compiledProfile.connectionId;\n  // const storedInAppNotification = compiledProfile.settings?.inAppNotification;\n  // const storedBrowserNotification = compiledProfile.settings?.browserNotification;\n\n  // useEffect(() => {\n  //   console.log({ storedBlockchain, compiledProfile, profileBlockchain })\n  //   if (storedBlockchain.chain.length === 0) {\n\n  //     const newProfileBlocks = [\n  //       ...blockBuilders().updateId({ from: fromUser, id: 'username123' }),\n  //       ...blockBuilders().updateConnectionId({ from: fromUser, connectionId: fromUser }),\n  //       ...blockBuilders().updateDisplayName({ from: fromUser, displayName: 'username123' }),\n  //       ...blockBuilders().updateAvatar({ from: fromUser, avatar: '' }),\n  //       ...blockBuilders().updateAgreedToTerms({ from: fromUser, agreedToTerms: 'latestTermsAndConditionsVersion' }),\n  //       ...blockBuilders().updateInAppNotification({ from: fromUser, inAppNotification: true }),\n  //       ...blockBuilders().updateBrowserNotification({ from: fromUser, browserNotification: false }),\n  //     ];\n  //     profileBlockchain.addBlocks(newProfileBlocks);\n  //     const pendingUpdate = profileBlockchain.getUpdate();\n  //     console.log({pendingUpdate})\n\n  //     addToBlockchainDispatch({\n  //       blocks: pendingUpdate.pendingBlocks,\n  //       storage: pendingUpdate.pendingStorage,\n  //     });\n\n  //     console.log({\n  //       compiledProfile,\n  //       pendingUpdate,\n  //       newProfileBlocks,\n  //       storedBlockchain,\n  //     });\n  //   }\n  // }, []);\n\n  const [appNotifications, setAppNotifications] = useState(\n    storedInAppNotification ?? true,\n  );\n  const [browserNotifications, setBrowserNotifications] = useState(\n    storedBrowserNotification ?? false,\n  );\n\n  const handleAppNotificationChange = (event) => {\n    setAppNotifications(event.target.checked);\n  };\n\n  const handleBrowserNotificationChange = (event) => {\n    setBrowserNotifications(event.target.checked);\n  };\n\n  const inAppNotifications = {\n    fullWidth: true,\n    inputProps: { \"aria-label\": \"Allow in-app notification\" },\n    defaultChecked: appNotifications,\n    label: \"In-app notifications\",\n    onChange: handleAppNotificationChange,\n  };\n  const browserNotification = {\n    fullWidth: true,\n    inputProps: { \"aria-label\": \"Allow browser notification\" },\n    defaultChecked: browserNotifications,\n    label: \"Browser notifications\",\n    onChange: handleBrowserNotificationChange,\n  };\n\n  useEffect(() => {\n    if (contactId && storedUsername && storedConnectionId !== contactId) {\n      navigate(`/pods`);\n      navigate(`/contacts`);\n      navigate(`/contact/${contactId}`);\n    }\n\n    if (!contactId && storedUsername && contacts.length > 0) {\n      navigate(`/pods`);\n    }\n  }, [contactId, storedUsername, contacts]);\n\n  const { t, i18n } = useTranslation();\n  const pageTitle = t(\"loginPage.pageTitle\");\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    // // update user name in redux and navigate to the chat page\n    // updateUsernameDispatch(username);\n    // updateAvatarDispatch(avatarBase64);\n    // //get last item from TermsAndConditions\n    // updateAgreedToTermsDispatch(latestTermsAndConditionsVersion);\n\n    const newProfileBlocks = [\n      ...blockBuilders().updateId({ from: fromUser, id: fromUser }),\n      ...blockBuilders().updateConnectionId({\n        from: fromUser,\n        connectionId: fromUser,\n      }),\n      ...blockBuilders().updateDisplayName({\n        from: fromUser,\n        displayName: username,\n      }),\n      ...blockBuilders().updateAvatar({ from: fromUser, avatar: avatarBase64 }),\n      ...blockBuilders().updateAgreedToTerms({\n        from: fromUser,\n        agreedToTerms: latestTermsAndConditionsVersion,\n      }),\n      ...blockBuilders().updateInAppNotification({\n        from: fromUser,\n        inAppNotification: appNotifications,\n      }),\n      ...blockBuilders().updateBrowserNotification({\n        from: fromUser,\n        browserNotification: browserNotifications,\n      }),\n      ...blockBuilders().updatePeerjsServer({ from: fromUser, peerjsServer }),\n      ...blockBuilders().updateEncryptionSignature({\n        from: fromUser,\n        encryptionSignature,\n      }),\n    ];\n\n    addBlocksToProfile(newProfileBlocks);\n    // const pendingUpdate = profileBlockchain.getUpdate();\n\n    // addToBlockchainDispatch({\n    //   blocks: pendingUpdate.pendingBlocks,\n    //   storage: pendingUpdate.pendingStorage,\n    // });\n  };\n\n  const tacCheckbox = {\n    inputProps: {\n      \"aria-label\": \"terms and conditions\",\n      onClick: (e) => {\n        e.stopPropagation();\n        console.log(\"checked\", e.target.checked);\n        setAgreedToTerms(e.target.checked);\n      },\n    },\n    checked: agreedToTerms,\n  };\n\n  async function handleFile({ target: { files } }) {\n    const f = files[0];\n\n    try {\n      const zip = await JSZip.loadAsync(f); // Use await here\n\n      zip.forEach(async (relativePath, zipEntry) => {\n        const content = await zip.file(zipEntry.name).async(\"string\");\n        const { pods, contacts, encryption, userProfile } = JSON.parse(content);\n        setPodsDispatch(pods);\n        setContactsDispatch(contacts);\n        setEncryptionDispatch(encryption);\n        setUserProfileDispatch(userProfile);\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  const handleAvatar = ({ target: { files } }) => {\n    const f = files[0];\n    const img = new Image();\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    img.onload = () => {\n      const maxWidthHeight = 500;\n      let width = img.width;\n      let height = img.height;\n\n      if (width > height) {\n        if (width > maxWidthHeight) {\n          height *= maxWidthHeight / width;\n          width = maxWidthHeight;\n        }\n      } else {\n        if (height > maxWidthHeight) {\n          width *= maxWidthHeight / height;\n          height = maxWidthHeight;\n        }\n      }\n\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, height);\n      const base64String = canvas.toDataURL(\"image/jpeg\", 1.0);\n      setAvatarBase64(base64String);\n    };\n    img.src = URL.createObjectURL(f);\n  };\n\n  //   const [deferredPrompt, setDeferredPrompt] = useState(null);\n  //   useEffect(() => {\n  //     const handleBeforeInstallPromptEvent = (e) => {\n  //         console.log('setting defferedPrompt')\n  //         e.preventDefault();\n  //         setDeferredPrompt(e);\n  //     };\n  //     if (!deferredPrompt) window.addEventListener('beforeinstallprompt', handleBeforeInstallPromptEvent);\n\n  //     const bipEvent = new Event('beforeinstallprompt');\n\n  //     // Define the prompt method on the event object\n  //     bipEvent.prompt = () => {\n  //         return new Promise((resolve) => {\n  //             // Simulate user accepting the prompt\n  //             resolve({ outcome: 'accepted' });  // or 'dismissed' to simulate user dismissing the prompt\n  //         });\n  //     };\n\n  //     // Dispatch the custom event to trigger your event handler\n  //     window.dispatchEvent(bipEvent);\n  //     return () => {\n  //         console.log('removing defferedPrompt')\n  //         window.removeEventListener('beforeinstallprompt', handleBeforeInstallPromptEvent);\n  //     };\n  // }, []);\n\n  const [activatedNumber, setActivateNumber] = useState(null);\n  const NextButton = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => setActivateNumber(activatedNumber + 1)}\n    >\n      Next\n    </Button>\n  );\n  const PrevButton = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => setActivateNumber(activatedNumber - 1)}\n    >\n      Prev\n    </Button>\n  );\n\n  const ref1 = useRef(null);\n  const ref2 = useRef(null);\n  const ref3 = useRef(null);\n  const ref4 = useRef(null);\n  const ref5 = useRef(null);\n  const ref6 = useRef(null);\n  const ref7 = useRef(null);\n\n  const coachList = [\n    // {\n    //   activate: activatedNumber === 0,\n    //   component:\n    //     <Typography style={{\n    //     color: 'black',\n    //   }}>Info and app settings <br />{NextButton} </Typography>,\n    //   reference: ref1,\n    //   tooltip: { position: 'top' }\n    // },\n    {\n      activate: activatedNumber === 0,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          (Optional) Set profile details like display name and avatar <br />\n          {NextButton}{\" \"}\n        </Typography>\n      ),\n      reference: ref2,\n      tooltip: { position: \"top\" },\n    },\n    {\n      activate: activatedNumber === 1,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          (Optional) Some extra app settings if you want to change the default\n          values <br />\n          {PrevButton}\n          {NextButton}\n        </Typography>\n      ),\n      reference: ref3,\n      tooltip: { position: \"top\" },\n    },\n    {\n      activate: activatedNumber === 2,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          Must accept terms and conditions before using the app\n          <br />\n          {PrevButton}\n          {NextButton}\n        </Typography>\n      ),\n      reference: ref4,\n      tooltip: { position: \"top\" },\n    },\n    {\n      activate: activatedNumber === 3,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          Get started in using the app <br />\n          {PrevButton}\n          {NextButton}\n        </Typography>\n      ),\n      reference: ref5,\n      tooltip: { position: \"top\" },\n    },\n    {\n      activate: activatedNumber === 4,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          (Optional) Load a profile from a previous backup <br />\n          {PrevButton}\n          {NextButton}\n        </Typography>\n      ),\n      reference: ref6,\n      tooltip: { position: \"top\" },\n    },\n  ];\n\n  const coach = coachList[activatedNumber];\n\n  const isSubmitDisabled = !username || !agreedToTerms;\n\n  const handleCopyConnectionIdToClipboard = () => {\n    navigator.clipboard.writeText(\n      `${window.location.origin}/#/login/${storedConnectionId}`,\n    );\n  };\n\n  if (contactId && storedUsername && storedConnectionId === contactId) {\n    return (\n      <PageContainer\n        headerProps={{\n          title: \"Share this URL with a peer\",\n        }}\n        className={classes.form}\n      >\n        <form noValidate className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"connectionId\"\n            label=\"Share to connect\"\n            name=\"connectionId\"\n            defaultValue={`${window.location.origin}/#/login/${storedConnectionId}`}\n            readOnly\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleCopyConnectionIdToClipboard}\n                    edge=\"end\"\n                  >\n                    <ContentCopyIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </form>\n      </PageContainer>\n    );\n  }\n\n  // the hipain image to use as the default file\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: pageTitle,\n        customButtons: [\n          // {\n          //   icon: 'help',\n          //   onClick: () => setActivateNumber(0)\n          // }\n        ],\n        menuProps: {\n          icon: \"more\",\n          ref: ref1,\n          items: [\n            // {\n            //   text: t(\"components.menuItems.labs\"),\n            //   icon: \"labs\",\n            //   subMenuItems: [\n            //     {\n            //       text: t(\"podsPage.gram\"),\n            //       icon: \"gram\",\n            //       onClick: () => navigate(\"/feed\"),\n            //     },\n            //     {\n            //       text: t(\"podsPage.verse\"),\n            //       icon: \"verse\",\n            //       onClick: () => navigate(\"/verse\"),\n            //     },\n            //     {\n            //       text: t(\"podsPage.map\"),\n            //       icon: \"map\",\n            //       onClick: () => navigate(\"/map\"),\n            //     },\n            //     {\n            //       text: t(\"podsPage.qr\"),\n            //       icon: \"qr\",\n            //       onClick: () => navigate(\"/qr\"),\n            //     },\n            //     {\n            //       text: t(\"podsPage.webrtc\"),\n            //       icon: \"connect\",\n            //       onClick: () => navigate(\"/webrtc\"),\n            //     },\n            //     {\n            //       text: t(\"podsPage.hands\"),\n            //       icon: \"hand\",\n            //       onClick: () => navigate(\"/hands\"),\n            //     }\n            //   ],\n            // },\n            // { text: t('components.menuItems.about'), icon: 'info', onClick: () => window.location = 'https://positive-intentions.com' },\n            // {\n            //   text: t('components.menuItems.options'),\n            //   icon: 'settings',\n            //   subMenuItems: [\n            //     { text: theme.palette.mode === 'dark' ? t('components.menuItems.lightMode') : t('components.menuItems.darkMode'), icon: theme.palette.mode === 'dark' ? 'lightMode' : 'darkMode', onClick: colorMode.toggleColorMode },\n            //     !isInstalledPwa ? { text: isFullScreen ? t('components.menuItems.exitFullscreen') : t('components.menuItems.fullscreen') , icon: isFullScreen ? 'fullscreenExit' : 'fullscreen', onClick: () => setIsFullScreen(!isFullScreen) } : null,\n            //     !isInstalledPwa ? {\n            //       text: t('components.menuItems.install'), icon: 'install', onClick: () => {\n            //           sendNotification?.(t('components.menuItems.requestingToInstall'), { variant: 'info' })\n\n            //           if (deferredPrompt) {\n            //               deferredPrompt.prompt()\n            //                   .then((result) => {\n            //                       if (result.outcome === 'accepted') {\n            //                           console.log('Installation accepted');\n            //                           sendNotification?.(t('components.menuItems.installPossible'), { variant: 'success' })\n\n            //                       } else {\n            //                           console.log('Installation dismissed');\n            //                           sendNotification?.(t('components.menuItems.installDismissed'), { variant: 'warning' })\n\n            //                       }\n            //                   })\n            //                   .catch((error) => {\n            //                       console.error('Installation prompt error:', error);\n            //                       sendNotification?.(t('components.menuItems.installFailed'), { variant: 'warning' })\n\n            //                   });\n            //           } else {\n            //               console.error('The beforeinstallprompt event has not been fired.');\n            //               sendNotification?.(t('components.menuItems.installNotSupported'), { variant: 'warning' })\n            //           }\n            //       }\n            //   } : null,\n            //   ]\n            // },\n\n            // { text: t('components.menuItems.language'), icon: 'translate', onClick: () => navigate('/privacy'), subMenuItems: [\n            //   { text: 'English', onClick: () => i18n.changeLanguage('en') },\n            //   { text: 'Spanish', onClick: () => i18n.changeLanguage('es') },\n            //   { text: 'Mandarin', onClick: () => i18n.changeLanguage('zh') },\n            //   { text: 'Gujrati', onClick: () => i18n.changeLanguage('gu') },\n            // ] },\n          ],\n        },\n      }}\n    >\n      <CoachMark {...coach} />\n\n      {/* add an imagae at the top */}\n      {/* {avatarBase64 && (<img className={classes.img} src={avatarBase64} alt=\"random\" />)} */}\n      <form noValidate className={classes.form}>\n        <Avatar\n          src={hipaintImage}\n          style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n        />\n        {!false && (\n          <>\n            <br />\n            <Typography variant=\"p\" gutterBottom>\n              {/* {t(\"loginPage.welcome\")}\n              <br />\n              <br />\n              <Avatar\n                src={decentralisedImage}\n                style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n              />\n              {t(\"loginPage.decentralized\")}\n              <br />\n              <br />\n              <Avatar\n                src={agnosticImage}\n                style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n              />\n              {t(\"loginPage.agnostic\")}\n              <br />\n              <br />\n              <Avatar\n                src={dataImportExportImage}\n                style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n              />\n              {t(\"loginPage.dataImportExport\")}\n              <br />\n              <br />\n              <Avatar\n                src={noRegistration}\n                style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n              />\n              {t(\"loginPage.noInstall\")}\n              <br />\n              <br />\n              <Avatar\n                src={pushNotifications}\n                style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n              />\n              {t(\"loginPage.pushNotifications\")}\n              <br />\n              <br />\n              <Avatar\n                src={videoCalls}\n                style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n              />\n              {t(\"loginPage.p2pCalls\")}\n              <br />\n              <br /> */}\n              <Typography variant=\"body1\" gutterBottom>\n                {t(\"loginPage.featuresInclude\")}\n                <ul>\n                  <li>{t(\"loginPage.noCookies\")}</li>\n                  <li>{t(\"loginPage.noRegistration\")}</li>\n                  <li>{t(\"loginPage.noInstalling\")}</li>\n                  <li>{t(\"loginPage.groupMessaging\")}</li>\n                  <li>{t(\"loginPage.textMessaging\")}</li>\n                  <li>{t(\"loginPage.multimediaMessaging\")}</li>\n                  <li>{t(\"loginPage.videoCalls\")}</li>\n                  <li>{t(\"loginPage.dataOwnership\")}</li>\n                  <li>{t(\"loginPage.screensharing\")}</li>\n                  <li>{t(\"loginPage.fileTransfer\")}</li>\n                </ul>\n                {t(\"loginPage.getStarted\")}\n              </Typography>\n            </Typography>\n            {/* some spacing */}\n            <br />\n\n            {(storedUsername && contacts.length === 0)\n              ? (\n                <div className={classes.connect}>\n                  <ConnectToPeer\n                    open={!contacts.length}\n                    link={!contacts.length}\n                  />\n                </div>\n              )\n              : (\n                <>\n\n                  <Accordion\n                    ref={ref2}\n                    expanded={expanded === \"profile\"}\n                    onChange={handleChange(\"profile\")}\n                  >\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel4bh-content\"\n                      id=\"panel4bh-header\"\n                    >\n                      <Typography sx={{ flexShrink: 0 }}>\n                        {t(\"loginPage.setProfile\")}\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <SimpleSlider onSelect={setAvatar} />\n                      {\n                        <>\n                          <Avatar\n                            src={avatarBase64 ?? hipaintImage}\n                            style={{\n                              minHeight: \"300px\",\n                              minWidth: \"300px\",\n                              margin: \"auto\",\n                            }}\n                          />\n                          <br />\n                        </>\n                      }\n                      <Button\n                        type=\"button\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => setAvatarRef?.current?.click()}\n                      >\n                        {t(\"loginPage.setAvatar\")}\n                      </Button>\n                      <input\n                        type=\"file\"\n                        name=\"picture\"\n                        ref={setAvatarRef}\n                        className={classes.hidden}\n                        accept=\"image/*\"\n                        onChange={handleAvatar}\n                      />\n\n                      <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label={t(\"loginPage.displayName\")}\n                        name=\"username\"\n                        onChange={handleUsernameChange}\n                        autoFocus\n                        value={username}\n                        autoComplete=\"off\"\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={() => setUsername(`${chance.animal()}`)}\n                                edge=\"end\"\n                              >\n                                <RefreshIcon />\n                              </IconButton>\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n\n                      <SignatureCanvas\n                        heading={t(\"loginPage.cryptoSignature\")}\n                        onChange={handleEncryptionSignatureChange}\n                      />\n\n                      <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">Connection ID Type</InputLabel>\n                        <Select\n                          labelId=\"demo-simple-select-label\"\n                          id=\"demo-simple-select\"\n                          value={idType}\n                          label=\"Connection ID Type\"\n                          onChange={(e) => setIdType(e.target.value)}\n                        >\n                          <MenuItem value={'Random String'}>Random String</MenuItem>\n                          <MenuItem value={'Animals'}>Animals</MenuItem>\n                          <MenuItem value={'Countries'}>Countries</MenuItem>\n                          <MenuItem value={'Months'}>Months</MenuItem>\n\n\n                        </Select>\n                      </FormControl>\n\n                      <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label={t(\"loginPage.connectionId\")}\n                        name=\"username\"\n                        autoFocus\n                        value={fromUser}\n                        autoComplete=\"off\"\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={() => setNewId()}\n                                edge=\"end\"\n                              >\n                                <RefreshIcon />\n                              </IconButton>\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n\n                    </AccordionDetails>\n                  </Accordion>\n\n                  <Accordion\n                    ref={ref3}\n                    expanded={expanded === \"notifications\"}\n                    onChange={handleChange(\"notifications\")}\n                  >\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel4bh-content\"\n                      id=\"panel4bh-header\"\n                    >\n                      <Typography sx={{ flexShrink: 0 }}>\n                        {t(\"loginPage.setPreference\")}\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <FormGroup>\n                        <FormControlLabel\n                          control={<Switch {...inAppNotifications} />}\n                          label={t(\"loginPage.inAppNotification\")}\n                        />\n                        <FormControlLabel\n                          control={<Switch {...browserNotification} />}\n                          label={t(\"loginPage.browserNotification\")}\n                        />\n                      </FormGroup>\n\n                      <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"peerjs-server\"\n                        label=\"PeerJS server\"\n                        name=\"peerjs-server\"\n                        onChange={handlePeerjsServerChange}\n                        value={peerjsServer}\n                        placeholder=\"https: 0.peerjs.com\"\n                        autoComplete=\"off\"\n                      />\n                    </AccordionDetails>\n                  </Accordion>\n\n                  <Accordion\n                    ref={ref4}\n                    expanded={expanded === \"panel4\"}\n                    onChange={handleChange(\"panel4\")}\n                  >\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel4bh-content\"\n                      id=\"panel4bh-header\"\n                    >\n                      <Typography sx={{ width: \"90%\", flexShrink: 0 }}>\n                        <Checkbox {...tacCheckbox} />\n                        <span style={{ color: \"red\" }}>*</span>\n                        {t(\"loginPage.termsAgreement\")}\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Typography>\n                        {/* <TermsAndConditions /> */}\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => navigate(\"/terms\")}\n                        >\n                          {t(\"loginPage.goToTermsAndConditions\")}\n                        </Button>\n                      </Typography>\n                      <br />\n                      <Typography>\n                        {/* <TermsAndConditions /> */}\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => navigate(\"/terms/privacy\")}\n                        >\n                          {t(\"loginPage.goToPrivacyPolicy\")}\n                        </Button>\n                      </Typography>\n                      {/* <Checkbox {...tacCheckbox} /><span style={{ color: 'red'}}>*</span>{t('loginPage.termsAgreement')} */}\n                    </AccordionDetails>\n                  </Accordion>\n                  <br />\n\n                  <Button\n                    ref={ref5}\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"success\"\n                    disabled={isSubmitDisabled}\n                    onClick={handleSubmit}\n                  >\n                    {t(\"loginPage.connect\")}\n                  </Button>\n                  <br />\n                  <br />\n\n                  <Button\n                    ref={ref6}\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!agreedToTerms}\n                    onClick={() => fileRef?.current?.click()}\n                  >\n                    {t(\"loginPage.loadProfileFromFile\")}\n                  </Button>\n                  <input\n                    type=\"file\"\n                    accept=\".zip\"\n                    className={classes.hidden}\n                    ref={fileRef}\n                    onChange={handleFile}\n                  />\n                  <br />\n                  <br />\n                </>\n              )\n            }\n          </>\n        )}\n      </form>\n\n      {/* <Adsense\n        client=\"ca-pub-3858565369567456\"\n        slot=\"1326833654\"\n      /> */}\n    </PageContainer>\n  );\n}\n","import React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { makeStyles } from \"@mui/styles\";\nimport { styled } from \"@mui/material/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Badge from \"@mui/material/Badge\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport CloudIcon from \"@mui/icons-material/Cloud\";\nimport StorageIcon from \"@mui/icons-material/Storage\";\nimport DevicesIcon from \"@mui/icons-material/Devices\";\nimport {\n  SwipeableList,\n  SwipeableListItem,\n} from \"@sandstreamdev/react-swipeable-list\";\nimport Divider from \"@mui/material/Divider\";\nimport Chip from \"@mui/material/Chip\";\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\nimport ViewInArIcon from \"@mui/icons-material/ViewInAr\";\nimport NavigationIcon from \"@mui/icons-material/Navigation\";\nimport SmartToyIcon from \"@mui/icons-material/SmartToy\";\nimport BrushIcon from \"@mui/icons-material/Brush\";\nimport GroupsIcon from \"@mui/icons-material/Groups\";\n\nimport \"@sandstreamdev/react-swipeable-list/dist/styles.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  chevron: {\n    justifyContent: \"right\",\n  },\n}));\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n  \"& .MuiBadge-badge\": {\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"&.green .MuiBadge-badge\": {\n    backgroundColor: \"#44b700\",\n    color: \"#44b700\",\n  },\n  \"&.amber .MuiBadge-badge\": {\n    backgroundColor: \"#FFA500\",\n    color: \"#FFA500\",\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}));\n\nconst Root = styled(\"div\")(({ theme }) => ({\n  width: \"100%\",\n  ...theme.typography.body2,\n  \"& > :not(style) ~ :not(style)\": {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function ListComponent({\n  heading,\n  list,\n  chevronOverride,\n  sections,\n}) {\n  const classes = useStyles();\n  const [isSwiping, setIsSwiping] = React.useState(false);\n\n  const handleClick = (itemOnClick) => {\n    console.log({ isSwiping });\n    if (!isSwiping) {\n      itemOnClick();\n    }\n  };\n\n  const handleStartSwiping = () => {\n    // console.log({ isSwiping: true })\n    // setIsSwiping(true);\n  };\n\n  const handleEndSwiping = () => {\n    console.log({ isSwiping });\n    if (isSwiping < 10) {\n      console.log(\"click action\");\n    }\n    setIsSwiping(false);\n  };\n\n  return (\n    <Root>\n      <List>\n        {sections &&\n          sections.length > 0 &&\n          sections.map((section) => (\n            <>\n              {!!section.heading && (\n                <Divider>\n                  <Chip label={section.heading} />\n                </Divider>\n              )}\n\n              {section.list.map((item) => {\n                return (\n                  <ListItem button key={item.id} onClick={item.onClick}>\n                    <ListItemIcon>\n                      <StyledBadge\n                        className={item.isOnline ? \"green\" : \"amber\"}\n                        overlap=\"circular\"\n                        anchorOrigin={{\n                          vertical: \"bottom\",\n                          horizontal: \"right\",\n                        }}\n                        variant=\"dot\"\n                        invisible={!item.isOnline && !item.isSomeOnline}\n                      >\n                        {!item.isCloud &&\n                          !item.isGram &&\n                          !item.isVerse &&\n                          !item.isMap &&\n                          !item.isAI &&\n                          !item.isVinnC &&\n                          !item.isContacts && (\n                            <Avatar src={item.avatarUrl} alt={item.name}>\n                              {item.name ? item.name[0] : \"-\"}\n                            </Avatar>\n                          )}\n                        {!!item.isCloud && (\n                          <Avatar>\n                            <StorageIcon />\n                          </Avatar>\n                        )}\n                        {!!item.isGram && (\n                          <Avatar>\n                            <CollectionsIcon />\n                          </Avatar>\n                        )}\n                        {!!item.isVerse && (\n                          <Avatar>\n                            <ViewInArIcon />\n                          </Avatar>\n                        )}\n                        {!!item.isMap && (\n                          <Avatar>\n                            <NavigationIcon />\n                          </Avatar>\n                        )}\n                        {!!item.isAI && (\n                          <Avatar>\n                            <SmartToyIcon />\n                          </Avatar>\n                        )}\n                        {!!item.isVinnC && (\n                          <Avatar>\n                            <BrushIcon />\n                          </Avatar>\n                        )}\n                        {!!item.isContacts && (\n                          <Avatar>\n                            <GroupsIcon />\n                          </Avatar>\n                        )}\n                      </StyledBadge>\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={item.name}\n                      primaryTypographyProps={{\n                        style: {\n                          whiteSpace: \"nowrap\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                        },\n                      }}\n                    />\n                    {!!item.isClone && (\n                      <ListItemIcon className={classes.chevron}>\n                        <Badge color=\"primary\" badgeContent={0}>\n                          <DevicesIcon />\n                        </Badge>\n                      </ListItemIcon>\n                    )}\n                    {!!item.isCloud && (\n                      <ListItemIcon className={classes.chevron}>\n                        <Badge color=\"primary\" badgeContent={item.unreadCount}>\n                          <CloudIcon />\n                        </Badge>\n                      </ListItemIcon>\n                    )}\n                    {!item.isCloud && item.unreadCount > 0 && (\n                      <ListItemIcon className={classes.chevron}>\n                        <Badge color=\"primary\" badgeContent={item.unreadCount}>\n                          <MailIcon />\n                        </Badge>\n                      </ListItemIcon>\n                    )}\n                    <ListItemIcon\n                      className={classes.chevron}\n                      button\n                      onClick={item.onClick}\n                    >\n                      {chevronOverride ? chevronOverride : <ChevronRight />}\n                    </ListItemIcon>\n                  </ListItem>\n                );\n              })}\n            </>\n          ))}\n\n        {(!sections || sections.length === 0) && (\n          <>\n            {!!heading && list.length > 0 && (\n              <Divider>\n                <Chip label={heading} />\n              </Divider>\n            )}\n            {/* <SwipeableList> */}\n\n            {list.map((item) => {\n              const handleEndSwipingWithClick = () => {\n                console.log({ isSwiping });\n                if (isSwiping < 10) {\n                  console.log(\"click action\");\n                  item.onClick();\n                }\n                setIsSwiping(false);\n              };\n              return (\n                // <SwipeableListItem\n                //     swipeLeft={{\n                //         content: <DoubleArrowIcon style={{ height: '30px', marginRight: 20 }} />,\n                //         action: () => handleClick(item.onClick)\n                //     }}\n                //     swipeRight={{\n                //         content: <DownloadIcon style={{ height: '30px', marginLeft: 20 }} />,\n                //         action: () => console.info('swipe action triggered')\n                //     }}\n                //     // onSwipeProgress={setIsSwiping}\n                //     // onSwipeStart={handleStartSwiping}\n                //     // onSwipeEnd={handleEndSwipingWithClick}\n                // >\n                <ListItem button key={item.id} onClick={item.onClick}>\n                  <ListItemIcon>\n                    <StyledBadge\n                      className={item.isOnline ? \"green\" : \"amber\"}\n                      overlap=\"circular\"\n                      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n                      variant=\"dot\"\n                      invisible={!item.isOnline && !item.isSomeOnline}\n                    >\n                      <Avatar src={item.avatarUrl} alt={item.name}>\n                        {item.name ? item.name[0] : \"-\"}\n                      </Avatar>\n                    </StyledBadge>\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={item.name}\n                    primaryTypographyProps={{\n                      style: {\n                        whiteSpace: \"nowrap\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      },\n                    }}\n                  />\n                  {!!item.isClone && (\n                    <ListItemIcon className={classes.chevron}>\n                      <Badge color=\"primary\" badgeContent={0}>\n                        <DevicesIcon />\n                      </Badge>\n                    </ListItemIcon>\n                  )}\n                  {item.unreadCount > 0 && (\n                    <ListItemIcon className={classes.chevron}>\n                      <Badge color=\"primary\" badgeContent={item.unreadCount}>\n                        <MailIcon />\n                      </Badge>\n                    </ListItemIcon>\n                  )}\n                  <ListItemIcon\n                    className={classes.chevron}\n                    button\n                    onClick={item.onClick}\n                  >\n                    {chevronOverride ? chevronOverride : <ChevronRight />}\n                  </ListItemIcon>\n                </ListItem>\n                // </SwipeableListItem>\n              );\n            })}\n            {/* </SwipeableList> */}\n            {!!false && !!heading && list.length > 0 && (\n              <Divider>\n                <Chip label={\"Network\"} />\n              </Divider>\n            )}\n            {!!false && !!heading && list.length > 0 && (\n              <Divider>\n                <Chip label={\"Cloud\"} />\n              </Divider>\n            )}\n          </>\n        )}\n      </List>\n    </Root>\n  );\n}\n","export const logToNLevelAnalytics = async (action) => {\n  const url = \"https://api.nlevelsoftware.com/analytics\";\n  const propKey = \"0ynKMoKXFY2GuI2oIz9rSaBVWbX0NIak7fsV7wcJ\";\n  const accountId = \"o16efmpht7\"; // Replace with your actual account ID\n  const timestamp = Math.floor(Date.now() / 1000); // Current Unix timestamp\n  const area = action ?? \"https://chat-staging.positive-intentions.com\"; // Replace with the URL of the webpage\n\n  const data = {\n    accountId: accountId,\n    eventCategory: \"pageview\",\n    timestamp: timestamp,\n    area: area,\n  };\n\n  try {\n    await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-api-key\": propKey,\n      },\n      body: JSON.stringify(data),\n    });\n\n    // if (response.ok) {\n    //   console.log('Analytics sent successfully.');\n    // } else {\n    //   console.log('Analytics failed with status:', response.status);\n    // }\n  } catch (error) {\n    // console.log('Analytics failed:', error);\n  }\n};\n","import React, { useState, useEffect, useMemo, useRef, forwardRef } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateUsername } from \"../../redux/slices/podsSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListComponent from \"../../atomic/molecules/list/List\";\nimport usePeer from \"../../p2p/usePeer\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport { compiler as profileCompiler } from \"../../blockchain/chains/profileChain\";\nimport { compiler as podCompiler } from \"../../blockchain/chains/podChain\";\nimport { useNotification } from \"../../notifications/notificationManager\";\nimport { useTranslation } from \"react-i18next\";\nimport { ColorModeContext } from \"../../../App.tsx\";\nimport { t } from \"i18next\";\nimport { logToNLevelAnalytics } from \"../../utils/analytics\";\nimport { CoachMark } from \"react-coach-mark\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    height: theme.spacing(8),\n  },\n  form: {\n    padding: theme.spacing(3),\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  img: {\n    width: \"100%\",\n  },\n}));\n\nfunction GroupsListPage() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const storedPods = useSelector((state) => state.pods);\n  const storedContacts = useSelector((state) => state.contacts);\n  const sendNotification = useNotification();\n\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const { compiledBlockchain: userProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: userProfileBlockchain,\n  });\n  const storedPersonalId = userProfile.connectionId;\n  // const storedPersonalId = useSelector((state) => state.userProfile.id);\n  const { activeConnections } = usePeer();\n\n  const { compiledBlockchains: compiledPods } = useBlockchain({\n    compiler: podCompiler,\n    blockchains: storedPods.map((pod) => pod.blockchain),\n  });\n\n  const podsList = compiledPods\n    .filter((pod) => pod && pod.id)\n    .map((pod) => {\n      // get unreadCount from redux\n      const unreadCount =\n        storedPods.find((p) => p.id === pod.id)?.unreadCount || 0;\n\n      return {\n        ...pod,\n        onClick: () => navigate(`/pod/${pod.id}`),\n        name:\n          pod.users?.length > 2 ?? false\n            ? pod.name\n            : storedContacts.find(\n                (contact) =>\n                  contact.connectionId ===\n                  pod.users?.filter(\n                    (memberId) => memberId !== storedPersonalId,\n                  )[0],\n              )?.displayName ?? \"Please wait\",\n        avatarUrl:\n          pod.users?.length > 2 ?? false\n            ? pod.avatar\n            : storedContacts.find(\n                (contact) =>\n                  contact.connectionId ===\n                  pod.users?.filter(\n                    (memberId) => memberId !== storedPersonalId,\n                  )[0],\n              )?.avatar ?? \"-\",\n        isOnline: pod.users\n          .filter((c) => c !== storedPersonalId)\n          .every((c) => activeConnections.includes(c)),\n        isSomeOnline: pod.users\n          .filter((c) => c !== storedPersonalId)\n          .some((c) => activeConnections.includes(c)),\n        unreadCount,\n        isClone: pod.clone,\n      };\n    });\n\n  const sections = [\n    {\n      heading: t(\"podsPage.social\"),\n      list: podsList.filter((pod) => !pod.isClone),\n    },\n    {\n      heading: t(\"podsPage.devices\"),\n      list: podsList.filter((pod) => pod.isClone),\n    },\n    {\n      heading: t(\"podsPage.cloud\"),\n      list: [\n        {\n          onClick: () => navigate(\"/contacts\"),\n          name: t(\"contactsPage.pageTitle\"),\n          avatarUrl: \"-\",\n          // isOnline: pod.users\n          //   .filter(c => c !== storedPersonalId)\n          //   .every(c => activeConnections.includes(c)),\n          // isSomeOnline: pod.users\n          //   .filter(c => c !== storedPersonalId)\n          //   .some(c => activeConnections.includes(c)),\n          // unreadCount,\n          // unreadCount: podsList.filter(pod => pod.isClone)\n          //   .filter(pod => pod.isSomeOnline).length,\n          isContacts: true,\n        },\n        // {\n        //   onClick: () => navigate(\"/feed\"),\n        //   name: t(\"podsPage.gram\"),\n        //   avatarUrl: \"-\",\n        //   // isOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .every(c => activeConnections.includes(c)),\n        //   // isSomeOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .some(c => activeConnections.includes(c)),\n        //   // unreadCount,\n        //   // unreadCount: podsList.filter(pod => pod.isClone)\n        //   //   .filter(pod => pod.isSomeOnline).length,\n        //   isGram: true,\n        // },\n        // {\n        //   onClick: () => navigate(\"/verse\"), // sendNotification(t('podsPage.commingSoon'), { variant: 'info' }),\n        //   name: t(\"podsPage.verse\"),\n        //   avatarUrl: \"-\",\n        //   // isOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .every(c => activeConnections.includes(c)),\n        //   // isSomeOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .some(c => activeConnections.includes(c)),\n        //   // unreadCount,\n        //   unreadCount: podsList\n        //     .filter((pod) => pod.isClone)\n        //     .filter((pod) => pod.isSomeOnline).length,\n        //   isVerse: true,\n        // },\n        // {\n        //   onClick: () => navigate('/map'), // sendNotification(t('podsPage.commingSoon'), { variant: 'info' }),\n        //   name: t('podsPage.map'),\n        //   avatarUrl: \"-\",\n        //   // isOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .every(c => activeConnections.includes(c)),\n        //   // isSomeOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .some(c => activeConnections.includes(c)),\n        //   // unreadCount,\n        //   unreadCount: podsList.filter(pod => pod.isClone)\n        //     .filter(pod => pod.isSomeOnline).length,\n        //   isMap: true,\n        // },\n        // {\n        //   onClick: () => sendNotification(t('podsPage.commingSoon'), { variant: 'info' }),\n        //   name: t('podsPage.ai'),\n        //   avatarUrl: \"-\",\n        //   // isOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .every(c => activeConnections.includes(c)),\n        //   // isSomeOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .some(c => activeConnections.includes(c)),\n        //   // unreadCount,\n        //   unreadCount: podsList.filter(pod => pod.isClone)\n        //     .filter(pod => pod.isSomeOnline).length,\n        //   isAI: true,\n        // },\n        // {\n        //   onClick: () => sendNotification(t('podsPage.commingSoon'), { variant: 'info' }),\n        //   name: t('podsPage.vinnc'),\n        //   avatarUrl: \"-\",\n        //   // isOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .every(c => activeConnections.includes(c)),\n        //   // isSomeOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .some(c => activeConnections.includes(c)),\n        //   // unreadCount,\n        //   unreadCount: podsList.filter(pod => pod.isClone)\n        //     .filter(pod => pod.isSomeOnline).length,\n        //   isVinnC: true,\n        // },\n        // {\n        //   onClick: () => sendNotification(t('podsPage.commingSoon'), { variant: 'info' }),\n        //   name: t('podsPage.storage'),\n        //   avatarUrl: \"-\",\n        //   // isOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .every(c => activeConnections.includes(c)),\n        //   // isSomeOnline: pod.users\n        //   //   .filter(c => c !== storedPersonalId)\n        //   //   .some(c => activeConnections.includes(c)),\n        //   // unreadCount,\n        //   unreadCount: podsList.filter(pod => pod.isClone)\n        //     .filter(pod => pod.isSomeOnline).length,\n        //   isCloud: true,\n        // }\n      ],\n    },\n  ].filter((s) => s.list.length > 0);\n\n  return (\n    <ListComponent heading={\"Social\"} list={podsList} sections={sections} />\n  );\n}\n\nexport default function Pods() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const colorMode = React.useContext(ColorModeContext);\n\n  const [activatedNumber, setActivateNumber] = useState(null);\n  const NextButton = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => setActivateNumber(activatedNumber + 1)}\n    >\n      Next\n    </Button>\n  );\n  const PrevButton = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => setActivateNumber(activatedNumber - 1)}\n    >\n      Prev\n    </Button>\n  );\n\n  const ref1 = useRef(null);\n  const ref2 = useRef(null);\n\n  const coachList = [\n    // {\n    //   activate: true,\n    //   component:\n    //     <Typography style={{\n    //     color: 'black',\n    //   }}>Info and app settings <br />{NextButton} </Typography>,\n    //   reference: ref1,\n    //   tooltip: { position: 'bottom' }\n    // },\n    {\n      activate: true,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          Add a new contact to get started <br />\n          {NextButton}{\" \"}\n        </Typography>\n      ),\n      reference: ref2,\n      tooltip: { position: \"bottom\" },\n    },\n  ];\n\n  const coach = coachList[activatedNumber];\n\n  useEffect(() => {\n    logToNLevelAnalytics(\"podsPageLoaded\");\n  }, []);\n\n  // make it so the form submits and updates the username in redux and navigates to the conversations page\n  // const [username, setUsername] = useState(\"\");\n  const navigate = useNavigate();\n  const sendNotification = useNotification();\n\n  // const storedInAppNotification = useSelector(state => state.userProfile.inAppNotification);\n  // const storedBrowserNotification = useSelector(state => state.userProfile.browserNotification);\n\n  const storedPods = useSelector((state) => state.pods);\n  const storedBlockchain = useSelector((state) => state.userProfile.blockchain);\n  const profileBlockchain = useMemo(\n    () =>\n      new Blockchain({\n        compiler: profileCompiler,\n        chain: storedBlockchain.chain.filter((b) => !!b) || [],\n        storage: storedBlockchain.storage || {},\n      }),\n    [storedBlockchain.chain, storedBlockchain.storage],\n  );\n\n  const compiledProfile = useMemo(\n    () => profileBlockchain.compile(),\n    [profileBlockchain],\n  );\n  // const storedInAppNotification = compiledProfile.settings.inAppNotification;\n  const storedBrowserNotification =\n    compiledProfile.settings?.browserNotification;\n\n  // const dispatch = useDispatch();\n  // const updateUsernameDispatch = (username) => dispatch(updateUsername(username));\n\n  // const handleUsernameChange = (event) => {\n  //   setUsername(event.target.value);\n  // };\n\n  // const isSubmitDisabled = !username;\n\n  useEffect(() => {\n    if (storedBrowserNotification) {\n      if (Notification.permission === \"granted\") return;\n\n      if (\n        Notification.permission !== \"denied\" ||\n        Notification.permission === \"default\"\n      ) {\n        Notification.requestPermission(function (permission) {\n          // If the user accepts, let's create a notification\n          if (permission === \"granted\") {\n            sendNotification(\"👍 Notification permission granted \", {\n              variant: \"success\",\n            });\n          }\n        });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (storedPods.length === 0) {\n      navigate(\"/contacts\");\n    }\n  }, [storedPods.length]);\n\n  const isInstalledPwa = useMemo(() => {\n    return (\n      window.matchMedia(\"(display-mode: standalone)\").matches ||\n      window.navigator.standalone ||\n      document.referrer.includes(\"android-app://\")\n    );\n  }, []);\n\n  //   const [deferredPrompt, setDeferredPrompt] = useState(null);\n  //   useEffect(() => {\n  //     const handleBeforeInstallPromptEvent = (e) => {\n  //         console.log('setting defferedPrompt')\n  //         e.preventDefault();\n  //         setDeferredPrompt(e);\n  //     };\n  //     window.addEventListener('beforeinstallprompt', handleBeforeInstallPromptEvent);\n\n  //     const bipEvent = new Event('beforeinstallprompt');\n\n  //     // Define the prompt method on the event object\n  //     bipEvent.prompt = () => {\n  //         return new Promise((resolve) => {\n  //             // Simulate user accepting the prompt\n  //             resolve({ outcome: 'accepted' });  // or 'dismissed' to simulate user dismissing the prompt\n  //         });\n  //     };\n\n  //     // Dispatch the custom event to trigger your event handler\n  //     window.dispatchEvent(bipEvent);\n  //     return () => {\n  //         window.removeEventListener('beforeinstallprompt', handleBeforeInstallPromptEvent);\n  //     };\n  // }, []);\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: t(\"podsPage.pageTitle\"),\n        // backButton: true,\n        // avatarProps: {\n        //   src: \"https://source.unsplash.com/random/400x200?login\",\n        //   alt: \"random\"\n        // },\n        customButtons: [\n          {\n            icon: \"help\",\n            onClick: () => setActivateNumber(0),\n          },\n        ],\n        menuProps: {\n          icon: \"more\",\n          ref: ref1,\n          items: [\n            {\n              text: t(\"components.menuItems.profile\"),\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n            //   { text: theme.palette.mode === 'dark' ? 'Light Mode' : 'Dark Mode', icon: theme.palette.mode === 'dark' ? 'lightMode' : 'darkMode', onClick: colorMode.toggleColorMode },\n            //   !isInstalledPwa ? {\n            //     text: 'Install App', icon: 'install', onClick: () => {\n            //         sendNotification?.('Requesting to install.', { variant: 'info' })\n\n            //         if (deferredPrompt) {\n            //             deferredPrompt.prompt()\n            //                 .then((result) => {\n            //                     if (result.outcome === 'accepted') {\n            //                         console.log('Installation accepted');\n            //                         sendNotification?.('👍 Install possible. Try from your browser settings.', { variant: 'success' })\n\n            //                     } else {\n            //                         console.log('Installation dismissed');\n            //                         sendNotification?.('👎 Autoinstall dismissed. You can install through your browser.', { variant: 'warning' })\n\n            //                     }\n            //                 })\n            //                 .catch((error) => {\n            //                     console.error('Installation prompt error:', error);\n            //                     sendNotification?.('👎 Autoinstall failed. You might be able to install through your browser.', { variant: 'warning' })\n\n            //                 });\n            //         } else {\n            //             console.error('The beforeinstallprompt event has not been fired.');\n            //             sendNotification?.('👎 Autoinstall failed. You might be able to install through your browser.', { variant: 'warning' })\n            //         }\n            //     }\n            // } : null,\n            //   // { text: 'Language', icon: 'translate', onClick: () => navigate('/privacy'), subMenuItems: [\n            //   //   { text: 'English', onClick: () => navigate('/privacy') },\n            //   //   { text: 'Spanish', onClick: () => navigate('/privacy') },\n            //   // ] },\n            //   { text: 'Terms', icon: 'document', onClick: () => navigate('/terms') },\n            //   { text: 'About', icon: 'info', onClick: () => window.location = 'https://positive-intentions.com' },\n            //   // { text: 'throw', icon: 'info', onClick: () => {\n            //   //   const myArrowFunction = () => {\n            //   //     throw new Error('This is an error message');\n            //   //   };\n\n            //   //   myArrowFunction();\n            //   // }},\n          ].filter((i) => !!i),\n        },\n      }}\n      // fabProps={{\n      //   icon: \"add\",\n      //   onClick: () => {\n      //     navigate('/contacts');\n      //   }\n      // }}\n    >\n      <CoachMark {...coach} />\n      <div ref={ref2}>\n        <GroupsListPage />\n      </div>\n    </PageContainer>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport Button from \"@mui/material/Button\";\n\nconst VoiceRecorderButton = ({ onVoiceRecording }) => {\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const audioRef = useRef();\n\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      recorder.start();\n\n      recorder.ondataavailable = (e) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const base64AudioMessage = reader.result;\n          setAudioUrl(base64AudioMessage);\n        };\n        reader.readAsDataURL(e.data);\n      };\n\n      setRecording(true);\n    });\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorder) {\n      mediaRecorder.stop();\n      setRecording(false);\n    }\n  };\n\n  const playRecording = () => {\n    if (audioRef.current) {\n      audioRef.current.play();\n    }\n  };\n\n  return (\n    <div>\n      {audioUrl && (\n        <div>\n          <audio\n            ref={audioRef}\n            src={audioUrl}\n            controls\n            style={{ width: \"100%\" }}\n          />\n          {/* <Button variant=\"contained\" color=\"secondary\" onClick={playRecording}>\n                        Play Recording\n                    </Button> */}\n        </div>\n      )}\n      <Button\n        variant=\"contained\"\n        color={recording ? \"error\" : \"primary\"}\n        onClick={recording ? stopRecording : startRecording}\n        fullWidth\n      >\n        {recording ? \"Stop Recording\" : \"New Recording\"}\n      </Button>\n      {audioUrl && (\n        <>\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => onVoiceRecording(audioUrl) && setAudioUrl(null)}\n            fullWidth\n          >\n            send\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default VoiceRecorderButton;\n","// import React, { useEffect, useState } from \"react\";\n// // import {\n// //     Avatar,\n// //     Conversation,\n// //     ConversationHeader,\n// //     ConversationList,\n// //     InfoButton,\n// //     MainContainer,\n// //     MessageList,\n// //     Search,\n// //     Sidebar,\n// //     TypingIndicator,\n// //     VideoCallButton,\n// //     VoiceCallButton\n// // } from \"@chatscope/chat-ui-kit-react\";\n// // import { Message, MessageInput, ChatContainer, MessageSeparator, MessageSeparator } from \"@chatscope/chat-ui-kit-react\";\n\n// //import all @chatscope/chat-ui-kit-react\" dependencies in multiline\n// import {\n//   Avatar,\n//   Conversation,\n//   ConversationHeader,\n//   ConversationList,\n//   InfoButton,\n//   MainContainer,\n//   MessageList,\n//   // Search,\n//   Sidebar,\n//   TypingIndicator,\n//   VideoCallButton,\n//   VoiceCallButton,\n//   Message,\n//   MessageInput,\n//   ChatContainer,\n//   MessageSeparator,\n//   ExpansionPanel,\n//   EllipsisButton\n// } from \"@chatscope/chat-ui-kit-react\";\n\n// import lillyIco from './logo192.png'\n// import joeIco from './logo192.png'\n// import emilyIco from './logo192.png'\n// import kaiIco from './logo192.png'\n// import akaneIco from './logo192.png'\n// import eliotIco from './logo192.png'\n// import zoeIco from './logo192.png'\n// import patrikIco from './logo192.png'\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { useSelector } from 'react-redux'\n// import usePeer from \"../../p2p/usePeer\";\n// import { createConversation } from \"../../redux/slices/podsSlice\";\n// import AppHeader from \"../../atomic/molecules/app-header/AppHeader\";\n// import { styled, alpha } from '@mui/material/styles';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import InputBase from '@mui/material/InputBase';\n// import Badge from '@mui/material/Badge';\n// import MenuItem from '@mui/material/MenuItem';\n// import Menu from '@mui/material/Menu';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import SearchIcon from '@mui/icons-material/Search';\n// import AccountCircle from '@mui/icons-material/AccountCircle';\n// import MailIcon from '@mui/icons-material/Mail';\n// import NotificationsIcon from '@mui/icons-material/Notifications';\n// import MoreIcon from '@mui/icons-material/MoreVert';\n// import Container from '@mui/material/Container';\n// import TextField from '@mui/material/TextField';\n// import Button from '@mui/material/Button';\n\n// const Search = styled('div')(({ theme }) => ({\n//   position: 'relative',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginRight: theme.spacing(2),\n//   marginLeft: 0,\n//   width: '100%',\n//   [theme.breakpoints.up('sm')]: {\n//     marginLeft: theme.spacing(3),\n//     width: 'auto',\n//   },\n// }));\n\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\n//   padding: theme.spacing(0, 2),\n//   height: '100%',\n//   position: 'absolute',\n//   pointerEvents: 'none',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n// }));\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     // vertical padding + font size from searchIcon\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     width: '100%',\n//     [theme.breakpoints.up('md')]: {\n//       width: '20ch',\n//     },\n//   },\n// }));\n\n// export default () => {\n//   const [messageInputValue, setMessageInputValue] = useState(\"\");\n//   const [toggleInfo, setToggleInfo] = useState(false);\n//   const navigate = useNavigate();\n//   const { conversationId } = useParams();\n//   const conversation = useSelector((state) => state.conversations.find((c) => {\n//     return c.id == conversationId\n//   }));\n//   const contact = useSelector((state) => state.contacts.contacts.find((c) => c.id === conversationId));\n\n//   const { sendMessage } = usePeer({ peerId: conversationId });\n\n//   const [anchorEl, setAnchorEl] = React.useState(null);\n//   const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n//     React.useState(null);\n\n//   const isMenuOpen = Boolean(anchorEl);\n//   const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n//   const handleProfileMenuOpen = (event) => {\n//     setAnchorEl(event.currentTarget);\n//   };\n\n//   const handleMobileMenuClose = () => {\n//     setMobileMoreAnchorEl(null);\n//   };\n\n//   const handleMenuClose = () => {\n//     setAnchorEl(null);\n//     handleMobileMenuClose();\n//   };\n\n//   const handleMobileMenuOpen = (event) => {\n//     setMobileMoreAnchorEl(event.currentTarget);\n//   };\n\n//   const menuId = 'primary-search-account-menu';\n//   const renderMenu = (\n//     <Menu\n//       anchorEl={anchorEl}\n//       anchorOrigin={{\n//         vertical: 'top',\n//         horizontal: 'right',\n//       }}\n//       id={menuId}\n//       keepMounted\n//       transformOrigin={{\n//         vertical: 'top',\n//         horizontal: 'right',\n//       }}\n//       open={isMenuOpen}\n//       onClose={handleMenuClose}\n//     >\n//       <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n//       <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n//     </Menu>\n//   );\n\n//   const mobileMenuId = 'primary-search-account-menu-mobile';\n//   const renderMobileMenu = (\n//     <Menu\n//       anchorEl={mobileMoreAnchorEl}\n//       anchorOrigin={{\n//         vertical: 'top',\n//         horizontal: 'right',\n//       }}\n//       id={mobileMenuId}\n//       keepMounted\n//       transformOrigin={{\n//         vertical: 'top',\n//         horizontal: 'right',\n//       }}\n//       open={isMobileMenuOpen}\n//       onClose={handleMobileMenuClose}\n//     >\n//       <MenuItem>\n//         <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n//           <Badge badgeContent={4} color=\"error\">\n//             <MailIcon />\n//           </Badge>\n//         </IconButton>\n//         <p>Messages</p>\n//       </MenuItem>\n//       <MenuItem>\n//         <IconButton\n//           size=\"large\"\n//           aria-label=\"show 17 new notifications\"\n//           color=\"inherit\"\n//         >\n//           <Badge badgeContent={17} color=\"error\">\n//             <NotificationsIcon />\n//           </Badge>\n//         </IconButton>\n//         <p>Notifications</p>\n//       </MenuItem>\n//       <MenuItem onClick={handleProfileMenuOpen}>\n//         <IconButton\n//           size=\"large\"\n//           aria-label=\"account of current user\"\n//           aria-controls=\"primary-search-account-menu\"\n//           aria-haspopup=\"true\"\n//           color=\"inherit\"\n//         >\n//           <AccountCircle />\n//         </IconButton>\n//         <p>Profile</p>\n//       </MenuItem>\n//     </Menu>\n//   );\n\n//   // useEffect(() => {\n//   //     if (!conversation) {\n//   //         createConversation({ id: conversationId, messages: [] });\n//   //     }\n//   // }, [conversation]);\n\n//   // return (\n//   //     <div style={{\n//   //         height: \"100vh\",\n//   //         position: \"relative\",\n//   //         overflow: \"none\"\n//   //     }}>\n\n//   //         <MainContainer responsive>\n//   //             {/* <Sidebar position=\"left\" scrollable={true}> */}\n//   //                 {/* <ConversationList scrollable>\n//   //                 <Search placeholder=\"Search...\" style={{ margin: '10px' }}/>\n//   //                 <Conversation name=\"Lilly\" lastSenderName=\"Lilly\" info=\"Yes i can do it for you\">\n//   //                     <Avatar src={lillyIco} name=\"Lilly\" status=\"available\" />\n//   //                 </Conversation>\n\n//   //                 <Conversation name=\"Joe\" lastSenderName=\"Joe\" info=\"Yes i can do it for you\">\n//   //                     <Avatar src={joeIco} name=\"Joe\" status=\"dnd\" />\n//   //                 </Conversation>\n\n//   //                 <Conversation name=\"Emily\" lastSenderName=\"Emily\" info=\"Yes i can do it for you\" unreadCnt={3}>\n//   //                     <Avatar src={emilyIco} name=\"Emily\" status=\"available\" />\n//   //                 </Conversation>\n\n//   //                 <Conversation name=\"Kai\" lastSenderName=\"Kai\" info=\"Yes i can do it for you\" unreadDot>\n//   //                     <Avatar src={kaiIco} name=\"Kai\" status=\"unavailable\" />\n//   //                 </Conversation>\n\n//   //                 <Conversation name=\"Akane\" lastSenderName=\"Akane\" info=\"Yes i can do it for you\">\n//   //                     <Avatar src={akaneIco} name=\"Akane\" status=\"eager\" />\n//   //                 </Conversation>\n\n//   //                 <Conversation name=\"Eliot\" lastSenderName=\"Eliot\" info=\"Yes i can do it for you\">\n//   //                     <Avatar src={eliotIco} name=\"Eliot\" status=\"away\" />\n//   //                 </Conversation>\n\n//   //                 <Conversation name=\"Zoe\" lastSenderName=\"Zoe\" info=\"Yes i can do it for you\" active>\n//   //                     <Avatar src={zoeIco} name=\"Zoe\" status=\"dnd\" />\n//   //                 </Conversation>\n\n//   //                 <Conversation name=\"Patrik\" lastSenderName=\"Patrik\" info=\"Yes i can do it for you\">\n//   //                     <Avatar src={patrikIco} name=\"Patrik\" status=\"invisible\" />\n//   //                 </Conversation>\n\n//   //             </ConversationList> */}\n//   //                 {/* <Conversations />\n//   //             </Sidebar> */}\n\n//   //             <ChatContainer>\n//   //                 <AppHeader\n//   //                     title=\"Login\"\n//   //                 />\n//   //                 {/* <ConversationHeader>\n//   //                     <ConversationHeader.Back\n//   //                         onClick={() => {\n//   //                             // go back to the previous page\n//   //                             navigate(-1);\n//   //                         }}\n//   //                     />\n//   //                     <Avatar src={zoeIco} name=\"Zoe\" />\n//   //                     <ConversationHeader.Content userName={contact?.name || \"some contact name here\"} info=\"Active 10 mins ago\" />\n//   //                     <ConversationHeader.Actions>\n//   //                         <VoiceCallButton />\n//   //                         <VideoCallButton />\n//   //                         <EllipsisButton onClick={() => setToggleInfo(!toggleInfo)} />\n//   //                         <InfoButton />\n//   //                     </ConversationHeader.Actions>\n//   //                 </ConversationHeader> */}\n//   //                 <MessageList typingIndicator={<TypingIndicator content=\"Zoe is typing\" />}>\n\n//   //                     <MessageSeparator content=\"Saturday, 30 November 2019\" />\n\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Zoe\",\n//   //                         direction: \"incoming\",\n//   //                         position: \"single\"\n//   //                     }}>\n//   //                         <Avatar src={zoeIco} name=\"Zoe\" />\n//   //                     </Message>\n\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Patrik\",\n//   //                         direction: \"outgoing\",\n//   //                         position: \"single\"\n//   //                     }} avatarSpacer />\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Zoe\",\n//   //                         direction: \"incoming\",\n//   //                         position: \"first\"\n//   //                     }} avatarSpacer />\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Zoe\",\n//   //                         direction: \"incoming\",\n//   //                         position: \"normal\"\n//   //                     }} avatarSpacer />\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Zoe\",\n//   //                         direction: \"incoming\",\n//   //                         position: \"normal\"\n//   //                     }} avatarSpacer />\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Zoe\",\n//   //                         direction: \"incoming\",\n//   //                         position: \"last\"\n//   //                     }}>\n//   //                         <Avatar src={zoeIco} name=\"Zoe\" />\n//   //                     </Message>\n\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Patrik\",\n//   //                         direction: \"outgoing\",\n//   //                         position: \"first\"\n//   //                     }} />\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Patrik\",\n//   //                         direction: \"outgoing\",\n//   //                         position: \"normal\"\n//   //                     }} />\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Patrik\",\n//   //                         direction: \"outgoing\",\n//   //                         position: \"normal\"\n//   //                     }} />\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Patrik\",\n//   //                         direction: \"outgoing\",\n//   //                         position: \"last\"\n//   //                     }} />\n\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Zoe\",\n//   //                         direction: \"incoming\",\n//   //                         position: \"first\"\n//   //                     }} avatarSpacer />\n//   //                     <Message model={{\n//   //                         message: \"Hello my friend\",\n//   //                         sentTime: \"15 mins ago\",\n//   //                         sender: \"Zoe\",\n//   //                         direction: \"incoming\",\n//   //                         position: \"last\"\n//   //                     }}>\n//   //                         <Avatar src={zoeIco} name=\"Zoe\" />\n//   //                     </Message>\n//   //                 </MessageList>\n//   //                 <MessageInput placeholder=\"Type message here\" value={messageInputValue} onChange={val => setMessageInputValue(val)} onSend={() => {\n//   //                     // generate random id\n//   //                     const newConversationId = Math.floor(Math.random() * 1000000000)\n//   //                     sendMessage('message', { id: newConversationId, message: messageInputValue })\n//   //                     setMessageInputValue(\"\")\n//   //                     navigate(`/conversations/${newConversationId}`);\n//   //                 }} />\n//   //             </ChatContainer>\n\n//   //             {toggleInfo && (\n//   //                 <Sidebar position=\"right\">\n//   //                     <ExpansionPanel open title=\"INFO\">\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                     </ExpansionPanel>\n//   //                     <ExpansionPanel title=\"LOCALIZATION\">\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                     </ExpansionPanel>\n//   //                     <ExpansionPanel title=\"MEDIA\">\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                     </ExpansionPanel>\n//   //                     <ExpansionPanel title=\"SURVEY\">\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                     </ExpansionPanel>\n//   //                     <ExpansionPanel title=\"OPTIONS\">\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                         <p>Lorem ipsum</p>\n//   //                     </ExpansionPanel>\n//   //                 </Sidebar>\n//   //             )}\n//   //         </MainContainer>\n//   //     </div>\n//   // )\n\n//   return (\n//     <>\n//       <AppHeader\n//         title=\"Chat\"\n//         backButton\n//         rightIcon={\n//           <IconButton\n//             size=\"large\"\n//             edge=\"end\"\n//             aria-label=\"account of current user\"\n//             aria-controls={menuId}\n//             aria-haspopup=\"true\"\n//             onClick={() => navigate(`/conversations/${conversationId}/details`)}\n//             color=\"inherit\"\n//           >\n//             <MoreIcon />\n//           </IconButton>\n//         }\n//       // onMenuClick={() => setToggleMenu(!toggleMenu)}\n//       // onInfoClick={() => setToggleInfo(!toggleInfo)}\n//       />\n//       <Container maxWidth={false} disableGutters>\n\n//         <ChatContainer>\n//           <AppHeader\n//             title=\"Login\"\n//           />\n//           {/* <ConversationHeader>\n//                          <ConversationHeader.Back\n//                              onClick={() => {\n//                                  // go back to the previous page\n//                                  navigate(-1);\n//                              }}\n//                          />\n//                          <Avatar src={zoeIco} name=\"Zoe\" />\n//                          <ConversationHeader.Content userName={contact?.name || \"some contact name here\"} info=\"Active 10 mins ago\" />\n//                          <ConversationHeader.Actions>\n//                              <VoiceCallButton />\n//                              <VideoCallButton />\n//                              <EllipsisButton onClick={() => setToggleInfo(!toggleInfo)} />\n//                              <InfoButton />\n//                          </ConversationHeader.Actions>\n//                      </ConversationHeader> */}\n//           <MessageList typingIndicator={<TypingIndicator content=\"Zoe is typing\" />} style={{ marginBottom: '60px' }}>\n\n//             <MessageSeparator content=\"Saturday, 30 November 2019\" />\n//             {/* <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Zoe\",\n//               direction: \"incoming\",\n//               position: \"single\"\n//             }}>\n//               <Avatar src={zoeIco} name=\"Zoe\" />\n//             </Message>\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Patrik\",\n//               direction: \"outgoing\",\n//               position: \"single\"\n//             }} avatarSpacer />\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Zoe\",\n//               direction: \"incoming\",\n//               position: \"first\"\n//             }} avatarSpacer />\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Zoe\",\n//               direction: \"incoming\",\n//               position: \"normal\"\n//             }} avatarSpacer />\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Zoe\",\n//               direction: \"incoming\",\n//               position: \"normal\"\n//             }} avatarSpacer />\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Zoe\",\n//               direction: \"incoming\",\n//               position: \"last\"\n//             }}>\n//               <Avatar src={zoeIco} name=\"Zoe\" />\n//             </Message>\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Patrik\",\n//               direction: \"outgoing\",\n//               position: \"first\"\n//             }} />\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Patrik\",\n//               direction: \"outgoing\",\n//               position: \"normal\"\n//             }} />\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Patrik\",\n//               direction: \"outgoing\",\n//               position: \"normal\"\n//             }} />\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Patrik\",\n//               direction: \"outgoing\",\n//               position: \"last\"\n//             }} />\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Zoe\",\n//               direction: \"incoming\",\n//               position: \"first\"\n//             }} avatarSpacer />\n//             <Message model={{\n//               message: \"Hello my friend\",\n//               sentTime: \"15 mins ago\",\n//               sender: \"Zoe\",\n//               direction: \"incoming\",\n//               position: \"last\"\n//             }}>\n//               <Avatar src={zoeIco} name=\"Zoe\" />\n//             </Message> */}\n\n//             {conversation?.messages?.map((message, index) => {\n//               const previousMessage = conversation.messages[index - 1]\n//               const nextMessage = conversation.messages[index + 1]\n//               // const position = calculateMessagePosition(message, previousMessage, nextMessage)\n//               return (\n//                 <Message\n//                   key={message.id}\n//                   model={{\n//                     message: message.content,\n//                     sentTime: message.timestamp,\n//                     sender: message.from,\n//                     direction: message.sender === \"Zoe\" ? \"incoming\" : \"outgoing\",\n//                     position: \"single\"\n//                   }}\n//                 >\n//                   {message.sender === \"Zoe\" && <Avatar src={zoeIco} name=\"Zoe\" />}\n//                 </Message>\n//               )\n//             })}\n//           </MessageList>\n//           {/* <MessageInput placeholder=\"Type message here\" value={messageInputValue} onChange={val => setMessageInputValue(val)} onSend={() => {\n//             // generate random id\n//             const newConversationId = Math.floor(Math.random() * 1000000000)\n//             sendMessage('message', { id: newConversationId, message: messageInputValue })\n//             setMessageInputValue(\"\")\n//             navigate(`/conversations/${newConversationId}`);\n//           }} /> */}\n//         </ChatContainer>\n\n//         <AppBar position=\"fixed\" color=\"primary\" sx={{ top: 'auto', bottom: 0 }}>\n//           <Container maxWidth=\"lg\">\n\n//             <Toolbar>\n//               {/*  add an input field and a send button and make it so that the input takes up the available space */}\n//               {/* make it so that the send button is always on the right side\n//                        */}\n\n//               <TextField\n\n//                 id=\"outlined-multiline-static\"\n//                 label=\"Message\"\n\n//                 // multiline\n//                 // rows={4}\n//                 defaultValue=\"\"\n//                 variant=\"filled\"\n//                 sx={{ width: '100%' }}\n//               />\n//               <Button variant=\"contained\" sx={{ ml: 2 }}>Send</Button>\n\n//             </Toolbar>\n//           </Container>\n//         </AppBar>\n//       </Container>\n//     </>\n//   )\n// }\n\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateUsername } from \"../../redux/slices/userProfileSlice\";\nimport { json, useNavigate, useParams } from \"react-router-dom\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Container from \"@mui/material/Container\";\nimport Conversation, {\n  formatDate,\n} from \"../../atomic/molecules/conversation/Conversation\";\nimport Message from \"../../atomic/atom/message/Message\";\nimport {\n  addMessage,\n  updatePodUnreadCount,\n  setShouldHangup,\n  addToBlockchain,\n} from \"../../redux/slices/podsSlice\";\nimport ImageIcon from \"@mui/icons-material/Image\";\nimport PlaceIcon from \"@mui/icons-material/Place\";\nimport usePeer from \"../../p2p/usePeer\";\nimport calculateMD5 from \"../../utils/calculateMd5\";\nimport calculateSHA256 from \"../../utils/calculateSha256\";\nimport { addStorageItem } from \"../../redux/slices/storageSlice\";\nimport MicIcon from \"@mui/icons-material/Mic\";\nimport { Badge } from \"@mui/material\";\nimport AttachmentIcon from \"@mui/icons-material/Attachment\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport { compiler as profileCompiler } from \"../../blockchain/chains/profileChain\";\nimport {\n  compiler as podCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/podChain\";\nimport { encodeEmojisToUnicode } from \"../../blockchain/chains/podChain\";\nimport { useTranslation } from \"react-i18next\";\nimport { logToNLevelAnalytics } from \"../../utils/analytics\";\nimport Slide from \"@mui/material/Slide\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport VoiceRecorderButton from \"../../atomic/atom/voiceRecorder/VoiceRecorder\";\n\nconst lightBackground = \"/backgrounds/light-leaves.png\";\nconst darkBackground = \"/backgrounds/dark-leaves.png\";\n\nconst calculateHash = calculateSHA256;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingBottom: theme.spacing(8),\n  },\n  appBar: {\n    height: theme.spacing(8),\n  },\n  form: {\n    padding: theme.spacing(3),\n    position: \"relative\",\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  img: {\n    width: \"100%\",\n  },\n  conversation: {\n    paddingBottom: theme.spacing(8),\n  },\n  messageInput: {\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#303030\" : \"#f0f8ff\",\n  },\n}));\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n    minWidth: \"300px\",\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function Pod() {\n  const { podId } = useParams();\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const storedPods = useSelector((state) => state.pods);\n  const storedContacts = useSelector((state) => state.contacts);\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const addToBlockchainDispatch = ({ block, blocks, storage }) =>\n    dispatch(addToBlockchain({ podId, block, blocks, storage }));\n  const { compiledBlockchain: userProfile, addBlocks: addBlocksToProfile } =\n    useBlockchain({\n      compiler: profileCompiler,\n      blockchain: userProfileBlockchain,\n      dispatch: addToBlockchainDispatch,\n    });\n  const storedConnectionId = userProfile.connectionId;\n  const storedUsername = userProfile.displayName;\n  const storedAvatar = userProfile.avatar;\n\n  // const storedConnectionId = useSelector((state) => state.userProfile.id);\n  // const storedUsername = useSelector((state) => state.userProfile.displayName);\n  // const storedAvatar = useSelector((state) => state.userProfile.avatar);\n  const dispatch = useDispatch();\n  const addMessageDispatch = (message) => dispatch(addMessage(message));\n  const setShouldHangupDispatch = () =>\n    dispatch(setShouldHangup({ podId, shouldHangUp: false }));\n  const updatePodUnreadCountDispatch = (podId, unreadCount) =>\n    dispatch(updatePodUnreadCount({ podId, unreadCount }));\n  const [messageInputValue, setMessageInputValue] = useState(\"\");\n  const [mediaStream, setMediaStream] = useState(null);\n  const [callActive, setCallActive] = useState(false);\n  const [imageAttachment, setImageAttachment] = useState(null);\n  const [videoAttachment, setVideoAttachment] = useState(null);\n  const [fileAttachment, setFileAttachment] = useState(null);\n  const [locationAttachment, setLocationAttachment] = useState(null);\n  const [audioAttachment, setAudioAttachment] = useState(null);\n  const [linkAttachment, setLinkAttachment] = useState(null);\n  const [isLoadingFile, setIsLoadingFile] = useState(false);\n  const inputRef = useRef(null);\n  const fileInputRef = useRef(null);\n  // const filesForPod = []; // useSelector((state) => state.storage[podId]) || [];\n\n  useEffect(() => {\n    logToNLevelAnalytics(\"podPageLoaded\");\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addStorageItemDispatch = (item) =>\n    dispatch(addStorageItem({ podId, item }));\n  const conversation = storedPods.find((pod) => pod.id === podId);\n  // const podBlockchain = useMemo(() => new Blockchain({\n  //   chain: conversation?.blockchain?.chain || [],\n  //   compiler: podCompiler,\n  //   storage: conversation?.blockchain?.storage || [],\n  // }), [conversation?.blockchain?.chain, conversation?.blockchain?.storage])\n\n  // const compiedBlockchain = useMemo(() => podBlockchain.compile(), [podBlockchain]);\n\n  const { compiledBlockchain: podBlockchain, addBlocks: addBlocksToPod } =\n    useBlockchain({\n      compiler: podCompiler,\n      blockchain: conversation?.blockchain,\n      dispatch: addToBlockchainDispatch,\n    });\n\n  const {\n    sendMessage,\n    makeCall,\n    endCall,\n    calls,\n    callsHash,\n    activeConnections,\n  } = usePeer(podBlockchain?.users || []);\n\n  const storedShouldHangup = conversation?.shouldHangup;\n  const peerIsTyping = conversation?.peerIsTyping;\n  // const filesForPod  = podBlockchain.meaa\n  // const peersActivelyTyping = Object.keys(peerIsTyping ?? {}) || []\n  // .filter(key => !!peerIsTyping[key])\n\n  const [peersActivelyTyping, setPeersActivelyTyping] = useState(\n    Object.keys(peerIsTyping ?? {}) || [].filter((key) => !!peerIsTyping[key]),\n  );\n\n  useEffect(() => {\n    setPeersActivelyTyping(\n      Object.keys(peerIsTyping ?? {}).filter((k) => !!peerIsTyping[k]),\n    );\n  }, [peerIsTyping]);\n\n  const handleEndCall = () => {\n    console.log(\"ending call\");\n    endCall();\n\n    sendMessage({\n      type: \"setShouldHangup\",\n      payload: {\n        podId,\n        shouldHangup: true,\n      },\n    }).then(setShouldHangupDispatch);\n  };\n\n  const activeCalls = useMemo(() => {\n    if (callActive) {\n      setCallActive(false);\n      return [];\n    }\n    return [...calls];\n  }, [callsHash, calls]);\n\n  useEffect(() => {\n    if (storedShouldHangup) {\n      handleEndCall();\n    }\n  }, [storedShouldHangup]);\n\n  const handleAttachFile = () => {\n    setIsLoadingFile(true);\n    fileInputRef.current.click();\n  };\n\n  const handleAttachImage = () => {\n    // setIsLoadingFile(true);\n    inputRef.current.click();\n  };\n\n  const handleAttachLocation = () => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const { latitude, longitude } = position.coords;\n      setLocationAttachment({\n        latitude,\n        longitude,\n      });\n    });\n  };\n\n  const handleAttachAudio = (base64AudioMessage) => {\n    handleClose();\n    setAudioAttachment({ data: base64AudioMessage });\n  };\n\n  const attachImage = ({ target: { files } }) => {\n    const f = files[0];\n    const img = new Image();\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    img.onload = () => {\n      const maxWidthHeight = 300;\n      let width = img.width;\n      let height = img.height;\n\n      if (width > height) {\n        if (width > maxWidthHeight) {\n          height *= maxWidthHeight / width;\n          width = maxWidthHeight;\n        }\n      } else {\n        if (height > maxWidthHeight) {\n          width *= maxWidthHeight / height;\n          height = maxWidthHeight;\n        }\n      }\n\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, height);\n      const base64String = canvas.toDataURL(\"image/jpeg\", 1.0);\n\n      const newAttachment = {\n        name: f.name,\n        type: \"image\",\n        data: base64String,\n        size: f.size,\n        // md5: calculateMD5(base64String),\n        // sha256: calculateSHA256(base64String),\n        sha: calculateHash(base64String),\n      };\n      setImageAttachment(newAttachment);\n    };\n    img.onerror = function (event) {\n      console.error(\"An error occurred while reading the file:\", img.error);\n      setIsLoadingFile(false);\n    };\n\n    img.onabort = function (event) {\n      console.log(\"File reading was aborted.\");\n      setIsLoadingFile(false);\n    };\n    img.src = URL.createObjectURL(f);\n  };\n\n  const attachFile = ({ target: { files } }) => {\n    const f = files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const base64String = e.target.result;\n      console.log({ base64String });\n      const newAttachment = {\n        name: f.name,\n        type: \"file\",\n        data: base64String,\n        size: f.size,\n        // md5: calculateMD5(base64String),\n        // sha256: calculateSHA256(base64String),\n        sha: calculateHash(base64String),\n      };\n      setFileAttachment(newAttachment);\n\n      // sendMessage({\n      //   type: 'largeFile',\n      //   payload: {\n      //     ...newAttachment,\n      //   }\n      // }).then(() => {\n      //   setIsLoadingFile(false);\n      // })\n      setIsLoadingFile(false);\n    };\n    reader.addEventListener(\"error\", (err) => {\n      console.error(err);\n      setIsLoadingFile(false);\n    });\n    reader.addEventListener(\"abort\", (err) => {\n      console.error(err);\n      setIsLoadingFile(false);\n    });\n    reader.readAsDataURL(f);\n  };\n\n  const handleUpvote = (messageId) => {\n    const newBlocks = blockBuilders().upvoteMessage({\n      messageId,\n      from: storedConnectionId,\n    });\n    const pendingUpdate = addBlocksToPod(newBlocks);\n    sendMessage({\n      type: \"addToBlockchain\",\n      payload: {\n        id: podId,\n        pendingBlocks: pendingUpdate.pendingBlocks,\n        pendingStorage: pendingUpdate.pendingStorage,\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (\n      imageAttachment !== null ||\n      fileAttachment !== null ||\n      locationAttachment !== null ||\n      audioAttachment !== null\n    ) {\n      handleSendMessage();\n    }\n  }, [imageAttachment, fileAttachment, locationAttachment, audioAttachment]);\n\n  useEffect(() => {\n    if (conversation?.unreadCount) {\n      updatePodUnreadCountDispatch(podId, 0);\n    }\n  }, [conversation?.unreadCount]);\n\n  const [replyMessage, setReplyMessage] = useState(null);\n  const handleOnReply = (message) => {\n    setReplyMessage(message);\n  };\n\n  const handleSendMessage = () => {\n    const messageObject = {\n      from: storedConnectionId,\n      content: messageInputValue\n        ? encodeEmojisToUnicode(messageInputValue)\n        : undefined,\n      image: imageAttachment ?? undefined,\n      video: videoAttachment ?? undefined,\n      file: fileAttachment ?? undefined,\n      location: locationAttachment ?? undefined,\n      audio: audioAttachment ?? undefined,\n      link: linkAttachment ?? undefined,\n      reply: replyMessage ?? undefined,\n      timestampSent: new Date().valueOf(),\n      timestampRecieved: null,\n    };\n\n    const newMessageBlocks = blockBuilders().sendMessage(messageObject);\n    const pendingUpdate = addBlocksToPod(newMessageBlocks);\n    // const pendingUpdate = podBlockchain.getUpdate();\n    // addToBlockchainDispatch({\n    //   blocks: pendingUpdate.pendingBlocks,\n    //   storage: pendingUpdate.pendingStorage\n    // })\n    setImageAttachment(null);\n    setFileAttachment(null);\n    setReplyMessage(null);\n    setIsLoadingFile(false);\n    setLocationAttachment(null);\n    setAudioAttachment(null);\n\n    setMessageInputValue(\"\");\n    if (imageAttachment) addStorageItemDispatch(imageAttachment);\n    if (fileAttachment) addStorageItemDispatch(fileAttachment);\n    if (locationAttachment) addStorageItemDispatch(locationAttachment);\n    if (audioAttachment) addStorageItemDispatch(audioAttachment);\n    if (replyMessage) addStorageItemDispatch(replyMessage);\n    sendMessage({\n      type: \"setPeerIsTyping\",\n      payload: {\n        podId,\n        peerDisplayName: storedUsername,\n        isTyping: false,\n      },\n    });\n    // pendingUpdate.pendingBlocks.forEach(block => addToBlockchainDispatch(block))\n\n    logToNLevelAnalytics(\"sendingMessageAttempt\");\n    sendMessage({\n      type: \"message\",\n      payload: {\n        podId,\n        message: messageObject,\n        podDetails: {\n          // ...conversation,\n          id: podId,\n          messages: [messageObject],\n        },\n        blocks: pendingUpdate.pendingBlocks,\n        storage: pendingUpdate.pendingStorage,\n      },\n    }).then((response) => {\n      logToNLevelAnalytics(\"sendingMessageSuccess\");\n      // addMessageDispatch({\n      //   podId,\n      //   message: { ...messageObject, attachment: imageAttachment?.md5 },\n      // });\n    });\n  };\n\n  const handleMessageChange = (event) => {\n    setMessageInputValue(event.target.value);\n\n    sendMessage({\n      type: \"setPeerIsTyping\",\n      payload: {\n        podId,\n        peerDisplayName: storedUsername,\n        isTyping: !!event.target.value,\n      },\n    });\n  };\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => console.log({calls: getCalls(), callsLength}), 5000)\n  //   return () => clearInterval(interval);\n  // }, [])\n\n  const remoteStreamCount = calls.filter((call) => call._remoteStream).length;\n\n  useEffect(() => {\n    if (callActive && remoteStreamCount) {\n      setCallActive(false);\n      handleEndCall();\n    }\n\n    activeCalls\n      .filter((call) => call._remoteStream)\n      .map((call) => ({ remote: call._remoteStream, local: call._localStream, metadata: call.metadata}))\n      .forEach(async ({ remote, local, metadata }, index) => {\n        const isCasting = metadata?.cast;\n        if (isCasting || remote) {\n          document.getElementById(`remote-video-${index}`).srcObject = isCasting ? local : remote;\n          await document.getElementById(`remote-video-${index}`).play();\n          setCallActive(true);\n        }\n\n        if (!isCasting && local) {\n          document.getElementById(`local-video-${index}`).srcObject = local;\n          await document.getElementById(`local-video-${index}`).play();\n        }\n      });\n  }, [remoteStreamCount]);\n\n  const handleAnswerCall = async (call) => {\n    if (call?.metadata?.cast) {\n      const hasVideo = call._remoteStream?.getVideoTracks().length > 0;\n      const newMediaStream = await navigator.mediaDevices.getUserMedia({\n        video: hasVideo ? true : true,\n        audio: true,\n      });\n      call.answer(newMediaStream);\n      setMediaStream(newMediaStream);\n    } else {\n      const hasVideo = call._remoteStream?.getVideoTracks().length > 0;\n      const newMediaStream = await navigator.mediaDevices.getUserMedia({\n        video: hasVideo ? true : true,\n        audio: true,\n      });\n      call.answer(newMediaStream);\n      setMediaStream(newMediaStream);\n    }\n  };\n\n  const contactDetails = storedContacts.find((contact) => {\n    return (\n      contact.connectionId ===\n      podBlockchain?.users?.filter((member) => member !== storedConnectionId)[0]\n    );\n  });\n  const pageTitle =\n    podBlockchain?.users?.length > 2\n      ? podBlockchain?.name ?? \"Pod\"\n      : contactDetails?.displayName ?? \"Contact\";\n\n  const isOnline = (podBlockchain.users ?? [])\n    .filter((c) => c !== storedConnectionId)\n    .every((c) => activeConnections.includes(c));\n  const isSomeOnline = (podBlockchain.users ?? [])\n    .filter((c) => c !== storedConnectionId)\n    .some((user) => activeConnections.includes(user));\n\n  const headerActions = [\n    {\n      text: t(\"podPage.podDetails\"),\n      icon: \"account\",\n      onClick: () => navigate(`/pod/${podId}/details`),\n    },\n  ];\n  // if (filesForPod.length > 0) {\n  headerActions.push({\n    text: t(\"podPage.files\"),\n    icon: \"folder\",\n    onClick: () => navigate(`/pod/${podId}/files`),\n  });\n  // }\n\n  // get boolean if on  if any mobile browser by user agent. like an android ios browser on mobile\n  const isMobile =\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent,\n    );\n  const isGroup = podBlockchain?.users?.length > 2;\n\n  const handleItemDelete = (id) => {\n    console.log({ id });\n    const newMessageBlocks = blockBuilders().deleteMessage({ id });\n    const pendingUpdate = addBlocksToPod(newMessageBlocks);\n    sendMessage({\n      type: \"addToBlockchain\",\n      payload: {\n        id,\n        pendingBlocks: pendingUpdate.pendingBlocks,\n        pendingStorage: pendingUpdate.pendingStorage,\n      },\n    });\n  };\n\n  const customButtons = isOnline\n    ? [\n        {\n          text: t(\"podPage.call\"),\n          icon: \"callContact\",\n          subMenuItems: [\n            !isGroup &&\n              !isMobile && {\n                text: t(\"podPage.screenshare\"),\n                icon: \"screen\",\n                onClick: () =>\n                  makeCall({ screen: true, video: true, audio: true }),\n              },\n            !isGroup && {\n              text: t(\"podPage.videoCall\"),\n              icon: \"camera\",\n              onClick: () => makeCall({ video: true, audio: true }),\n            },\n            !isGroup && {\n              text: t(\"podPage.call\"),\n              icon: \"call\",\n              onClick: () => makeCall({ audio: true }),\n            },\n            !isGroup && {\n              text: t(\"podPage.cast\"),\n              icon: \"cast\",\n              onClick: () => makeCall({ audio: true, video: true, cast: true }),\n            },\n            {\n              text: t(\"podsPage.verse\"),\n              icon: \"verse\",\n              onClick: () => navigate(`/pod/${podId}/verse`),\n            },\n          ].filter((i) => !!i),\n        },\n      ].filter((i) => !!i)\n    : [];\n\n  headerActions.push(...customButtons);\n\n  // log which redux state is being updated in a loop\n  useEffect(\n    () => () => {\n      console.log({ storedPods });\n    },\n    [storedPods],\n  );\n\n  useEffect(\n    () => () => {\n      console.log({ storedContacts });\n    },\n    [storedContacts],\n  );\n\n  useEffect(\n    () => () => {\n      console.log({ storedConnectionId });\n    },\n    [storedConnectionId],\n  );\n\n  useEffect(\n    () => () => {\n      console.log({ storedUsername });\n    },\n    [storedUsername],\n  );\n\n  // list of the state variable that could be causing a render loop\n  // storedPods\n  // storedContacts\n  // storedConnectionId\n  // storedUsername\n  // storedAvatar\n\n  console.log(\"rendering pod page\");\n\n  return (\n    <PageContainer\n      backgroundImage={\n        theme.palette.mode === \"dark\" ? darkBackground : lightBackground\n      }\n      headerProps={{\n        // title: pageTitle,\n        title: (\n          <div>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              {pageTitle}\n            </Typography>\n            <Typography\n              variant=\"subtitle2\"\n              component=\"div\"\n              sx={{ flexGrow: 1 }}\n            >\n              {peersActivelyTyping.length > 0 &&\n                `${peersActivelyTyping.join(\", \")} is typing...`}\n            </Typography>\n          </div>\n        ),\n        backButton: \"/pods\",\n        backCount: storedPods.filter((pod) => pod.unreadCount > 0).length,\n        avatarProps: {\n          src: isGroup ? conversation?.avatarUrl : contactDetails?.avatar,\n          alt: pageTitle[0],\n          isOnline,\n          isSomeOnline,\n        },\n        menuProps: {\n          icon: \"more\",\n          items: headerActions,\n        },\n        customButtons: (isOnline && !activeCalls.length) ? [\n          // !isGroup && !isMobile && { icon: 'screen', onClick: () => makeCall({ screen: true, video: true, audio: true }) },\n          !isGroup && { icon: 'camera', onClick: () => makeCall({ video: true, audio: true }) },\n          !isGroup && { icon: 'call', onClick: () => makeCall({ audio: true }) },\n        ].filter(i => !!i) : undefined\n      }}\n      className={classes.conversation}\n    >\n      {\n        <Conversation\n          className={classes.conversation}\n          isGroup={isGroup}\n          deleteItem={handleItemDelete}\n          onReply={handleOnReply}\n          onUpvote={handleUpvote}\n          list={[\n            ...(podBlockchain.messages ?? []).map((message) => ({\n              ...message,\n              name:\n                message.from === storedConnectionId\n                  ? storedUsername\n                  : storedContacts.find((contact) => {\n                      return contact.connectionId === message.from;\n                    })?.displayName,\n              avatar:\n                message.from === storedConnectionId\n                  ? storedAvatar\n                  : storedContacts.find((contact) => {\n                      return contact.id === message.from;\n                    })?.avatar,\n              isOnline: activeConnections.includes(message.from),\n              attachmentSha: message.payload?.sha,\n              type: message.from === storedConnectionId ? \"sent\" : \"recieved\",\n            })),\n            // ...conversation.messages.map(message => ({\n            //   ...message,\n            //   name: message.from === storedConnectionId\n            //     ? storedUsername\n            //     : storedContacts.find((contact) => {\n            //       return contact.id === message.from\n            //     })?.displayName,\n            //   avatar: message.from === storedConnectionId\n            //     ? storedAvatar\n            //     : storedContacts.find((contact) => {\n            //       return contact.id === message.from\n            //     })?.avatar,\n            //   isOnline: activeConnections.includes(message.from),\n\n            //   type: message.from === storedConnectionId ? 'sent' : 'recieved',\n            // }))\n          ]}\n          loading={isLoadingFile}\n        />\n      }\n\n      <div style={{ marginBottom: 50 }}></div>\n\n      <AppBar position=\"fixed\" color=\"primary\" sx={{ top: \"auto\", bottom: 0 }}>\n        <Container maxWidth=\"lg\" disableGutters>\n          {!!replyMessage && (\n            <Container\n              sx={{\n                p: \"10px 15px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <Typography\n                variant=\"subtitle2\"\n                component=\"div\"\n                sx={{ flexGrow: 1 }}\n              >\n                {t(\"podPage.replyingTo\", { displayName: replyMessage.name })}\n              </Typography>\n              <Message\n                style={{\n                  transform: \"scale(0.7)\",\n                  margin: \"-15px\",\n                }}\n                type={replyMessage.type}\n                payload={replyMessage.payload}\n                message={replyMessage.content}\n                attachmentSha={replyMessage.attachmentSha}\n                attachment={replyMessage.attachment}\n                imageAttachment={replyMessage.image}\n                username={replyMessage.name}\n                isOnline={isGroup && replyMessage.isOnline}\n                // parse date from something like `Date(item.timestampSent)` to `'10/23/2023 12:00:00 AM'`\n                timestamp={formatDate(replyMessage.timestamp?.created)}\n                avatar={replyMessage.avatar}\n              />\n              <Button onClick={() => setReplyMessage(null)}>\n                {t(\"podPage.cancelReply\")}\n              </Button>\n            </Container>\n          )}\n          <Toolbar disableGutters>\n            {/*  add an input field and a send button and make it so that the input takes up the available space */}\n            {/* make it so that the send button is always on the right side\n             */}\n            <OutlinedInput\n              id=\"outlined-adornment-weight\"\n              endAdornment={\n                <>\n                  <InputAdornment position=\"start\">\n                    <IconButton\n                      aria-label=\"send location\"\n                      onClick={handleAttachLocation}\n                      // icon is green when there is text in the input field\n                      color={\"primary\"}\n                      disabled={!isOnline}\n                      edge=\"end\"\n                    >\n                      <Badge badgeContent={null} color=\"info\">\n                        <PlaceIcon />\n                      </Badge>\n                    </IconButton>\n                  </InputAdornment>\n                  <InputAdornment position=\"start\">\n                    <IconButton\n                      aria-label=\"send message\"\n                      onClick={handleAttachFile}\n                      // icon is green when there is text in the input field\n                      color={\"primary\"}\n                      disabled={!isOnline}\n                      edge=\"end\"\n                    >\n                      <Badge badgeContent={null} color=\"info\">\n                        <AttachFileIcon />\n                      </Badge>\n                    </IconButton>\n                  </InputAdornment>\n                  <input\n                    type=\"file\"\n                    name=\"attachment\"\n                    accept=\"\"\n                    ref={fileInputRef}\n                    style={{ display: \"none\" }}\n                    onChange={attachFile}\n                  />\n                  <InputAdornment position=\"start\">\n                    <IconButton\n                      aria-label=\"send message\"\n                      onClick={handleAttachImage}\n                      // icon is green when there is text in the input field\n                      color={\"primary\"}\n                      disabled={!isOnline}\n                      edge=\"end\"\n                    >\n                      <Badge\n                        badgeContent={imageAttachment ? \"1\" : null}\n                        color=\"info\"\n                      >\n                        <ImageIcon />\n                      </Badge>\n                    </IconButton>\n                  </InputAdornment>\n                  <input\n                    type=\"file\"\n                    name=\"attachment\"\n                    accept=\"image/*\"\n                    ref={inputRef}\n                    style={{ display: \"none\" }}\n                    onChange={attachImage}\n                  />\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"send voice memo\"\n                      onClick={handleClickOpen}\n                      color={\"primary\"}\n                      disabled={!isOnline}\n                      edge=\"end\"\n                    >\n                      <Badge badgeContent={null} color=\"info\">\n                        <MicIcon />\n                      </Badge>\n                    </IconButton>\n                  </InputAdornment>\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"send message\"\n                      onClick={handleSendMessage}\n                      // icon is green when there is text in the input field\n                      color={\n                        messageInputValue || imageAttachment\n                          ? \"primary\"\n                          : \"disabled\"\n                      }\n                      disabled={\n                        (!messageInputValue && !imageAttachment) || !isOnline\n                      }\n                      edge=\"end\"\n                    >\n                      <SendIcon />\n                    </IconButton>\n                  </InputAdornment>\n                </>\n              }\n              aria-describedby=\"outlined-weight-helper-text\"\n              onChange={handleMessageChange}\n              // on Enter key press, send message\n              // but on on shift Enter\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\" && !ev.shiftKey) {\n                  ev.preventDefault();\n                  if (messageInputValue) handleSendMessage();\n                }\n              }}\n              placeholder=\"Type message here\"\n              value={messageInputValue}\n              classes={{ root: classes.messageInput }}\n              sx={{ width: \"100%\" }}\n              autoComplete=\"off\"\n              // lightblue background\n              // style={{ backgroundColor: '#f0f8ff' }}\n              multiline\n              inputProps={{\n                \"aria-label\": \"weight\",\n              }}\n            />\n          </Toolbar>\n        </Container>\n        <BootstrapDialog\n          onClose={handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={open || activeCalls.length > 0}\n          TransitionComponent={Transition}\n        >\n          <DialogTitle sx={{ m: 0, p: 2 }} id=\"customized-dialog-title\">\n            Voice message\n          </DialogTitle>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n          <DialogContent dividers>\n            {activeCalls?.length < 1 && (\n              <VoiceRecorderButton onVoiceRecording={handleAttachAudio} />\n            )}\n\n            {activeCalls.length > 0 &&\n              [activeCalls[activeCalls.length - 1]]\n                // .filter(call => call._remoteStream)\n                .map((call, index) => {\n                  const stream = call._remoteStream;\n                  const localStream = call._localStream;\n                  const isCasting = call.metadata?.cast;\n                  console.log({ call, stream, localStream, isCasting })\n                  // option to answer call\n                  if (localStream && !callActive) handleAnswerCall(call);\n                  // // autsswerCall(call)\n\n                  // on stream disconnect, cklosethe local tracks\n                  if (stream) {\n                    stream.oninactive = (...rest) => {\n                      [mediaStream, localStream, stream].map((stream) => {\n                        const tracks = stream?.getTracks();\n                        if (tracks) {\n                          console.log({ tracks });\n                          tracks.forEach((track) => track.stop());\n                          setMediaStream(null);\n                        }\n                      });\n                    };\n                  }\n\n                  return (\n                    <div className={classes.form}>\n                      {(stream) && (\n                        <>\n                          <video\n                            id={`remote-video-${index}`}\n                            playsInline\n                            style={{ width: \"100%\" }}\n                          ></video>\n                          <br />\n                          <br />\n                        </>\n                      )}\n                      {localStream && stream?.getVideoTracks().length > 0 && (\n                        <video\n                          id={`local-video-${index}`}\n                          muted\n                          playsInline\n                          style={{\n                            width: \"20vw\",\n                            position: \"absolute\",\n                            top: 90,\n                            left: 10,\n                          }}\n                        ></video>\n                      )}\n\n                      {!localStream && (\n                        <>\n                          <Button\n                            type=\"button\"\n                            sx={{ mb: 2 }}\n                            variant=\"contained\"\n                            fullWidth\n                            color=\"success\"\n                            onClick={() => handleAnswerCall(call)}\n                          >\n                            answer call\n                          </Button>\n                          <br />\n                        </>\n                      )}\n                      {!isCasting && localStream && stream && (\n                        <>\n                          <Button\n                            type=\"button\"\n                            sx={{ mb: 2 }}\n                            variant=\"contained\"\n                            fullWidth\n                            color=\"info\"\n                            onClick={() => navigate(`/pod/${podId}/verse`)}\n                          >\n                            go to verse\n                          </Button>\n                          <br />\n                        </>\n                      )}\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        fullWidth\n                        color=\"error\"\n                        onClick={handleEndCall}\n                      >\n                        hang up\n                      </Button>\n                    </div>\n                  );\n                })}\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose}>\n              close\n            </Button>\n          </DialogActions>\n        </BootstrapDialog>\n      </AppBar>\n    </PageContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import { updateUsername } from \"../../redux/slices/userProfileSlice\";\nimport {\n  updatePodName,\n  addUserToPod,\n  removePod,\n  addToBlockchain,\n} from \"../../redux/slices/podsSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListComponent from \"../../atomic/molecules/list/List\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport Accordion from \"@mui/material/Accordion\";\nimport ConnectToPeer from \"../../atomic/molecules/connect-to-peer/ConnectToPeer\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport { compiler as profileCompiler } from \"../../blockchain/chains/profileChain\";\nimport {\n  compiler as podCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/podChain\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useTranslation } from \"react-i18next\";\n\nimport usePeer from \"../../p2p/usePeer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    height: theme.spacing(8),\n  },\n  form: {\n    padding: theme.spacing(3),\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  img: {\n    width: \"100%\",\n  },\n}));\n\nexport default function Profile() {\n  const classes = useStyles();\n  const [t] = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { podId } = useParams();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const podDetails = useSelector((state) =>\n    state.pods.find((pod) => pod.id === podId),\n  );\n  const contacts = useSelector((state) => state.contacts);\n  const podBlockchain = useSelector(\n    (state) => state.pods.find((pod) => pod.id === podId).blockchain,\n  );\n  const updatePodNameDispatch = (podName) => dispatch(updatePodName(podName));\n  const addUserToPodDispatch = (userId) =>\n    dispatch(addUserToPod({ podId, userId }));\n  const removePodDispatch = (podId) => dispatch(removePod(podId));\n\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const addToBlockchainDispatch = ({ blocks, block, storage }) =>\n    dispatch(addToBlockchain({ podId, blocks, block, storage, append: true }));\n  const { compiledBlockchain: userProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: userProfileBlockchain,\n  });\n  const storedConnectionId = userProfile.connectionId;\n  // const storedConnectionId = useSelector((state) => state.userProfile.id);\n\n  // create pod blockchain with dispatch\n  const { compiledBlockchain: compiledPodBlockchain, addBlocks: addPodBlocks } =\n    useBlockchain({\n      compiler: podCompiler,\n      blockchain: podBlockchain,\n      storage: podBlockchain.storage,\n      dispatch: addToBlockchainDispatch,\n    });\n\n  const { sendMessage, connectToPeer, activeConnections } = usePeer(\n    podDetails?.members || [],\n  );\n\n  useEffect(() => {\n    console.log({ compiledPodBlockchain });\n    // memebers not connected to\n    const membersNotConnectedTo = compiledPodBlockchain.users.filter(\n      (userId) =>\n        !contacts.map((contact) => contact.connectionId).includes(userId),\n    );\n    // connect to members not connected to\n    membersNotConnectedTo.forEach((member) => {\n      connectToPeer(member);\n    });\n  }, [compiledPodBlockchain?.users]);\n\n  const [expanded, setExpanded] = React.useState(false);\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handlePodNameChange = (e) => {\n    updatePodNameDispatch({ podId, name: e.target.value });\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const membersList = compiledPodBlockchain?.users\n    .filter((member) => member !== storedConnectionId)\n    .map((member) =>\n      contacts.find((contact) => contact.connectionId === member),\n    )\n    .filter((contact) => contact)\n    .map((contact) => ({\n      id: contact.id,\n      name: contact.displayName,\n      avatarUrl: contact.avatar,\n      onClick: () => navigate(`/contact/${contact.connectionId}`),\n      isOnline: activeConnections.includes(contact.connectionId),\n    }));\n\n  const contactsThatCanBeAdded = contacts\n    .filter(\n      (contact) => !compiledPodBlockchain.users.includes(contact.connectionId),\n    )\n    .filter((contact) => activeConnections.includes(contact.connectionId))\n    .map((contact) => {\n      return {\n        id: contact.id,\n        name: contact.displayName,\n        avatarUrl: contact.avatar,\n        isOnline: activeConnections.includes(contact.connectionId),\n        onClick: () => {\n          handleAddPeerToGroup(contact);\n          // console.log('adding user to pod')\n          // sendMessage({\n          //     type: 'addNewPod',\n          //     recipients: [contact.id],\n          //     payload: {\n          //         ...podDetails,\n          //         members: [...podDetails.members, contact.id],\n          //     }\n          // }).then(() => {\n          //     addUserToPodDispatch(contact.id)\n          // });\n\n          // sendMessage({\n          //     type: 'addUserToPod',\n          //     recipients: podDetails.members,\n          //     payload: {\n          //         podId,\n          //         userId: contact.id,\n          //     }\n          // })\n        },\n      };\n    });\n\n  const handleAddPeerToGroup = (contact) => {\n    const addNewUserBlocks = blockBuilders().addMember({\n      userId: contact.connectionId,\n    });\n\n    const pendingUpdate = addPodBlocks(addNewUserBlocks);\n    const newPod = {\n      ...pendingUpdate,\n      ...compiledPodBlockchain,\n    };\n\n    sendMessage({ type: \"addToBlockchain\", payload: newPod });\n    sendMessage({\n      type: \"addNewPod\",\n      payload: {\n        id: podId,\n        pendingBlocks: [...podBlockchain.chain, ...pendingUpdate.pendingBlocks],\n        pendingStorage: {\n          ...podBlockchain.storage,\n          ...pendingUpdate.pendingStorage,\n        },\n      },\n      recipients: [contact.connectionId],\n    });\n    // .then(() => {\n    //     navigate(`/pod/${newPod.id}`);\n    // });\n  };\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: podDetails.name,\n        backButton: `/pod/${podId}`,\n        avatarProps: {\n          // src: \"https://source.unsplash.com/random/400x200?login\",\n          alt: \"random\",\n        },\n      }}\n    >\n      {/* add an imagae at the top */}\n      <Avatar\n        alt={\"Remy Sharp\"}\n        // src={\"https://source.unsplash.com/random/400x200?login\"}\n        style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n      />\n\n      <form noValidate className={classes.form}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"podName\"\n          label={t(\"podDetailsPage.podName\")}\n          name=\"podName\"\n          defaultValue={podDetails.name}\n          onChange={handlePodNameChange}\n        />\n        <ListComponent list={[...membersList]} />\n\n        {/* <Button\n                    type=\"button\"\n                    fullWidth\n                    sx={{ mb: 2 }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleMenu}\n                >\n                    add peer to group\n                </Button>\n                <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {contactsThatCanBeAdded.map((contact) => {\n                        return (\n                            <MenuItem onClick={contact.onClick}>{contact.name}</MenuItem>\n                        )\n                    })}\n                </Menu> */}\n\n        {contactsThatCanBeAdded.length > 0 && (\n          <Accordion\n            expanded={expanded === \"addpeer\"}\n            onChange={handleChange(\"addpeer\")}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel4bh-content\"\n              id=\"panel4bh-header\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n              sx={{\n                \"& .MuiAccordionSummary-content\": {\n                  overflow: \"hidden\",\n                },\n              }}\n            >\n              <Typography\n                component=\"div\"\n                style={{\n                  flexGrow: 1,\n                  flexShrink: 1,\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                  marginRight: \"8px\", // Providing space between the text and the icon\n                }}\n              >\n                {t(\"podDetailsPage.addExistingPeerToPod\")}\n              </Typography>\n            </AccordionSummary>\n\n            <AccordionDetails>\n              <ListComponent\n                chevronOverride={<AddIcon />}\n                list={[...contactsThatCanBeAdded]}\n              />\n            </AccordionDetails>\n          </Accordion>\n        )}\n\n        <ConnectToPeer collapse />\n\n        <Accordion\n          expanded={expanded === \"advanced\"}\n          onChange={handleChange(\"advanced\")}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel4bh-content\"\n            id=\"panel4bh-header\"\n          >\n            <Typography sx={{ flexShrink: 0 }}>{t(\"common.more\")}</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"podID\"\n              label={t(\"podDetailsPage.podId\")}\n              name=\"podID\"\n              value={podDetails.id}\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n\n            {!!false && (\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => {\n                  console.log(\"leaving and deleting pod\");\n                  navigate(-2);\n                  removePodDispatch({ podId });\n                  // updateUsernameDispatch(\"\");\n                }}\n              >\n                Leave Pod\n              </Button>\n            )}\n          </AccordionDetails>\n        </Accordion>\n      </form>\n    </PageContainer>\n  );\n}\n","// import React, { useState } from \"react\";\n\n// import {\n//     Avatar,\n//     Conversation,\n//     ConversationHeader,\n//     ConversationList,\n//     InfoButton,\n//     MainContainer,\n//     MessageList,\n//     Search,\n//     Sidebar,\n//     TypingIndicator,\n//     VideoCallButton,\n//     VoiceCallButton,\n//     Message,\n//     MessageInput,\n//     ChatContainer,\n//     MessageSeparator,\n//     ExpansionPanel\n// } from \"@chatscope/chat-ui-kit-react\";\n// import IconButton from '@mui/material/IconButton';\n// import AddIcon from '@mui/icons-material/Add';\n\n// // import contacts to be displayed at the end of this list of contacts\n// import { useSelector, useDispatch } from 'react-redux'\n\n// import lillyIco from './logo192.png'\n// import joeIco from './logo192.png'\n// import emilyIco from './logo192.png'\n// import kaiIco from './logo192.png'\n// import akaneIco from './logo192.png'\n// import eliotIco from './logo192.png'\n// import zoeIco from './logo192.png'\n// import patrikIco from './logo192.png'\n// import { useNavigate, useParams } from \"react-router-dom\";\n// // import for the creation of a new conversation\n// import { createConversation } from '../../redux/slices/podsSlice'\n\n// export default () => {\n//     const [messageInputValue, setMessageInputValue] = useState(\"\");\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch();\n//     const contacts = useSelector((state) => state.contacts.contacts);\n\n//     // get the conversationId from the url if it is there with react-router-dom\n//     const { conversationId } = useParams();\n\n//     // handle the creation of a new conversation\n//     const handleCreateConversation = () => {\n//         dispatch(createConversation({\n//             name: 'New Conversation',\n//             messages: [],\n//             id: Math.floor(Math.random() * 1000000)\n//         }))\n//     }\n\n//     return (\n//         <div style={{\n//             height: \"100vh\",\n//             position: \"relative\",\n//             overflow: \"none\"\n//         }}>\n//                 <Search key={'search'} placeholder=\"Search...\" style={{ margin: '10px' }}/>\n//                 <ConversationList scrollable>\n//                     {contacts.map((contact) => (\n//                         <Conversation name={contact.name} lastSenderName={contact.name} info=\"Yes i can do it for you\" onClick={() => navigate(`/contacts/${contact.id}`)} active={conversationId === contact.id}>\n//                             <Avatar src={patrikIco} name={contact.name} status=\"available\" />\n//                         </Conversation>\n//                     ))}\n\n//                     <div style={{\n//                         // position: \"fixed\",\n//                         // bottom: \"0\",\n//                         // left: \"0\",\n//                         // right: \"0\",\n//                         textAlign: \"center\",\n//                         padding: \"10px\",\n//                     }}>\n//                         <IconButton style={{ background: '#2b6a9b', color: '#fff', zIndex: 1, }} aria-label=\"add\" size=\"large\" onClick={() => navigate('/contacts/add')}>\n//                             <AddIcon />\n//                         </IconButton>\n//                         <IconButton style={{ background: '#2b6a9b', color: '#fff', zIndex: 1, }} aria-label=\"add\" size=\"large\" onClick={handleCreateConversation}>\n//                             <AddIcon />\n//                         </IconButton>\n//                     </div>\n\n//                 </ConversationList>\n//         </div>\n//     )\n// }\n\nimport React, { useEffect, useState, useRef, useMemo } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ListComponent from \"../../atomic/molecules/list/List\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport usePeer from \"../../p2p/usePeer.js\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopyOutlined\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport QrCode2Icon from \"@mui/icons-material/QrCode2\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport QRReader from \"react-qr-scanner\";\nimport { useNotification } from \"../../notifications/notificationManager\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/profileChain\";\nimport ConnectToPeer from \"../../atomic/molecules/connect-to-peer/ConnectToPeer\";\nimport { red } from \"@mui/material/colors\";\nimport { ColorModeContext } from \"../../../App.tsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { logToNLevelAnalytics } from \"../../../components/utils/analytics\";\nimport { CoachMark } from \"react-coach-mark\";\nimport hipaintImage from \"../../../../public/logo512.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    height: theme.spacing(8),\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  chevron: {\n    justifyContent: \"right\",\n  },\n  fab: {\n    position: \"absolute !important\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  hidden: {\n    display: \"none\",\n  },\n  qrcodeReader: {\n    height: \"100vh\",\n    width: \"100vw\",\n    top: 0,\n    left: 0,\n    position: \"absolute\",\n    zIndex: 10000,\n  },\n  connect: {\n    margin: `0 ${theme.spacing(2)}`,\n  },\n}));\n\nexport default function ContactsListPage({ headerOverride }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  const sendNotification = useNotification();\n\n  useEffect(() => {\n    logToNLevelAnalytics(\"contactsPageLoaded\");\n  }, []);\n\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n  // const storedConnectionId = useSelector((state) => state.userProfile.connectionId);\n  const storedPods = useSelector((state) => state.pods);\n  const { activeConnections } = usePeer([]);\n  const [scanning, setScanning] = useState(false);\n  const [result, setResult] = useState(\"No result\");\n  // const [deferredPrompt, setDeferredPrompt] = useState(null);\n\n  // useEffect(() => {\n  //     const handleBeforeInstallPromptEvent = (e) => {\n  //         console.log('setting defferedPrompt')\n  //         e.preventDefault();\n  //         setDeferredPrompt(e);\n  //     };\n  //     window.addEventListener('beforeinstallprompt', handleBeforeInstallPromptEvent);\n\n  //     const bipEvent = new Event('beforeinstallprompt');\n\n  //     // Define the prompt method on the event object\n  //     bipEvent.prompt = () => {\n  //         return new Promise((resolve) => {\n  //             // Simulate user accepting the prompt\n  //             resolve({ outcome: 'accepted' });  // or 'dismissed' to simulate user dismissing the prompt\n  //         });\n  //     };\n\n  //     // Dispatch the custom event to trigger your event handler\n  //     window.dispatchEvent(bipEvent);\n  //     return () => {\n  //         window.removeEventListener('beforeinstallprompt', handleBeforeInstallPromptEvent);\n  //     };\n  // }, []);\n\n  const contactsList = contacts.map((contact) => ({\n    id: contact.id,\n    name: contact.displayName,\n    avatarUrl: contact.avatar,\n    onClick: () => navigate(`/contact/${contact.connectionId}`),\n    isOnline: activeConnections.includes(contact.connectionId),\n  }));\n\n  const handleScan = (data) => {\n    if (!data?.text) return;\n    data && setResult(data);\n    data && navigate(data.text.replace(window.location.origin, \"\"));\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n  const previewStyle = {\n    height: \"100vh\",\n    width: \"100vw\",\n    top: 0,\n    left: 0,\n    position: \"absolute\",\n    zIndex: 10000,\n  };\n\n  const isInstalledPwa = useMemo(() => {\n    return (\n      window.matchMedia(\"(display-mode: standalone)\").matches ||\n      window.navigator.standalone ||\n      document.referrer.includes(\"android-app://\")\n    );\n  }, []);\n\n  const [activatedNumber, setActivateNumber] = useState(null);\n  const NextButton = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => setActivateNumber(activatedNumber + 1)}\n    >\n      Next\n    </Button>\n  );\n  const PrevButton = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => setActivateNumber(activatedNumber - 1)}\n    >\n      Prev\n    </Button>\n  );\n\n  const ref1 = useRef(null);\n  const ref2 = useRef(null);\n\n  const coachList = [\n    {\n      activate: true,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          Share link or QR-code to connect to a peer and get started!\n          <br />\n          {NextButton}{\" \"}\n        </Typography>\n      ),\n      reference: ref1,\n      tooltip: { position: \"top\" },\n    },\n  ];\n\n  const coach = coachList[activatedNumber];\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: t(\"contactsPage.pageTitle\"),\n        backButton: storedPods.length > 0 ? \"/pods\" : false,\n        backCount: storedPods.filter((pod) => pod.unreadCount > 0).length,\n        // avatarProps: {\n        //   src: \"https://source.unsplash.com/random/400x200?login\",\n        //   alt: \"random\"\n        // },\n        // menuProps: {\n        //   icon: 'account',\n        //   items: [\n        //     { text: 'Profile', icon: 'account', onClick: () => navigate('/profile') },\n        //   ]\n        // }\n        customButtons: [\n          {\n            icon: \"help\",\n            onClick: () => setActivateNumber(0),\n          },\n        ],\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: t(\"components.menuItems.profile\"),\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n            // { text: theme.palette.mode === 'dark' ? 'Light Mode' : 'Dark Mode', icon: theme.palette.mode === 'dark' ? 'lightMode' : 'darkMode', onClick: colorMode.toggleColorMode },\n            // !isInstalledPwa ? { text: isFullScreen ? 'Exit Fullscreen' : 'Fullscreen', icon: isFullScreen ? 'fullscreenExit' : 'fullscreen', onClick: () => setIsFullScreen(!isFullScreen) } : null,\n            // !isInstalledPwa ? {\n            //     text: 'Install App', icon: 'install', onClick: () => {\n            //         sendNotification?.('Requesting to install.', { variant: 'info' })\n\n            //         if (deferredPrompt) {\n            //             deferredPrompt.prompt()\n            //                 .then((result) => {\n            //                     if (result.outcome === 'accepted') {\n            //                         console.log('Installation accepted');\n            //                         sendNotification?.('👍 Install possible. Try from your browser settings.', { variant: 'success' })\n\n            //                     } else {\n            //                         console.log('Installation dismissed');\n            //                         sendNotification?.('👎 Autoinstall dismissed. You can install through your browser.', { variant: 'warning' })\n\n            //                     }\n            //                 })\n            //                 .catch((error) => {\n            //                     console.error('Installation prompt error:', error);\n            //                     sendNotification?.('👎 Autoinstall failed. You might be able to install through your browser.', { variant: 'warning' })\n\n            //                 });\n            //         } else {\n            //             console.error('The beforeinstallprompt event has not been fired.');\n            //             sendNotification?.('👎 Autoinstall failed. You might be able to install through your browser.', { variant: 'warning' })\n            //         }\n            //     }\n            // } : null,\n            // // { text: 'Language', icon: 'translate', onClick: () => navigate('/privacy'), subMenuItems: [\n            // //     { text: 'English', onClick: () => navigate('/privacy') },\n            // //     { text: 'Spanish', onClick: () => navigate('/privacy') },\n            // //   ] },\n            // { text: 'Terms', icon: 'document', onClick: () => navigate('/terms') },\n            // { text: 'About', icon: 'info', onClick: () => window.location = 'https://positive-intentions.com' },\n          ],\n        },\n        ...headerOverride,\n      }}\n      // speedDialProps={{\n      //     actions: [\n      //         { icon: <CameraAltIcon />, name: 'Camera', onClick: () => setScanning(true) },\n      //         { icon: <QrCode2Icon />, name: 'QR code', onClick: () => navigate(`/profile/qr`) },\n      //         { icon: <LinkIcon />, name: 'share link', onClick: () => navigator.clipboard.writeText(`${window.location.origin}/login/${storedConnectionId}`)},\n      //     ],\n      // }}\n      //   fabProps={{\n      //     icon: \"add\",\n      //     onClick: () => {\n      //       console.log(\"add clicked\");\n      //     }\n      //   }}\n    >\n      {!scanning && (\n        <ListComponent\n          list={[\n            ...contactsList,\n            // { id: 1, name: \"ally all 1\", avatarUrl: 'https://source.unsplash.com/random/400x200?aaa', onClick: () => navigate(`/contact/1`) },\n            // { id: 2, name: \"bally ball 2\", avatarUrl: 'https://source.unsplash.com/random/400x200?bbb', onClick: () => navigate(`/contact/2`) },\n            // { id: 3, name: \"cally call 3\", avatarUrl: 'https://source.unsplash.com/random/400x200?ccc', onClick: () => navigate(`/contact/3`) },\n            // { id: 4, name: \"dally dall 4\", avatarUrl: 'https://source.unsplash.com/random/400x200?ddd', onClick: () => navigate(`/contact/4`) },\n            // { id: 5, name: \"eally eall 5\", avatarUrl: 'https://source.unsplash.com/random/400x200?eee', onClick: () => navigate(`/contact/5`) },\n            // { id: 6, name: \"fally fall 6\", avatarUrl: 'https://source.unsplash.com/random/400x200?fff', onClick: () => navigate(`/contact/6`) },\n            // { id: 7, name: \"gally gall 7\", avatarUrl: 'https://source.unsplash.com/random/400x200?ggg', onClick: () => navigate(`/contact/7`) },\n            // { id: 8, name: \"hally hall 8\", avatarUrl: 'https://source.unsplash.com/random/400x200?hhh', onClick: () => navigate(`/contact/8`) },\n            // { id: 9, name: \"ially iall 9\", avatarUrl: 'https://source.unsplash.com/random/400x200?iii', onClick: () => navigate(`/contact/9`) },\n            // { id: 10, name: \"jally jall 10\", avatarUrl: 'https://source.unsplash.com/random/400x200?jjj', onClick: () => navigate(`/contact/10`) },\n            // { id: 11, name: \"kally kall\", avatarUrl: 'https://source.unsplash.com/random/400x200?aaa', onClick: () => navigate(`/contact/11`) },\n            // { id: 12, name: \"lally lall\", avatarUrl: 'https://source.unsplash.com/random/400x200?bbb', onClick: () => navigate(`/contact/12`) },\n            // { id: 13, name: \"mally mall\", avatarUrl: 'https://source.unsplash.com/random/400x200?ccc', onClick: () => navigate(`/contact/13`) },\n            // { id: 14, name: \"nally nall\", avatarUrl: 'https://source.unsplash.com/random/400x200?ddd', onClick: () => navigate(`/contact/14`) },\n            // { id: 15, name: \"oally oall\", avatarUrl: 'https://source.unsplash.com/random/400x200?eee', onClick: () => navigate(`/contact/15`) },\n            // { id: 16, name: \"pally pall\", avatarUrl: 'https://source.unsplash.com/random/400x200?fff', onClick: () => navigate(`/contact/16`) },\n            // { id: 17, name: \"qally qall\", avatarUrl: 'https://source.unsplash.com/random/400x200?ggg', onClick: () => navigate(`/contact/17`) },\n            // { id: 18, name: \"rally rall\", avatarUrl: 'https://source.unsplash.com/random/400x200?hhh', onClick: () => navigate(`/contact/18`) },\n            // { id: 19, name: \"sally sall\", avatarUrl: 'https://source.unsplash.com/random/400x200?iii', onClick: () => navigate(`/contact/19`) },\n            // { id: 20, name: \"tally tall\", avatarUrl: 'https://source.unsplash.com/random/400x200?jjj', onClick: () => navigate(`/contact/20`) },\n            // { id: 21, name: \"ually uall\", avatarUrl: 'https://source.unsplash.com/random/400x200?aaa', onClick: () => navigate(`/contact/21`) },\n            // { id: 22, name: \"vally vall\", avatarUrl: 'https://source.unsplash.com/random/400x200?bbb', onClick: () => navigate(`/contact/22`) },\n            // { id: 23, name: \"wally wall\", avatarUrl: 'https://source.unsplash.com/random/400x200?ccc', onClick: () => navigate(`/contact/23`) },\n            // { id: 24, name: \"xally xall\", avatarUrl: 'https://source.unsplash.com/random/400x200?ddd', onClick: () => navigate(`/contact/24`) },\n            // { id: 25, name: \"yally yall\", avatarUrl: 'https://source.unsplash.com/random/400x200?eee', onClick: () => navigate(`/contact/25`) },\n            // { id: 26, name: \"zally zall\", avatarUrl: 'https://source.unsplash.com/random/400x200?fff', onClick: () => navigate(`/contact/26`) },\n            // { id: 27, name: \"ally all 27\", avatarUrl: 'https://source.unsplash.com/random/400x200?ggg', onClick: () => navigate(`/contact/27`) },\n            // { id: 28, name: \"bally ball 28\", avatarUrl: 'https://source.unsplash.com/random/400x200?hhh', onClick: () => navigate(`/contact/28`) },\n          ]}\n        />\n      )}\n      <CoachMark {...coach} />\n      <Avatar\n          src={hipaintImage}\n        style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n      />\n\n      <div ref={ref1} className={classes.connect}>\n        <ConnectToPeer\n          open={!contactsList.length}\n          link={!contactsList.length}\n        />\n      </div>\n\n      {scanning && (\n        <QRReader\n          delay={100}\n          className={classes.qrcodeReader}\n          onError={handleError}\n          onScan={handleScan}\n          constraints={{\n            video: {\n              facingMode: \"environment\",\n            },\n          }}\n        />\n      )}\n    </PageContainer>\n  );\n}\n","// import React, { useEffect, useState } from \"react\";\n// import { makeStyles } from \"@mui/styles\";\n// import AppBar from \"@mui/material/AppBar\";\n// import Typography from \"@mui/material/Typography\";\n// import Avatar from \"@mui/material/Avatar\";\n// import Button from \"@mui/material/Button\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { Navigate, useNavigate, useParams } from \"react-router-dom\";\n// import IconButton from \"@mui/material/IconButton\";\n// import ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n// import AppHeader from \"../../atomic/molecules/app-header/AppHeader\";\n\n// const useStyles = makeStyles((theme) => ({\n//     appBar: {\n//         height: theme.spacing(8),\n//     },\n//     menuButton: {\n//         marginRight: theme.spacing(2),\n//     },\n//     title: {\n//         fontWeight: \"bold\",\n//         textAlign: \"left\",\n//         display: \"flex\",\n//         alignItems: \"center\",\n//         height: \"100%\",\n//         padding: `0 ${theme.spacing(3)}`,\n//     },\n//     avatar: {\n//         width: `${theme.spacing(20)} !important`,\n//         height: `${theme.spacing(20)} !important`,\n//         margin: theme.spacing(3),\n//     },\n//     backButton: {\n//         marginRight: theme.spacing(2),\n//     },\n//     details: {\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\",\n//         padding: theme.spacing(3),\n//     },\n//     deleteButton: {\n//         marginTop: theme.spacing(2),\n//     },\n// }));\n\n// export default function ContactDetailsPage() {\n//     const classes = useStyles();\n//     const { contactId } = useParams();\n//     const [contact, setContact] = useState({});\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         // here you can make a call to your api to fetch the contact data\n//         // setContact()\n//         setContact({\n//             id: contactId,\n//             avatarUrl: \"https://via.placeholder.com/150\",\n//             username: \"Contact Username\",\n//             connectionId: \"conn_12345\",\n//         });\n//     }, [contactId]);\n\n//     const handleDelete = () => {\n//         console.log(\"Deleting contact: \", contactId);\n//     };\n\n//     const handleBackButtonClick = () => {\n//         navigate(-1);\n//     };\n\n//     return (\n//         <>\n//             <AppHeader\n//                 title=\"Contact Details\"\n//                 backButton\n//             />\n//             <div className={classes.details}>\n//                 <Avatar className={classes.avatar} src={contact.avatarUrl} />\n//                 <Typography variant=\"subtitle1\">Username: {contact.username}</Typography>\n//                 <Typography variant=\"subtitle1\">Connection ID: {contact.connectionId}</Typography>\n//                 <Button className={classes.deleteButton} variant=\"contained\" color=\"secondary\" onClick={() => {\n//                     console.log(\"deleting contact\", contact.id);\n//                     //dispatch the delete action here\n//                 }}>\n//                     Delete Contact\n//                 </Button>\n//             </div>\n//         </>\n//     );\n// }\n\nimport React, { useEffect, useState, useMemo, useRef } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateUsername } from \"../../redux/slices/userProfileSlice\";\nimport {\n  createNewPod,\n  removeUserFromConversationFromAllPods,\n  addToBlockchain,\n} from \"../../redux/slices/podsSlice\";\n\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport { compiler as profileCompiler } from \"../../blockchain/chains/profileChain\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  removeContact,\n  updateContactDisplayName,\n} from \"../../redux/slices/contactsSlice\";\nimport usePeer from \"../../p2p/usePeer\";\nimport ConnectToPeer from \"../../atomic/molecules/connect-to-peer/ConnectToPeer\";\nimport ListComponent from \"../../atomic/molecules/list/List\";\nimport {\n  compiler as podCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/podChain\";\n// import Blockchain from \"../../blockchain/Blockchain\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCryptography } from \"cryptography/Cryptography\";\nimport { CoachMark } from \"react-coach-mark\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    height: theme.spacing(8),\n  },\n  form: {\n    padding: theme.spacing(3),\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  img: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: `${theme.spacing(2)} !important`,\n  },\n}));\n\nexport default function Profile() {\n  const { chance } = useCryptography();\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { contactId } = useParams();\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const addToBlockchainDispatch = (update) => dispatch(addToBlockchain(update));\n  const { compiledBlockchain: userProfile, addBlocks: addBlocksToProfile } =\n    useBlockchain({\n      compiler: profileCompiler,\n      blockchain: userProfileBlockchain,\n      dispatch: addToBlockchainDispatch,\n    });\n  const userProfileId = userProfile.connectionId;\n  // const userProfileId = useSelector((state) => state.userProfile.connectionId);\n  const contacts = useSelector((state) => state.contacts);\n  const contact = contacts.find(\n    (contact) => contact.connectionId === contactId,\n  );\n  const { connectToPeer, sendMessage, activeConnections } = usePeer([\n    contactId,\n  ]);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const removeContactDispatch = (contactId) =>\n    dispatch(removeContact({ id: contactId }));\n  const updateContactDisplayNameDispatch = (newDisplayName) =>\n    dispatch(\n      updateContactDisplayName({ id: contactId, displayName: newDisplayName }),\n    );\n  const createNewPodDispatch = (newPod) => dispatch(createNewPod(newPod));\n  const removeUserFromConversationFromAllPodsDispatch = (userId) =>\n    dispatch(removeUserFromConversationFromAllPods({ userId }));\n  const [chatName, setChatName] = useState(chance.country({ full: true }));\n  const isOnline = activeConnections.includes(contact?.connectionId);\n\n  const podWithPeer = useSelector((state) =>\n    state.pods.find((pod) => {\n      const podBlockchain = new Blockchain({\n        chain: pod?.blockchain?.chain ?? [],\n        compiler: podCompiler,\n        storage: pod?.blockchain?.storage ?? {},\n      });\n\n      const compiledBlockchain = podBlockchain.compile();\n\n      return (\n        compiledBlockchain?.users?.length === 2 &&\n        compiledBlockchain.users.includes(contactId)\n      );\n    }),\n  );\n\n  const storedPods = useSelector((state) => state.pods);\n\n  const { compiledBlockchains: compiledPods } = useBlockchain({\n    compiler: podCompiler,\n    blockchains: storedPods.map((pod) => pod.blockchain),\n    dispatch: addToBlockchainDispatch,\n  });\n\n  const anyPodWithPeer = useSelector(\n    (state) =>\n      !!state.pods.find((pod) => {\n        const podBlockchain = new Blockchain({\n          chain: pod?.blockchain?.chain ?? [],\n          compiler: podCompiler,\n          storage: pod?.blockchain?.storage ?? {},\n        });\n\n        const compiledBlockchain = podBlockchain.compile();\n\n        return compiledBlockchain.users.includes(contactId);\n      }),\n  );\n\n  const handleAddPeerToGroup = (contact, pod) => {\n    console.log({ contact, pod });\n    const addNewUserBlocks = blockBuilders().addMember({\n      userId: contact.connectionId,\n    });\n\n    const pendingUpdate = pod.addBlocks(addNewUserBlocks);\n    const newPod = {\n      ...pendingUpdate,\n      ...pod,\n    };\n\n    const podBlockchain =\n      storedPods.find((storedPod) => storedPod.id === pod.id)?.blockchain ?? [];\n\n    sendMessage({ type: \"addToBlockchain\", payload: newPod });\n    sendMessage({\n      type: \"addNewPod\",\n      payload: {\n        id: pod.id,\n        pendingBlocks: [...podBlockchain.chain, ...pendingUpdate.pendingBlocks],\n        pendingStorage: {\n          ...podBlockchain.storage,\n          ...pendingUpdate.pendingStorage,\n        },\n      },\n      recipients: [contact.connectionId],\n    });\n    // .then(() => {\n    //     navigate(`/pod/${newPod.id}`);\n    // });\n  };\n\n  const numberOfPod = useSelector((state) => state.pods.length);\n\n  const [expanded, setExpanded] = React.useState(false);\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleConnectToPeer = () => {\n    connectToPeer(contactId);\n  };\n\n  const handleCreateNewPod = () => {\n    const podBlockchain = new Blockchain({\n      chain: [],\n      compiler: podCompiler,\n      storage: {},\n    });\n\n    const newPodDetails = {\n      id: Math.random().toString(36).slice(2),\n      members: [contactId, userProfileId],\n      name: chatName,\n      avatar: \"\",\n      from: userProfileId,\n    };\n    const newPodBlocks = blockBuilders().createPod(newPodDetails);\n    podBlockchain.addBlocks(newPodBlocks);\n    const pendingUpdate = podBlockchain.getUpdate();\n    const newPod = { ...pendingUpdate, ...newPodDetails };\n    createNewPodDispatch(newPod);\n\n    sendMessage({ type: \"addNewPod\", payload: newPod }).then(() => {\n      navigate(`/pod/${newPod.id}`);\n    });\n  };\n\n  const handleRegisterNewDevice = () => {\n    if (anyPodWithPeer) {\n      compiledPods.forEach((pod) => {\n        console.log({ pod });\n        handleAddPeerToGroup(contact, pod);\n      });\n    } else {\n      const podBlockchain = new Blockchain({\n        chain: [],\n        compiler: podCompiler,\n        storage: {},\n      });\n\n      const newPodDetails = {\n        id: Math.random().toString(36).slice(2),\n        members: [contactId, userProfileId],\n        name: chatName,\n        avatar: \"\",\n        from: userProfileId,\n        clone: true,\n      };\n      const newPodBlocks = blockBuilders().createPod(newPodDetails);\n      podBlockchain.addBlocks(newPodBlocks);\n      const pendingUpdate = podBlockchain.getUpdate();\n      const newPod = { ...pendingUpdate, ...newPodDetails };\n\n      console.log({ compiledPods });\n\n      // compiledPods.forEach((pod) => {\n      //     console.log({ pod })\n      //     handleAddPeerToGroup(contact, pod);\n      // });\n\n      sendMessage({ type: \"addNewPod\", payload: newPod }).then(\n        ({ canCreateClone }) => {\n          if (!canCreateClone) return;\n          console.log({ canCreateClone });\n          if (!anyPodWithPeer) createNewPodDispatch(newPod);\n          return navigate(`/pod/${newPod.id}`);\n        },\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (!contact) {\n      handleConnectToPeer();\n    }\n\n    if (userProfileId === contactId) {\n      navigate(-1);\n      navigate(\"/profile\");\n    }\n  }, [contact]);\n\n  const handleUpdateContactDisplayName = (e) => {\n    e.preventDefault();\n    updateContactDisplayNameDispatch(e.target.value);\n  };\n\n  const [activatedNumber, setActivateNumber] = useState(null);\n  const NextButton = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => setActivateNumber(activatedNumber + 1)}\n    >\n      Next\n    </Button>\n  );\n  const PrevButton = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => setActivateNumber(activatedNumber - 1)}\n    >\n      Prev\n    </Button>\n  );\n\n  const ref1 = useRef(null);\n  const ref2 = useRef(null);\n  const ref3 = useRef(null);\n\n  const coachList = [\n    {\n      activate: true,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          Change the display name of the peers. it will be updated throughout\n          the app. <br />\n          {NextButton}{\" \"}\n        </Typography>\n      ),\n      reference: ref1,\n      tooltip: { position: \"top\" },\n    },\n    {\n      activate: true,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          Create a new Pod with the peer\n          <br />\n          {PrevButton}\n          {NextButton}{\" \"}\n        </Typography>\n      ),\n      reference: ref2,\n      tooltip: { position: \"top\" },\n    },\n    {\n      activate: true,\n      component: (\n        <Typography\n          style={{\n            color: \"black\",\n          }}\n        >\n          More technical details and configuration for the peer.\n          <br />\n          {PrevButton}\n          {NextButton}{\" \"}\n        </Typography>\n      ),\n      reference: ref3,\n      tooltip: { position: \"top\" },\n    },\n  ];\n\n  const coach = coachList[activatedNumber];\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: contact ? contact.displayName : \"New Peer\",\n        backButton: \"/contacts\",\n        avatarProps: {\n          src: contact ? contact.avatar : \"\",\n          alt: \"\",\n          isOnline,\n        },\n        customButtons: [\n          {\n            icon: \"help\",\n            onClick: () => setActivateNumber(0),\n          },\n        ],\n      }}\n    >\n      <CoachMark {...coach} />\n      {/* add an imagae at the top */}\n      <Avatar\n        alt={contact ? contact.displayName : \"requesting...\"}\n        src={contact ? contact.avatar : \"\"}\n        style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n      />\n\n      <form noValidate className={classes.form}>\n        {!contact && <ConnectToPeer link />}\n\n        {!!contact && (\n          <>\n            <TextField\n              ref={ref1}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"contactDisplayName\"\n              label={t(\"contactDetailsPage.contactDisplayName\")}\n              name=\"contactDisplayName\"\n              defaultValue={contact ? contact.displayName : \"\"}\n              onChange={handleUpdateContactDisplayName}\n            />\n\n            {podWithPeer && (\n              <ListComponent\n                list={[\n                  {\n                    id: contact.id,\n                    // name: `Go to pod with ${contact ? contact.displayName : ''}`,\n                    name: t(\"contactDetailsPage.goToPodWith\", {\n                      displayName: contact ? contact.displayName : \"\",\n                    }),\n                    avatarUrl: contact ? contact.avatar : \"\",\n                    onClick: () => navigate(`/pod/${podWithPeer.id}`),\n                    isOnline,\n                    unreadCount: podWithPeer?.unreadCount || 0,\n                  },\n                ]}\n              />\n            )}\n\n            {!podWithPeer && (\n              <Accordion\n                ref={ref2}\n                expanded={expanded === \"panel4\"}\n                onChange={handleChange(\"panel4\")}\n              >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel4bh-content\"\n                  id=\"panel4bh-header\"\n                >\n                  <Typography sx={{ flexShrink: 0 }}>\n                    {t(\"contactDetailsPage.createNewPodWith\", {\n                      displayName: contact ? contact.displayName : \"\",\n                    })}\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"chatName\"\n                    label={t(\"contactDetailsPage.podName\")}\n                    name=\"chatName\"\n                    value={chatName}\n                    onChange={(e) => setChatName(e.target.value)}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={() =>\n                              setChatName(`${chance.country({ full: true })}`)\n                            }\n                            edge=\"end\"\n                          >\n                            <RefreshIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n\n                  <Button\n                    type=\"button\"\n                    className={classes.button}\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!chatName}\n                    onClick={() => {\n                      // removeContactDispatch(contact.id);\n                      // createNewPodDispatch();\n                      // navigate(-2);\n                      handleCreateNewPod();\n                    }}\n                  >\n                    {t(\"contactDetailsPage.createPod\")}\n                  </Button>\n                </AccordionDetails>\n              </Accordion>\n            )}\n\n            <Accordion\n              ref={ref3}\n              expanded={expanded === \"advanced\"}\n              onChange={handleChange(\"advanced\")}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel4bh-content\"\n                id=\"panel4bh-header\"\n              >\n                <Typography sx={{ flexShrink: 0 }}>\n                  {t(\"common.more\")}\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                {!anyPodWithPeer && (\n                  <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={handleRegisterNewDevice}\n                  >\n                    {t(\"contactDetailsPage.registerNewDevice\")}\n                  </Button>\n                )}\n\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"peerId\"\n                  label={t(\"contactDetailsPage.peerId\")}\n                  name=\"peerId\"\n                  value={contact ? contact.id : \"\"}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                />\n\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"connectionId\"\n                  label={t(\"contactDetailsPage.connectionId\")}\n                  name=\"connectionId\"\n                  value={contact ? contact.connectionId : \"\"}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                />\n\n                {!!false && contact && (\n                  <Button\n                    type=\"button\"\n                    className={classes.button}\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={() => {\n                      console.log(\"Deleting contact\");\n                      navigate(\"/contacts\");\n                      removeContactDispatch(contact.id);\n                      removeUserFromConversationFromAllPodsDispatch(contact.id);\n                    }}\n                  >\n                    {t(\"contactDetailsPage.blockContact\")}\n                  </Button>\n                )}\n              </AccordionDetails>\n            </Accordion>\n          </>\n        )}\n      </form>\n    </PageContainer>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\nimport {\n  updateUsername,\n  updatePeerId,\n  updateAvatar,\n  logout,\n  setInAppNotification,\n  setBrowserNotification,\n  setEncryptionSignature,\n  addToBlockchain,\n} from \"../../redux/slices/userProfileSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport Avatar from \"@mui/material/Avatar\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport QRCode from \"react-qr-code\";\nimport { useParams } from \"react-router-dom\";\nimport JSZip from \"jszip\";\nimport FileSaver from \"file-saver\";\nimport Switch from \"@mui/material/Switch\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport SyncIcon from \"@mui/icons-material/Sync\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/profileChain\";\nimport ConectToPeer from \"../../atomic/molecules/connect-to-peer/ConnectToPeer\";\nimport SignatureCanvas from \"../../atomic/atom/signatureCanvas/SignatureCanvas\";\nimport { useCryptography } from \"cryptography/Cryptography\";\nimport { logToNLevelAnalytics } from \"../../utils/analytics\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    height: theme.spacing(8),\n  },\n  form: {\n    padding: theme.spacing(3),\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  img: {\n    width: \"100%\",\n  },\n  hidden: {\n    display: \"none\",\n  },\n}));\n\nexport default function Profile({ qr }) {\n  const dispatch = useDispatch();\n  const { randomString } = useCryptography();\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const qrcodeRef = useRef(null);\n  const inputRef = useRef(null);\n  const store = useStore();\n  // make it so the form submits and updates the username in redux and navigates to the conversations page\n  // const [username, setUsername] = useState(\"\");\n  const [contactNamePreset, setContactNamePreset] = useState(\"\");\n  const navigate = useNavigate();\n  const [expanded, setExpanded] = React.useState([]);\n  const handleChange = (panel) => (event, isExpanded) => {\n    if (isExpanded) {\n      setExpanded((prevExpanded) => [...prevExpanded, panel]);\n    } else {\n      setExpanded((prevExpanded) =>\n        prevExpanded.filter((item) => item !== panel),\n      );\n    }\n  };\n  useEffect(() => {\n    logToNLevelAnalytics(\"profilePageLoaded\");\n  }, []);\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const addToBlockchainDispatch = ({ block, blocks, storage }) =>\n    dispatch(addToBlockchain({ block, blocks, storage }));\n  const { compiledBlockchain: userProfile, addBlocks: addProfileBlocks } =\n    useBlockchain({\n      compiler: profileCompiler,\n      blockchain: userProfileBlockchain,\n      dispatch: addToBlockchainDispatch,\n    });\n\n  const storedConnectionId = userProfile.connectionId;\n  const storedUsername = userProfile.displayName;\n  const storeInAppNotication = userProfile?.settings?.inAppNotification;\n  const storeBrowserNotication = userProfile?.settings?.browserNotification;\n  const storedEncryptionSignature = userProfile.encryptionSignature;\n  const storedAvatar = userProfile.avatar;\n\n  // const storedUsername = useSelector((state) => state.userProfile.displayName);\n  // const storedConnectionId = useSelector((state) => state.userProfile.id);\n  // const storeInAppNotication = useSelector((state) => state.userProfile.inAppNotification)\n  // const storeBrowserNotication = useSelector((state) => state.userProfile.browserNotification)\n  // const storedAvatar = useSelector((state) => state.userProfile.avatar);\n  const updateUsernameDispatch = (username) =>\n    dispatch(updateUsername(username));\n  const updateConnectionIdDispatch = (connectionId) =>\n    dispatch(updatePeerId(connectionId));\n  const updateAvatarDispatch = (avatar) => dispatch(updateAvatar(avatar));\n  // const setInAppNotificationDispatch = (inAppNotification) => dispatch(setInAppNotification(inAppNotification));\n  // const setBrowserNotificationDispatch = (browserNotification) => dispatch(setBrowserNotification(browserNotification));\n  // const setEncryptionSignatureDispatch = (encryptionSignature) => dispatch(setEncryptionSignature(encryptionSignature));\n\n  const addInappNotificationBlock = (e) => {\n    const block = blockBuilders().updateInAppNotification({\n      inAppNotification: e.target.checked,\n    });\n    console.log({ block });\n    addProfileBlocks(block);\n  };\n\n  const addBrowserNotificationBlock = (e) => {\n    const block = blockBuilders().updateBrowserNotification({\n      browserNotification: e.target.checked,\n    });\n    addProfileBlocks(block);\n  };\n\n  const addEncryptionSignatureBlock = (newSignature) => {\n    const block = blockBuilders().updateEncryptionSignature({\n      encryptionSignature: newSignature,\n    });\n    addProfileBlocks(block);\n  };\n\n  const logoutDispatch = () => dispatch(logout());\n\n  // const handleUsernameChange = (event) => {\n  //   setUsername(event.target.value);\n  // };\n\n  useEffect(() => {\n    if (qr && qrcodeRef.current) {\n      qrcodeRef.current.scrollIntoView({ behaviour: \"smooth\" });\n    }\n  }, [qr]);\n\n  const handleUsernameChange = (e) => {\n    updateUsernameDispatch(e.target.value);\n  };\n\n  const handleContactNamePresetChange = (e) => {\n    setContactNamePreset(e.target.value);\n  };\n\n  const handleConnectionIdChange = (e) => {\n    updateConnectionIdDispatch(e.target.value);\n  };\n\n  const handleLogout = () => {\n    logoutDispatch();\n  };\n\n  const handleAvatar = ({ target: { files } }) => {\n    const f = files[0];\n    const img = new Image();\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    img.onload = () => {\n      let width = img.width;\n      let height = img.height;\n\n      if (width > height) {\n        if (width > 300) {\n          height *= 300 / width;\n          width = 300;\n        }\n      } else {\n        if (height > 300) {\n          width *= 300 / height;\n          height = 300;\n        }\n      }\n\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, height);\n      const base64String = canvas.toDataURL(\"image/jpeg\", 1.0);\n      updateAvatarDispatch(base64String);\n    };\n    img.src = URL.createObjectURL(f);\n  };\n\n  const handleCopyConnectionIdToClipboard = () => {\n    navigator.clipboard.writeText(\n      `${window.location.origin}/#/login/${storedConnectionId}${contactNamePreset ? `/${contactNamePreset}` : \"\"}`,\n    );\n    // navigate(`/contacts/${storedConnectionId}`)\n  };\n\n  const inAppNotificationLocale = t(\"common.inAppNotification\");\n  const browserNotificationLocale = t(\"common.browserNotification\");\n\n  // const isSubmitDisabled = !username;\n  const inAppNotifications = {\n    fullWidth: true,\n    inputProps: { \"aria-label\": \"Allow in-app notification\" },\n    defaultChecked: storeInAppNotication,\n    label: inAppNotificationLocale,\n    onChange: addInappNotificationBlock,\n  };\n  const browserNotification = {\n    fullWidth: true,\n    inputProps: { \"aria-label\": \"Allow browser notification\" },\n    defaultChecked: storeBrowserNotication,\n    label: browserNotificationLocale,\n    onChange: addBrowserNotificationBlock,\n  };\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: t(\"profilePage.pageTitle\"),\n        backButton: \"/pods\",\n        // avatarProps: {\n        //   src: storedAvatar,\n        //   alt: \"random\"\n        // },\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: t(\"profilePage.logout\"),\n              icon: \"logout\",\n              onClick: handleLogout,\n            },\n          ],\n        },\n      }}\n    >\n      {/* add an imagae at the top */}\n      <Avatar\n        src={storedAvatar}\n        style={{ minHeight: \"300px\", minWidth: \"300px\", margin: \"auto\" }}\n      />\n\n      <form noValidate className={classes.form}>\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          onClick={() => inputRef?.current?.click()}\n        >\n          {t(\"profilePage.changeAvatar\")}\n        </Button>\n        <input\n          type=\"file\"\n          ref={inputRef}\n          className={classes.hidden}\n          name=\"picture\"\n          accept=\"image/*\"\n          onChange={handleAvatar}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"displayName\"\n          label={t(\"profilePage.displayName\")}\n          name=\"displayName\"\n          defaultValue={storedUsername}\n          onChange={handleUsernameChange}\n        />\n\n        <ConectToPeer qr={qr} />\n\n        <Accordion\n          expanded={expanded.includes(\"admin\")}\n          onChange={handleChange(\"admin\")}\n        >\n          <AccordionSummary\n            expandIcon={qr ? undefined : <ExpandMoreIcon />}\n            aria-controls=\"panel4bh-content\"\n            id=\"panel4bh-header\"\n          >\n            <Typography sx={{ flexShrink: 0 }}>\n              {t(\"profilePage.more\")}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"regenerateConnectionId\"\n              label={t(\"profilePage.regenerateConnectionId\")}\n              name=\"regenerateConnectionId\"\n              value={storedConnectionId}\n              onChange={handleConnectionIdChange}\n              InputProps={{\n                readOnly: true,\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={() =>\n                        handleConnectionIdChange({\n                          target: { value: randomString() },\n                        })\n                      }\n                      edge=\"end\"\n                    >\n                      <SyncIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n            <Accordion\n              expanded={expanded.includes(\"notifications\")}\n              onChange={handleChange(\"notifications\")}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel4bh-content\"\n                id=\"panel4bh-header\"\n              >\n                <Typography sx={{ flexShrink: 0 }}>\n                  {t(\"profilePage.preferences\")}\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <FormGroup>\n                  <FormControlLabel\n                    control={<Switch {...inAppNotifications} />}\n                    label={t(\"common.inAppNotification\")}\n                  />\n                  <FormControlLabel\n                    control={<Switch {...browserNotification} />}\n                    label={t(\"common.browserNotification\")}\n                  />\n                </FormGroup>\n              </AccordionDetails>\n            </Accordion>\n\n            <br />\n\n            <SignatureCanvas\n              heading={t(\"components.cryptoSignature\")}\n              defaultValue={storedEncryptionSignature}\n              onChange={addEncryptionSignatureBlock}\n            />\n\n            <br />\n\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              onClick={() => {\n                const zip = new JSZip();\n                zip.file(\"data.json\", JSON.stringify(store.getState()));\n                zip.generateAsync({ type: \"blob\" }).then(function (content) {\n                  FileSaver.saveAs(content, \"download.zip\");\n                });\n              }}\n            >\n              {t(\"profilePage.backupProfile\")}\n            </Button>\n          </AccordionDetails>\n        </Accordion>\n      </form>\n    </PageContainer>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ListComponent from \"../../atomic/molecules/list/List\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport usePeer from \"../../p2p/usePeer.js\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopyOutlined\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport QrCode2Icon from \"@mui/icons-material/QrCode2\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport QRReader from \"react-qr-scanner\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/profileChain\";\nimport ConnectToPeer from \"../../atomic/molecules/connect-to-peer/ConnectToPeer\";\nimport { red } from \"@mui/material/colors\";\nimport TranslateIcon from \"@mui/icons-material/Translate\";\nimport {\n  SwipeableList,\n  SwipeableListItem,\n} from \"@sandstreamdev/react-swipeable-list\";\nimport \"@sandstreamdev/react-swipeable-list/dist/styles.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    height: theme.spacing(8),\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  chevron: {\n    justifyContent: \"right\",\n  },\n  fab: {\n    position: \"absolute !important\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  hidden: {\n    display: \"none\",\n  },\n  qrcodeReader: {\n    width: \"100vw\",\n    top: 0,\n    left: 0,\n    position: \"absolute\",\n    zIndex: 10000,\n  },\n  connect: {\n    margin: `0 ${theme.spacing(2)}`,\n  },\n}));\n\nexport default function ContactsListPage() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const { podId } = useParams();\n  const contacts = useSelector((state) => state.contacts) || [];\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const { compiledBlockchain: userProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: userProfileBlockchain,\n  });\n  const storedConnectionId = userProfile.connectionId;\n  // const storedConnectionId = useSelector((state) => state.userProfile.connectionId);\n  const storedPods = useSelector((state) => state.pods);\n  const { activeConnections } = usePeer([]);\n  const [scanning, setScanning] = useState(false);\n  const [result, setResult] = useState(\"No result\");\n\n  const filesForPod = storedPods.find((pod) => pod.id === podId).blockchain\n    ?.storage;\n  console.log({ filesForPod });\n\n  const fileList = Object.keys(filesForPod)\n    .filter((fileKey) => typeof filesForPod[fileKey] === \"object\")\n    .map((fileKey) => {\n      const file = filesForPod[fileKey];\n      return {\n        id: file.fileKey,\n        name: file.name,\n        avatarUrl: file.type === \"image\" ? file.data : \"\",\n        onClick: () => navigate(`/pod/${podId}/file/${fileKey}`),\n      };\n    });\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"Files\",\n        backButton: true,\n        // avatarProps: {\n        //   src: \"https://source.unsplash.com/random/400x200?login\",\n        //   alt: \"random\"\n        // },\n        // menuProps: {\n        //   icon: 'account',\n        //   items: [\n        //     { text: 'Profile', icon: 'account', onClick: () => navigate('/profile') },\n        //   ]\n        // }\n        // menuProps: {\n        //     icon: 'more',\n        //     items: [\n        //       { text: 'Profile', icon: 'account', onClick: () => navigate('/profile') },\n        //       { text: 'About', icon: 'info', onClick: () => window.location = 'https://positive-intentions.com' },\n        //     ]\n        //   }\n      }}\n      // speedDialProps={{\n      //     actions: [\n      //         { icon: <CameraAltIcon />, name: 'Camera', onClick: () => setScanning(true) },\n      //         { icon: <QrCode2Icon />, name: 'QR code', onClick: () => navigate(`/profile/qr`) },\n      //         { icon: <LinkIcon />, name: 'share link', onClick: () => navigator.clipboard.writeText(`${window.location.origin}/login/${storedConnectionId}`)},\n      //     ],\n      // }}\n      //   fabProps={{\n      //     icon: \"add\",\n      //     onClick: () => {\n      //       console.log(\"add clicked\");\n      //     }\n      //   }}\n    >\n      {<ListComponent list={fileList} />}\n    </PageContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import { updateUsername } from \"../../redux/slices/userProfileSlice\";\nimport {\n  updatePodName,\n  addUserToPod,\n  removeFileFromPod,\n} from \"../../redux/slices/podsSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListComponent from \"../../atomic/molecules/list/List\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/profileChain\";\nimport usePeer from \"../../p2p/usePeer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    height: theme.spacing(8),\n  },\n  form: {\n    padding: theme.spacing(3),\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  img: {\n    width: \"100%\",\n  },\n}));\n\nexport default function File() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { podId, fileId } = useParams();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const podDetails = useSelector((state) =>\n    state.pods.find((pod) => pod.id === podId),\n  );\n  const contacts = useSelector((state) => state.contacts);\n  const updatePodNameDispatch = (podName) => dispatch(updatePodName(podName));\n  const addUserToPodDispatch = (userId) =>\n    dispatch(addUserToPod({ podId, userId }));\n  const removeFileFromPodDispatch = () =>\n    dispatch(removeFileFromPod({ podId, fileId }));\n\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const { compiledBlockchain: userProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: userProfileBlockchain,\n  });\n  const storedConnectionId = userProfile.connectionId;\n  // const storedConnectionId = useSelector((state) => state.userProfile.id);\n  const { sendMessage, connectToPeer, activeConnections } = usePeer(\n    podDetails?.members || [],\n  );\n\n  const [expanded, setExpanded] = React.useState(false);\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handlePodNameChange = (e) => {\n    updatePodNameDispatch({ podId, name: e.target.value });\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const membersList = podDetails.members\n    // filter out my connection id\n    .filter((member) => member !== storedConnectionId)\n    .map((member) => {\n      const contact = contacts.find((contact) => contact.id === member);\n      if (!contact) connectToPeer(member);\n      return contact\n        ? {\n            id: contact.id,\n            name: contact.displayName,\n            avatarUrl: contact.avatar,\n            onClick: () => navigate(`/contact/${contact.connectionId}`),\n            isOnline: activeConnections.includes(member),\n          }\n        : {\n            id: member,\n            name: \"connecting...\",\n            avatarUrl: \"https://source.unsplash.com/random/400x200?login\",\n            onClick: () => navigate(`/contact/${member}`),\n          };\n    });\n\n  const contactsThatCanBeAdded = contacts\n    .filter((contact) => !podDetails.members.includes(contact.id))\n    .map((contact) => {\n      return {\n        id: contact.id,\n        name: contact.displayName,\n        avatarUrl: contact.avatar,\n        onClick: () => {\n          console.log(\"adding user to pod\");\n          sendMessage({\n            type: \"addNewPod\",\n            recipients: [contact.id],\n            payload: {\n              ...podDetails,\n              members: [...podDetails.members, contact.id],\n            },\n          }).then(() => {\n            addUserToPodDispatch(contact.id);\n          });\n\n          sendMessage({\n            type: \"addUserToPod\",\n            recipients: podDetails.members,\n            payload: {\n              podId,\n              userId: contact.id,\n            },\n          });\n        },\n      };\n    });\n\n  function calculateSize(sizeInBytes) {\n    const suffixes = [\"B\", \"KB\", \"MB\", \"GB\"];\n    let size = sizeInBytes;\n    let suffixIndex = 0;\n\n    while (size >= 1024 && suffixIndex < suffixes.length - 1) {\n      size /= 1024;\n      suffixIndex++;\n    }\n\n    return `${size.toFixed(2)} ${suffixes[suffixIndex]}`;\n  }\n\n  function calculateSizeFromBase64(base64String = \"\") {\n    const paddingFactor = base64String.endsWith(\"==\")\n      ? 2\n      : base64String.endsWith(\"=\")\n        ? 1\n        : 0;\n    const decodedSize = (base64String.length / 4) * 3 - paddingFactor;\n\n    const suffixes = [\"B\", \"KB\", \"MB\", \"GB\"];\n    let size = decodedSize;\n    let suffixIndex = 0;\n\n    while (size >= 1024 && suffixIndex < suffixes.length - 1) {\n      size /= 1024;\n      suffixIndex++;\n    }\n\n    return `${size.toFixed(2)} ${suffixes[suffixIndex]}`;\n  }\n\n  const attachment = useSelector(\n    (state) =>\n      state.pods.find((pod) => pod.id === podId)?.blockchain?.storage[fileId],\n  );\n\n  if (!attachment) return \"no file found\";\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: attachment?.name,\n        backButton: `/pod/${podId}`,\n        avatarProps: {\n          src: attachment?.type === \"image\" ? attachment?.data : \"\",\n          alt: \"random\",\n        },\n      }}\n    >\n      {/* add an imagae at the top */}\n      {attachment?.type === \"image\" && (\n        <img\n          alt={\"Remy Sharp\"}\n          src={attachment?.data}\n          style={{ width: \"100vw\" }}\n        />\n      )}\n\n      <form noValidate className={classes.form}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"fileName\"\n          label=\"Filename\"\n          name=\"fileName\"\n          value={attachment?.name}\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"filseSize\"\n          label=\"File size\"\n          name=\"fileSize\"\n          value={calculateSizeFromBase64(attachment?.data)}\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n\n        <Accordion\n          expanded={expanded === \"advanced\"}\n          onChange={handleChange(\"advanced\")}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel4bh-content\"\n            id=\"panel4bh-header\"\n          >\n            <Typography sx={{ flexShrink: 0 }}>Advanced</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"sha\"\n              label=\"File SHA\"\n              name=\"sha\"\n              value={attachment?.sha}\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              color=\"error\"\n              onClick={() => {\n                navigate(`/pod/${podId}/files`);\n                console.log(\"deleting file\");\n                removeFileFromPodDispatch();\n                // updateUsernameDispatch(\"\");\n              }}\n            >\n              Delete file\n            </Button>\n          </AccordionDetails>\n        </Accordion>\n\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            console.log(\"downloading file\");\n            const element = document.createElement(\"a\");\n\n            element.href = attachment?.data; // URL.createObjectURL(file);\n            element.download = attachment?.name;\n            document.body.appendChild(element);\n            element.click();\n          }}\n        >\n          Download\n        </Button>\n      </form>\n    </PageContainer>\n  );\n}\n","function calculateMD5(str) {\n  let rotateLeft = (value, shift) => {\n    return (value << shift) | (value >>> (32 - shift));\n  };\n\n  let addUnsigned = (x, y) => {\n    let carry = 0;\n    let sum = 0;\n    let xWord = x & 0x7fffffff;\n    let yWord = y & 0x7fffffff;\n\n    for (let i = 0; i < 32; i++) {\n      let bitX = (xWord >> i) & 1;\n      let bitY = (yWord >> i) & 1;\n      let sumBits = bitX + bitY + carry;\n      let bitSum = sumBits & 1;\n      carry = sumBits >= 2 ? 1 : 0;\n      sum |= bitSum << i;\n    }\n\n    return sum;\n  };\n\n  let toHex = (value) => {\n    let hex = \"\";\n    let charSet = \"0123456789abcdef\";\n\n    for (let i = 0; i < 8; i++) {\n      let byte = (value >>> (i * 4)) & 0x0f;\n      hex += charSet.charAt(byte);\n    }\n\n    return hex;\n  };\n\n  let utf8Encode = (str) => {\n    let utf8Text = \"\";\n\n    for (let i = 0; i < str.length; i++) {\n      let charCode = str.charCodeAt(i);\n\n      if (charCode < 0x80) {\n        utf8Text += String.fromCharCode(charCode);\n      } else if (charCode < 0x800) {\n        utf8Text += String.fromCharCode(0xc0 | (charCode >> 6));\n        utf8Text += String.fromCharCode(0x80 | (charCode & 0x3f));\n      } else if (charCode < 0x10000) {\n        utf8Text += String.fromCharCode(0xe0 | (charCode >> 12));\n        utf8Text += String.fromCharCode(0x80 | ((charCode >> 6) & 0x3f));\n        utf8Text += String.fromCharCode(0x80 | (charCode & 0x3f));\n      } else {\n        utf8Text += String.fromCharCode(0xf0 | (charCode >> 18));\n        utf8Text += String.fromCharCode(0x80 | ((charCode >> 12) & 0x3f));\n        utf8Text += String.fromCharCode(0x80 | ((charCode >> 6) & 0x3f));\n        utf8Text += String.fromCharCode(0x80 | (charCode & 0x3f));\n      }\n    }\n\n    return utf8Text;\n  };\n\n  let strToWords = (str) => {\n    let wordCount = ((str.length + 8) >> 6) + 1;\n    let words = new Array(wordCount * 16).fill(0);\n    let strLength = str.length;\n    let i;\n\n    for (i = 0; i < strLength; i++) {\n      words[i >> 2] |= str.charCodeAt(i) << ((i % 4) * 8);\n    }\n\n    words[i >> 2] |= 0x80 << ((i % 4) * 8);\n    words[wordCount * 16 - 2] = strLength * 8;\n\n    return words;\n  };\n\n  let md5Calc = (input) => {\n    let constants = [];\n    for (let i = 0; i < 64; i++) {\n      constants[i] = Math.floor(Math.abs(Math.sin(i + 1)) * 0x100000000);\n    }\n\n    let a = 0x67452301;\n    let b = 0xefcdab89;\n    let c = 0x98badcfe;\n    let d = 0x10325476;\n\n    let words = strToWords(input);\n    let wordCount = words.length;\n\n    for (let i = 0; i < wordCount; i += 16) {\n      let aa = a;\n      let bb = b;\n      let cc = c;\n      let dd = d;\n\n      for (let j = 0; j < 64; j++) {\n        let f, g;\n\n        if (j < 16) {\n          f = (b & c) | (~b & d);\n          g = j;\n        } else if (j < 32) {\n          f = (d & b) | (~d & c);\n          g = (5 * j + 1) % 16;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = (3 * j + 5) % 16;\n        } else {\n          f = c ^ (b | ~d);\n          g = (7 * j) % 16;\n        }\n\n        let temp = d;\n        d = c;\n        c = b;\n        b = addUnsigned(\n          b,\n          rotateLeft(\n            a + f + constants[j] + words[i + g],\n            [7, 12, 17, 22][j % 4],\n          ),\n        );\n        a = temp;\n      }\n\n      a = addUnsigned(a, aa);\n      b = addUnsigned(b, bb);\n      c = addUnsigned(c, cc);\n      d = addUnsigned(d, dd);\n    }\n\n    return [a, b, c, d];\n  };\n\n  let hashWords = md5Calc(utf8Encode(str));\n  let hashHex = \"\";\n\n  for (let i = 0; i < 4; i++) {\n    hashHex += toHex(hashWords[i]);\n  }\n\n  return hashHex;\n}\n\n//   const inputString = 'Hello, World!';\n//   const md5Hash = calculateMD5(inputString);\n//   console.log('MD5:', md5Hash);\n\nexport default calculateMD5;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./splitpanestyle.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./splitpanestyle.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateUsername } from \"../../redux/slices/userProfileSlice\";\nimport { json, useNavigate, useParams } from \"react-router-dom\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Container from \"@mui/material/Container\";\nimport Thread, { formatDate } from \"../../atomic/molecules/thread/Thread\";\nimport Message from \"../../atomic/atom/message/Message\";\nimport {\n  addMessage,\n  updatePodUnreadCount,\n  setShouldHangup,\n  addToBlockchain,\n} from \"../../redux/slices/podsSlice\";\nimport ImageIcon from \"@mui/icons-material/Image\";\nimport usePeer from \"../../p2p/usePeer\";\nimport calculateMD5 from \"../../utils/calculateMd5\";\nimport calculateSHA256 from \"../../utils/calculateSha256\";\nimport { addStorageItem } from \"../../redux/slices/storageSlice\";\nimport { Badge } from \"@mui/material\";\nimport AttachmentIcon from \"@mui/icons-material/Attachment\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport { compiler as profileCompiler } from \"../../blockchain/chains/profileChain\";\nimport {\n  compiler as podCompiler,\n  blockBuilders,\n  encodeEmojisToUnicode,\n} from \"../../blockchain/chains/podChain\";\nimport { useTranslation } from \"react-i18next\";\nimport { logToNLevelAnalytics } from \"../../utils/analytics\";\n\nimport SplitPane from \"react-split-pane\";\nimport \"./splitpanestyle.css\";\nimport Pods from \"../pods/Pods\";\n\nconst lightBackground = \"/backgrounds/light-leaves.png\";\nconst darkBackground = \"/backgrounds/dark-leaves.png\";\n\nconst calculateHash = calculateSHA256;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingBottom: theme.spacing(8),\n  },\n  appBar: {\n    height: theme.spacing(8),\n  },\n  form: {\n    padding: theme.spacing(3),\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    padding: `0 ${theme.spacing(3)}`,\n  },\n  img: {\n    width: \"100%\",\n  },\n  conversation: {\n    paddingBottom: theme.spacing(8),\n  },\n  messageInput: {\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#303030\" : \"#f0f8ff\",\n  },\n}));\n\nexport default function Feed() {\n  const { podId } = useParams();\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const storedPods = useSelector((state) => state.pods);\n  const storedContacts = useSelector((state) => state.contacts);\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const addToBlockchainDispatch = ({ block, blocks, storage }) =>\n    dispatch(addToBlockchain({ podId, block, blocks, storage }));\n  const addToPodsBlockchainDispatch = (update) =>\n    dispatch(addToBlockchain(update));\n  const { compiledBlockchain: userProfile, addBlocks: addBlocksToProfile } =\n    useBlockchain({\n      compiler: profileCompiler,\n      blockchain: userProfileBlockchain,\n      dispatch: addToBlockchainDispatch,\n    });\n  const storedConnectionId = userProfile.connectionId;\n  const storedUsername = userProfile.displayName;\n  const storedAvatar = userProfile.avatar;\n\n  // const storedConnectionId = useSelector((state) => state.userProfile.id);\n  // const storedUsername = useSelector((state) => state.userProfile.displayName);\n  // const storedAvatar = useSelector((state) => state.userProfile.avatar);\n  const dispatch = useDispatch();\n  const addMessageDispatch = (message) => dispatch(addMessage(message));\n  const setShouldHangupDispatch = () =>\n    dispatch(setShouldHangup({ podId, shouldHangUp: false }));\n  const updatePodUnreadCountDispatch = (podId, unreadCount) =>\n    dispatch(updatePodUnreadCount({ podId, unreadCount }));\n  const [messageInputValue, setMessageInputValue] = useState(\"\");\n  const [mediaStream, setMediaStream] = useState(null);\n  const [callActive, setCallActive] = useState(false);\n  const [imageAttachment, setImageAttachment] = useState(null);\n  const [videoAttachment, setVideoAttachment] = useState(null);\n  const [fileAttachment, setFileAttachment] = useState(null);\n  const [linkAttachment, setLinkAttachment] = useState(null);\n  const [isLoadingFile, setIsLoadingFile] = useState(false);\n  const inputRef = useRef(null);\n  const fileInputRef = useRef(null);\n  // const filesForPod = []; // useSelector((state) => state.storage[podId]) || [];\n\n  const addStorageItemDispatch = (item) =>\n    dispatch(addStorageItem({ podId, item }));\n  const conversation = storedPods.find((pod) => pod.id === podId);\n  // const podBlockchain = useMemo(() => new Blockchain({\n  //   chain: conversation?.blockchain?.chain || [],\n  //   compiler: podCompiler,\n  //   storage: conversation?.blockchain?.storage || [],\n  // }), [conversation?.blockchain?.chain, conversation?.blockchain?.storage])\n\n  // const compiedBlockchain = useMemo(() => podBlockchain.compile(), [podBlockchain]);\n\n  const { compiledBlockchain: podBlockchain, addBlocks: addBlocksToPod } =\n    useBlockchain({\n      compiler: podCompiler,\n      blockchain: conversation?.blockchain,\n      dispatch: addToBlockchainDispatch,\n    });\n\n  const {\n    sendMessage,\n    makeCall,\n    endCall,\n    calls,\n    callsHash,\n    activeConnections,\n  } = usePeer(podBlockchain?.users || []);\n\n  const storedShouldHangup = conversation?.shouldHangup;\n  const peerIsTyping = conversation?.peerIsTyping;\n  // const filesForPod  = podBlockchain.meaa\n  // const peersActivelyTyping = Object.keys(peerIsTyping ?? {}) || []\n  // .filter(key => !!peerIsTyping[key])\n\n  const [peersActivelyTyping, setPeersActivelyTyping] = useState(\n    Object.keys(peerIsTyping ?? {}) || [].filter((key) => !!peerIsTyping[key]),\n  );\n\n  useEffect(() => {\n    setPeersActivelyTyping(\n      Object.keys(peerIsTyping ?? {}).filter((k) => !!peerIsTyping[k]),\n    );\n  }, [peerIsTyping]);\n\n  const handleEndCall = () => {\n    endCall();\n\n    sendMessage({\n      type: \"setShouldHangup\",\n      payload: {\n        podId,\n        shouldHangup: true,\n      },\n    }).then(setShouldHangupDispatch);\n  };\n\n  const activeCalls = useMemo(() => {\n    if (callActive) {\n      setCallActive(false);\n      return [];\n    }\n    return [...calls];\n  }, [callsHash, calls]);\n\n  useEffect(() => {\n    if (storedShouldHangup) {\n      handleEndCall();\n    }\n  }, [storedShouldHangup]);\n\n  const handleAttachFile = () => {\n    setIsLoadingFile(true);\n    fileInputRef.current.click();\n  };\n\n  const handleAttachImage = () => {\n    // setIsLoadingFile(true);\n    inputRef.current.click();\n  };\n\n  const attachImage = ({ target: { files } }) => {\n    const f = files[0];\n    const img = new Image();\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    img.onload = () => {\n      const maxWidthHeight = 300;\n      let width = img.width;\n      let height = img.height;\n\n      if (width > height) {\n        if (width > maxWidthHeight) {\n          height *= maxWidthHeight / width;\n          width = maxWidthHeight;\n        }\n      } else {\n        if (height > maxWidthHeight) {\n          width *= maxWidthHeight / height;\n          height = maxWidthHeight;\n        }\n      }\n\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, height);\n      const base64String = canvas.toDataURL(\"image/jpeg\", 1.0);\n\n      const newAttachment = {\n        name: f.name,\n        type: \"image\",\n        data: base64String,\n        size: f.size,\n        md5: calculateMD5(base64String),\n        sha256: calculateSHA256(base64String),\n        sha: calculateHash(base64String),\n      };\n      setImageAttachment(newAttachment);\n    };\n    img.onerror = function (event) {\n      console.error(\"An error occurred while reading the file:\", img.error);\n      setIsLoadingFile(false);\n    };\n\n    img.onabort = function (event) {\n      console.log(\"File reading was aborted.\");\n      setIsLoadingFile(false);\n    };\n    img.src = URL.createObjectURL(f);\n  };\n\n  const attachFile = ({ target: { files } }) => {\n    const f = files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const base64String = e.target.result;\n      console.log({ base64String });\n      const newAttachment = {\n        name: f.name,\n        type: \"file\",\n        data: base64String,\n        size: f.size,\n        md5: calculateMD5(base64String),\n        sha256: calculateSHA256(base64String),\n        sha: calculateHash(base64String),\n      };\n      setFileAttachment(newAttachment);\n\n      // sendMessage({\n      //   type: 'largeFile',\n      //   payload: {\n      //     ...newAttachment,\n      //   }\n      // }).then(() => {\n      //   setIsLoadingFile(false);\n      // })\n      setIsLoadingFile(false);\n    };\n    reader.addEventListener(\"error\", (err) => {\n      console.error(err);\n      setIsLoadingFile(false);\n    });\n    reader.addEventListener(\"abort\", (err) => {\n      console.error(err);\n      setIsLoadingFile(false);\n    });\n    reader.readAsDataURL(f);\n  };\n\n  const handleUpvote = (messageId) => {\n    const newBlocks = blockBuilders().upvoteMessage({\n      messageId,\n      from: storedConnectionId,\n    });\n    const pendingUpdate = addBlocksToPod(newBlocks);\n    sendMessage({\n      type: \"addToBlockchain\",\n      payload: {\n        id: podId,\n        pendingBlocks: pendingUpdate.pendingBlocks,\n        pendingStorage: pendingUpdate.pendingStorage,\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (imageAttachment !== null || fileAttachment !== null) {\n      handleSendMessage();\n    }\n  }, [imageAttachment, fileAttachment]);\n\n  useEffect(() => {\n    if (conversation?.unreadCount) {\n      updatePodUnreadCountDispatch(podId, 0);\n    }\n  }, [conversation?.unreadCount]);\n\n  const [replyMessage, setReplyMessage] = useState(null);\n  const handleOnReply = (message) => {\n    setReplyMessage(message);\n  };\n\n  const handleSendMessage = () => {\n    const messageObject = {\n      from: storedConnectionId,\n      content: messageInputValue\n        ? encodeEmojisToUnicode(messageInputValue)\n        : undefined,\n      image: imageAttachment ?? undefined,\n      video: videoAttachment ?? undefined,\n      file: fileAttachment ?? undefined,\n      link: linkAttachment ?? undefined,\n      reply: replyMessage ?? undefined,\n      timestampSent: new Date().valueOf(),\n      timestampRecieved: null,\n    };\n\n    const newMessageBlocks = blockBuilders().sendMessage(messageObject);\n    const pendingUpdate = addBlocksToPod(newMessageBlocks);\n    // const pendingUpdate = podBlockchain.getUpdate();\n    // addToBlockchainDispatch({\n    //   blocks: pendingUpdate.pendingBlocks,\n    //   storage: pendingUpdate.pendingStorage\n    // })\n    setImageAttachment(null);\n    setFileAttachment(null);\n    setReplyMessage(null);\n    setIsLoadingFile(false);\n\n    setMessageInputValue(\"\");\n    if (imageAttachment) addStorageItemDispatch(imageAttachment);\n    if (fileAttachment) addStorageItemDispatch(fileAttachment);\n    if (replyMessage) addStorageItemDispatch(replyMessage);\n    sendMessage({\n      type: \"setPeerIsTyping\",\n      payload: {\n        podId,\n        peerDisplayName: storedUsername,\n        isTyping: false,\n      },\n    });\n    // pendingUpdate.pendingBlocks.forEach(block => addToBlockchainDispatch(block))\n\n    sendMessage({\n      type: \"message\",\n      payload: {\n        podId,\n        message: messageObject,\n        podDetails: {\n          // ...conversation,\n          id: podId,\n          messages: [messageObject],\n        },\n        blocks: pendingUpdate.pendingBlocks,\n        storage: pendingUpdate.pendingStorage,\n      },\n    }).then((response) => {\n      // addMessageDispatch({\n      //   podId,\n      //   message: { ...messageObject, attachment: imageAttachment?.md5 },\n      // });\n    });\n  };\n\n  const handleMessageChange = (event) => {\n    setMessageInputValue(event.target.value);\n\n    sendMessage({\n      type: \"setPeerIsTyping\",\n      payload: {\n        podId,\n        peerDisplayName: storedUsername,\n        isTyping: !!event.target.value,\n      },\n    });\n  };\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => console.log({calls: getCalls(), callsLength}), 5000)\n  //   return () => clearInterval(interval);\n  // }, [])\n\n  const remoteStreamCount = calls.filter((call) => call._remoteStream).length;\n\n  useEffect(() => {\n    if (callActive && remoteStreamCount) {\n      setCallActive(false);\n      handleEndCall();\n    }\n\n    activeCalls\n      .filter((call) => call._remoteStream)\n      .map((call) => ({ remote: call._remoteStream, local: call._localStream }))\n      .forEach(async ({ remote, local }, index) => {\n        if (remote) {\n          document.getElementById(`remote-video-${index}`).srcObject = remote;\n          await document.getElementById(`remote-video-${index}`).play();\n          setCallActive(true);\n        }\n\n        if (local) {\n          document.getElementById(`local-video-${index}`).srcObject = local;\n          await document.getElementById(`local-video-${index}`).play();\n        }\n      });\n  }, [remoteStreamCount]);\n\n  const handleAnswerCall = async (call) => {\n    const hasVideo = call._remoteStream?.getVideoTracks().length > 0;\n    const newMediaStream = await navigator.mediaDevices.getUserMedia({\n      video: hasVideo ? true : true,\n      audio: true,\n    });\n    call.answer(newMediaStream);\n    setMediaStream(newMediaStream);\n  };\n\n  const contactDetails = storedContacts.find((contact) => {\n    return (\n      contact.connectionId ===\n      podBlockchain?.users?.filter((member) => member !== storedConnectionId)[0]\n    );\n  });\n  const pageTitle = \"Gram\"; // podBlockchain?.users.length > 2 ? (podBlockchain?.name ?? 'Pod') : (contactDetails?.displayName ?? 'Contact');\n\n  const isOnline = false; // podBlockchain.users\n  // .filter(c => c !== storedConnectionId)\n  // .every(c => activeConnections.includes(c));\n  const isSomeOnline = false; // podBlockchain.users.filter(c => c !== storedConnectionId).some(user => activeConnections.includes(user));\n\n  const headerActions = [\n    {\n      text: t(\"podPage.podDetails\"),\n      icon: \"account\",\n      onClick: () => navigate(`/pod/${podId}/details`),\n    },\n  ];\n  // if (filesForPod.length > 0) {\n  headerActions.push({\n    text: t(\"podPage.files\"),\n    icon: \"folder\",\n    onClick: () => navigate(`/pod/${podId}/files`),\n  });\n  // }\n\n  // get boolean if on  if any mobile browser by user agent. like an android ios browser on mobile\n  const isMobile =\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent,\n    );\n  const isGroup = podBlockchain?.users?.length > 2;\n\n  const handleItemDelete = (id) => {\n    console.log({ id });\n    const newMessageBlocks = blockBuilders().deleteMessage({ id });\n    const pendingUpdate = addBlocksToPod(newMessageBlocks);\n    sendMessage({\n      type: \"addToBlockchain\",\n      payload: {\n        id,\n        pendingBlocks: pendingUpdate.pendingBlocks,\n        pendingStorage: pendingUpdate.pendingStorage,\n      },\n    });\n  };\n\n  const customButtons =\n    isOnline && !activeCalls.length\n      ? [\n          !isGroup &&\n            !isMobile && {\n              text: t(\"podPage.screenshare\"),\n              icon: \"screen\",\n              onClick: () =>\n                makeCall({ screen: true, video: true, audio: true }),\n            },\n          !isGroup && {\n            text: t(\"podPage.videoCall\"),\n            icon: \"camera\",\n            onClick: () => makeCall({ video: true, audio: true }),\n          },\n          !isGroup && {\n            text: t(\"podPage.call\"),\n            icon: \"call\",\n            onClick: () => makeCall({ audio: true }),\n          },\n        ].filter((i) => !!i)\n      : [];\n\n  headerActions.push(...customButtons);\n\n  // ============================================================\n\n  useEffect(() => {\n    logToNLevelAnalytics(\"FeedPageLoaded\");\n  }, []);\n\n  const { compiledBlockchains: compiledPods } = useBlockchain({\n    compiler: podCompiler,\n    blockchains: storedPods.map((pod) => pod.blockchain),\n    dispatch: addToPodsBlockchainDispatch,\n  });\n\n  const posts = compiledPods\n    .map((pod) => pod.messages.filter((m) => m.payload.image.data))\n    .flat();\n  const allReplies = compiledPods\n    .map((pod) => pod.messages.filter((m) => m.payload.reply?.id))\n    .flat();\n\n  const fetchComments = (message) => {\n    const comments = allReplies.filter(\n      (reply) => reply.payload.reply?.id === message.id,\n    );\n    const newComments = resolveComments(comments);\n    return { ...message, comments: newComments };\n  };\n  const resolveComments = (posts) => {\n    return posts.map((post) => fetchComments(post));\n  };\n  const postWithComments = resolveComments(posts);\n  console.log({ compiledPods, posts, postWithComments });\n\n  return (\n    <PageContainer\n      backgroundImage={\n        theme.palette.mode === \"dark\" ? darkBackground : lightBackground\n      }\n      headerProps={{\n        // title: pageTitle,\n        title: (\n          <div>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              {pageTitle}\n            </Typography>\n            <Typography\n              variant=\"subtitle2\"\n              component=\"div\"\n              sx={{ flexGrow: 1 }}\n            >\n              {peersActivelyTyping.length > 0 &&\n                `${peersActivelyTyping.join(\", \")} is typing...`}\n            </Typography>\n          </div>\n        ),\n        backButton: \"/login\",\n        backCount: storedPods.filter((pod) => pod.unreadCount > 0).length,\n        // avatarProps: {\n        //   src: isGroup ? conversation?.avatarUrl : contactDetails?.avatar,\n        //   alt: pageTitle[0],\n        //   isOnline,\n        //   isSomeOnline\n        // },\n        menuProps: {\n          icon: \"more\",\n          // items: headerActions\n        },\n        // customButtons: (isOnline && !activeCalls.length) ? [\n        //   !isGroup && !isMobile && { icon: 'screen', onClick: () => makeCall({ screen: true, video: true, audio: true }) },\n        //   !isGroup && { icon: 'camera', onClick: () => makeCall({ video: true, audio: true }) },\n        //   !isGroup && { icon: 'call', onClick: () => makeCall({ audio: true }) },\n        // ].filter(i => !!i) : undefined\n      }}\n      className={classes.conversation}\n    >\n      {activeCalls.length === 0 && (\n        <Thread\n          className={classes.conversation}\n          isGroup={isGroup}\n          deleteItem={handleItemDelete}\n          onReply={handleOnReply}\n          onUpvote={handleUpvote}\n          list={posts}\n          loading={isLoadingFile}\n        />\n      )}\n\n      {activeCalls.length > 0 &&\n        [activeCalls[activeCalls.length - 1]]\n          // .filter(call => call._remoteStream)\n          .map((call, index) => {\n            const stream = call._remoteStream;\n            const localStream = call._localStream;\n            if (localStream && !callActive) handleAnswerCall(call);\n\n            // on stream disconnect, cklosethe local tracks\n            if (stream) {\n              stream.oninactive = (...rest) => {\n                [mediaStream, localStream, stream].map((stream) => {\n                  const tracks = stream?.getTracks();\n                  if (tracks) {\n                    console.log({ tracks });\n                    tracks.forEach((track) => track.stop());\n                    setMediaStream(null);\n                  }\n                });\n              };\n            }\n\n            return (\n              <div className={classes.form}>\n                {stream && (\n                  <>\n                    <video\n                      id={`remote-video-${index}`}\n                      playsInline\n                      style={{ width: \"100%\" }}\n                    ></video>\n                    <br />\n                    <br />\n                  </>\n                )}\n                {localStream && stream?.getVideoTracks().length > 0 && (\n                  <video\n                    id={`local-video-${index}`}\n                    muted\n                    playsInline\n                    style={{\n                      width: \"20vw\",\n                      position: \"absolute\",\n                      top: 90,\n                      left: 10,\n                    }}\n                  ></video>\n                )}\n\n                {!localStream && (\n                  <>\n                    <Button\n                      type=\"button\"\n                      sx={{ mb: 2 }}\n                      variant=\"contained\"\n                      fullWidth\n                      color=\"success\"\n                      onClick={() => handleAnswerCall(call)}\n                    >\n                      answer call\n                    </Button>\n                    <br />\n                  </>\n                )}\n                <Button\n                  type=\"button\"\n                  variant=\"contained\"\n                  fullWidth\n                  color=\"error\"\n                  onClick={handleEndCall}\n                >\n                  hang up\n                </Button>\n              </div>\n            );\n          })}\n      <div style={{ marginBottom: 50 }}></div>\n\n      <AppBar position=\"fixed\" color=\"primary\" sx={{ top: \"auto\", bottom: 0 }}>\n        <Container maxWidth=\"lg\" disableGutters>\n          {!!replyMessage && (\n            <Container sx={{ p: \"10px 15px\" }}>\n              <Typography\n                variant=\"subtitle2\"\n                component=\"div\"\n                sx={{ flexGrow: 1 }}\n              >\n                {t(\"podPage.replyingTo\", { displayName: replyMessage.name })}\n              </Typography>\n              <Message\n                type={replyMessage.type}\n                payload={replyMessage.payload}\n                message={replyMessage.content}\n                attachmentSha={replyMessage.attachmentSha}\n                attachment={replyMessage.attachment}\n                imageAttachment={replyMessage.image}\n                username={replyMessage.name}\n                isOnline={isGroup && replyMessage.isOnline}\n                // parse date from something like `Date(item.timestampSent)` to `'10/23/2023 12:00:00 AM'`\n                timestamp={formatDate(replyMessage.timestamp?.created)}\n                avatar={replyMessage.avatar}\n              />\n              <Button onClick={() => setReplyMessage(null)}>\n                {t(\"podPage.cancelReply\")}\n              </Button>\n            </Container>\n          )}\n        </Container>\n      </AppBar>\n    </PageContainer>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nexport default function Maintainance() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"Temporaily Unavailable\",\n        backButton: true,\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: \"Profile\",\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n          ],\n        },\n      }}\n    >\n      <div style={{ textAlign: \"center\", padding: 20 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Temporaily Unavailable\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          This app is temporaily unavailable. Apologies for any inconvienience.\n        </Typography>\n      </div>\n    </PageContainer>\n  );\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\n// import './handpose-estimation'\nimport './style.css'\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nexport default function Maintainance() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n\n  // mount handpose after component is mounted\n  useEffect(() => {\n    import('./handpose-estimation')\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"Hand\",\n        backButton: true,\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: \"Profile\",\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n          ],\n        },\n      }}\n    >\n      <div style={{ textAlign: \"center\", padding: 20 }}>\n                <div id=\"main\">\n                  <div class=\"container\">\n                    <div class=\"canvas-wrapper\">\n                      <canvas id=\"output\"></canvas>\n                      <video id=\"video\" playsinline>\n                      </video>\n                    </div>\n                    <div id=\"stats\"></div>\n                    <div class=\"scatter-container\">\n                      <div id=\"scatter-gl-container-left\"></div>\n                      <div id=\"scatter-gl-container-right\"></div>\n                    </div>\n                  </div>\n                </div>\n      </div>\n    </PageContainer>\n  );\n}\n","import React, { useState } from 'react';\n\n\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { useTranslation } from \"react-i18next\";\nimport QRCode from \"react-qr-code\";\nimport QRReader from \"react-qr-scanner\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    qrcodeReader: {\n      // height: '100vh',\n      width: \"100%\",\n      // top: 0,\n      // left: 0,\n      // position: 'absolute',\n      zIndex: 10000,\n    },\n  }));\n\nconst QRText = () => {\n    const { t } = useTranslation();\n\n  const classes = useStyles();\n    const [text, setText] = useState(\"\");\n    const [contactNamePreset, setContactNamePreset] = useState(\"\");\n    const storedConnectionId = useState(\"\");\n    const [scanning, setScanning] = useState(false);\n\n    const handleCopyConnectionIdToClipboard = () => {\n        navigator.clipboard.writeText(\n          `${window.location.origin}/#/login/${storedConnectionId}${contactNamePreset ? `/${contactNamePreset}` : \"\"}`,\n        );\n      };\n\n\n\n  const handleScan = (data) => {\n    if (!data?.text) return;\n    setText(data?.text);\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n    \n  return (\n    <div>\n      <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Text/Link\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleCopyConnectionIdToClipboard}\n                      edge=\"end\"\n                    >\n                      <ContentCopyIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <br />\n\n{!scanning && (\n                <div style={{ background: 'white', padding: 20 }}>\n                    <QRCode\n                      size={256}\n                      style={{ height: \"auto\", maxWidth: \"100%\", width: \"100%\" }}\n                      value={text}\n                      viewBox={`0 0 256 256`}\n                    />\n                    </div>\n            )}\n\n            {scanning && (\n              <QRReader\n              id={`qrcode-reader-${text}`}\n              key={`qrcode-reader-${text}`}\n                delay={300}\n                className={classes.qrcodeReader}\n                onError={handleError}\n                onScan={handleScan}\n                constraints={{\n                  video: {\n                    facingMode: \"environment\",\n                  },\n                }}\n              />\n            )}\n\n<Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              onClick={() => setScanning(!scanning)}\n              color={scanning ? \"error\" : \"primary\"}\n            >\n              {scanning\n                ? t(\"components.connectToPeer.stopScanning\")\n                : 'Scan QR'\n              }\n            </Button>\n    </div>\n  );\n}\n\nexport default QRText;","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\n\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { useTranslation } from \"react-i18next\";\nimport QRCode from \"react-qr-code\";\nimport QRReader from \"react-qr-scanner\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@mui/styles\";\nimport Slider from \"@mui/material/Slider\";\nimport Typography from \"@mui/material/Typography\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\n\nconst useStyles = makeStyles((theme) => ({\n  qrcodeReader: {\n    // height: '100vh',\n    width: \"100%\",\n    // top: 0,\n    // left: 0,\n    // position: 'absolute',\n    zIndex: 10000,\n  },\n}));\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nconst QRFile = () => {\n  const { t } = useTranslation();\n\n  const classes = useStyles();\n  const [text, setText] = useState(\"\");\n  const [contactNamePreset, setContactNamePreset] = useState(\"\");\n  const storedConnectionId = useState(\"\");\n  const [scanning, setScanning] = useState(false);\n  const [fileParts, setFileParts] = useState([]);\n  const [selectedPart, setSelectedPart] = useState(0);\n  const [partDensity, setPartDensity] = useState(100);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timeoutInterval, setTimeoutInterval] = useState();\n\n  const handleCopyConnectionIdToClipboard = () => {\n    navigator.clipboard.writeText(\n      `${window.location.origin}/#/login/${storedConnectionId}${contactNamePreset ? `/${contactNamePreset}` : \"\"}`\n    );\n  };\n\n  const handleScan = (data) => {\n    const scannedData = JSON.parse(data);\n    const hasPartBeenScanned = fileParts.some(\n      (part) => part?.part === scannedData?.part\n    );\n    if (hasPartBeenScanned) return;\n    const newFileParts = [...fileParts, scannedData];\n    console.log(\"newFileParts\", newFileParts.length);\n    setFileParts(newFileParts);\n  };\n\n  useEffect(() => {\n    const areAllPartsScanned = fileParts.length === fileParts[0]?.total;\n    if (areAllPartsScanned && scanning) {\n      const file = fileParts.reduce((acc, part) => acc + part.data, \"\");\n      const filename = fileParts[0]?.filename;\n\n      // const element = document.createElement(\"a\");\n      // element.href = attachment?.data; // URL.createObjectURL(file);\n      // element.download = attachment?.name;\n      // document.body.appendChild(element);\n      // element.click();\n\n      const element = document.createElement(\"a\");\n      element.href = `data:application/octet-stream;base64,${file}`;\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      setScanning(false);\n      setFileParts([]);\n    }\n  }, [fileParts]);\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      // create base64 string\n\n      const base64 = btoa(unescape(encodeURIComponent(e.target.result)));\n\n      // create me the base64 string with like \"data:image/png;base64,\"\n      // git generic for different filetypes automatically\n\n      // const base64String = `data:image/png;base64,${base64}`;\n      const base64String = `data:application/octet-stream;base64,${base64}`;\n\n      const base64BackToString = atob(base64);\n      setText(\n        JSON.stringify({\n          name: file.name,\n          data: base64,\n        })\n      );\n\n      // split base64 string into parts pf 100 characters\n      const partSize = partDensity;\n      const numberOfParts = Math.ceil(base64.length / partSize);\n      const parts = [];\n      for (let i = 0; i < base64.length; i += partSize) {\n        const part = base64.substr(i, partSize);\n        const partNumber = Math.ceil(i / partSize);\n        const partData = {\n          part: partNumber + 1,\n          total: numberOfParts,\n          filename: file.name,\n          data: part,\n        };\n        parts.push(partData);\n      }\n      setFileParts(parts);\n    };\n    reader.readAsText(file);\n  };\n\n  const handleDownloadFile = () => {\n    const file = JSON.parse(text);\n    const blob = new Blob([file.data], { type: \"application/octet-stream\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = file.name;\n    a.click();\n  };\n\n  const recalculateFileParts = (newPartDensity) => {\n    // const partSize = newPartDensity;\n    // const parts = [];\n    // for (let i = 0; i < text.length; i += partSize) {\n    //   parts.push(text.substr(i, partSize));\n    // }\n    // setFileParts(parts);\n    // setSelectedPart(0);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (isPlaying) {\n        setSelectedPart(selectedPart + 1);\n      }\n    }, 1000);\n  }, [isPlaying, selectedPart]);\n\n  return (\n    <div>\n      {/* <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label={t(\"components.connectToPeer.shareToConnect\")}\n              name=\"connectionId\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleCopyConnectionIdToClipboard}\n                      edge=\"end\"\n                    >\n                      <ContentCopyIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            /> */}\n      <Button\n        id=\"load-file-button\"\n        variant=\"contained\"\n        component=\"label\"\n        fullWidth\n      >\n        Select File to share\n        <input type=\"file\" hidden onChange={handleFileSelect} />\n      </Button>\n      {/* <Button\n              id='load-file-button'\n              variant=\"contained\"\n              component=\"label\"\n              fullWidth\n              onClick={handleDownloadFile}\n            >\n              Download File\n            </Button> */}\n\n      <br />\n      <br />\n      {/* <Typography gutterBottom>QR Density</Typography>\n      <Slider\n        aria-label=\"part density\"\n        defaultValue={0}\n        getAriaValueText={valuetext}\n        step={1}\n        marks\n        min={0}\n        max={100}\n        value={partDensity}\n        valueLabelDisplay=\"auto\"\n        onChange={(e, value) =>\n          setPartDensity(value) && recalculateFileParts(value)\n        }\n      /> */}\n\n      {!scanning && fileParts.length > 0 && (\n        <div style={{ background: \"white\", padding: 20 }}>\n          <QRCode\n            size={256}\n            style={{ height: \"auto\", maxWidth: \"100%\", width: \"100%\" }}\n            value={JSON.stringify(fileParts?.[selectedPart]) || \"\"}\n            viewBox={`0 0 256 256`}\n          />\n        </div>\n      )}\n\n      {scanning && (\n        <QRReader\n          id={`qrcode-reader-${fileParts?.length}`}\n          key={`qrcode-reader-${fileParts?.length}`}\n          className={classes.qrcodeReader}\n          onError={handleError}\n          onScan={(data) => {\n            data && handleScan(data.text);\n          }}\n          constraints={{\n            video: {\n              facingMode: \"environment\",\n            },\n          }}\n        />\n      )}\n\n      <Button\n        type=\"button\"\n        fullWidth\n        variant=\"contained\"\n        onClick={() => setScanning(!scanning)}\n        color={scanning ? \"error\" : \"primary\"}\n      >\n        {scanning ? t(\"components.connectToPeer.stopScanning\") : \"Scan File QR\"}\n      </Button>\n      <br />\n      <br />\n\n      {!scanning && fileParts.length > 0 && (\n        <>\n          <Typography gutterBottom>Seek File Part</Typography>\n          <Slider\n            aria-label=\"select part\"\n            defaultValue={0}\n            getAriaValueText={valuetext}\n            step={1}\n            marks\n            min={0}\n            max={fileParts.length - 1}\n            value={selectedPart}\n            valueLabelDisplay=\"auto\"\n            onChange={(e, value) => {\n              setIsPlaying(false);\n              setSelectedPart(value);\n            }}\n          />\n\n          <IconButton\n            aria-label=\"delete\"\n            size=\"large\"\n            onClick={() => {\n              setIsPlaying(false);\n              setSelectedPart(selectedPart - 1);\n            }}\n          >\n            <SkipPreviousIcon fontSize=\"inherit\" />\n          </IconButton>\n          <IconButton\n            aria-label=\"delete\"\n            size=\"large\"\n            // primary\n            color=\"primary\"\n            onClick={() => setIsPlaying(!isPlaying)}\n          >\n            {isPlaying ? (\n              <PauseIcon fontSize=\"inherit\" />\n            ) : (\n              <PlayArrowIcon fontSize=\"inherit\" />\n            )}\n          </IconButton>\n          <IconButton\n            aria-label=\"delete\"\n            size=\"large\"\n            onClick={() => {\n              setIsPlaying(false);\n              setSelectedPart(selectedPart + 1);\n            }}\n          >\n            <SkipNextIcon fontSize=\"inherit\" />\n          </IconButton>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QRFile;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\n\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport QRText from \"../../atomic/molecules/qr-text/QRText\";\nimport QRFile from \"../../atomic/molecules/qr-file/QRFile\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nexport default function Maintainance() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n  const theme = useTheme();\n  const [value, setValue] = React.useState(1);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"Share by QR\",\n        backButton: true,\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: \"Profile\",\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n          ],\n        },\n      }}\n    >\n      <div style={{ textAlign: \"center\", padding: 20 }}>\n      <Box sx={{ bgcolor: 'background.paper' }}>\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"inherit\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Share Link/Text\" {...a11yProps(0)} />\n          <Tab label=\"Share File\" {...a11yProps(1)} />\n          {/* <Tab label=\"Item Three\" {...a11yProps(2)} /> */}\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <QRText />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <QRFile />\n        </TabPanel>\n        {/* <TabPanel value={value} index={2} dir={theme.direction}>\n          Item Three\n        </TabPanel> */}\n      </SwipeableViews>\n    </Box>\n      </div>\n    </PageContainer>\n  );\n}\n","import React, { useState } from 'react';\n\n\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { useTranslation } from \"react-i18next\";\nimport QRCode from \"react-qr-code\";\nimport QRReader from \"react-qr-scanner\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@mui/styles\";\nimport DownloadIcon from '@mui/icons-material/Download';\nimport UploadIcon from '@mui/icons-material/Upload';\n\nconst useStyles = makeStyles((theme) => ({\n    qrcodeReader: {\n      // height: '100vh',\n      width: \"100%\",\n      // top: 0,\n      // left: 0,\n      // position: 'absolute',\n      zIndex: 10000,\n    },\n  }));\n\nconst QRText = () => {\n    const { t } = useTranslation();\n\n  const classes = useStyles();\n    const [text, setText] = useState(\"\");\n    const [contactNamePreset, setContactNamePreset] = useState(\"\");\n    const storedConnectionId = useState(\"\");\n    const [scanning, setScanning] = useState(false);\n\n    const handleCopyConnectionIdToClipboard = () => {\n        navigator.clipboard.writeText(\n          `${window.location.origin}/#/login/${storedConnectionId}${contactNamePreset ? `/${contactNamePreset}` : \"\"}`,\n        );\n      };\n\n\n\n  const handleScan = (data) => {\n    if (!data?.text) return;\n    setText(data?.text);\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n    \n  return (\n    <div>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={console.log}\n            fullWidth\n        >\n            Generate key pair\n        </Button>\n      <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Private Key (do not share)\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n\n        <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Your Public Key\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n\n        <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Remote Public Key\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n\n        <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Message to encrypt\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n\n        <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Encrypted message\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n    </div>\n  );\n}\n\nexport default QRText;","import React, { useState } from 'react';\n\n\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { useTranslation } from \"react-i18next\";\nimport QRCode from \"react-qr-code\";\nimport QRReader from \"react-qr-scanner\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@mui/styles\";\nimport DownloadIcon from '@mui/icons-material/Download';\nimport UploadIcon from '@mui/icons-material/Upload';\n\nconst useStyles = makeStyles((theme) => ({\n    qrcodeReader: {\n      // height: '100vh',\n      width: \"100%\",\n      // top: 0,\n      // left: 0,\n      // position: 'absolute',\n      zIndex: 10000,\n    },\n  }));\n\nconst QRText = () => {\n    const { t } = useTranslation();\n\n  const classes = useStyles();\n    const [text, setText] = useState(\"\");\n    const [contactNamePreset, setContactNamePreset] = useState(\"\");\n    const storedConnectionId = useState(\"\");\n    const [scanning, setScanning] = useState(false);\n\n    const handleCopyConnectionIdToClipboard = () => {\n        navigator.clipboard.writeText(\n          `${window.location.origin}/#/login/${storedConnectionId}${contactNamePreset ? `/${contactNamePreset}` : \"\"}`,\n        );\n      };\n\n\n\n  const handleScan = (data) => {\n    if (!data?.text) return;\n    setText(data?.text);\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n    \n  return (\n    <div>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={console.log}\n            fullWidth\n        >\n            Generate Symmetric key\n        </Button>\n      <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Symmetric Key\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n\n        <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Message to encrypt\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={console.log}\n            fullWidth\n        >\n            Encrypt file\n        </Button>\n\n        <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Encrypted message\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={console.log}\n            fullWidth\n        >\n            Decrypt file\n        </Button>\n    </div>\n  );\n}\n\nexport default QRText;","import React, { useState } from 'react';\n\n\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { useTranslation } from \"react-i18next\";\nimport QRCode from \"react-qr-code\";\nimport QRReader from \"react-qr-scanner\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@mui/styles\";\nimport DownloadIcon from '@mui/icons-material/Download';\nimport UploadIcon from '@mui/icons-material/Upload';\n\nconst useStyles = makeStyles((theme) => ({\n    qrcodeReader: {\n      // height: '100vh',\n      width: \"100%\",\n      // top: 0,\n      // left: 0,\n      // position: 'absolute',\n      zIndex: 10000,\n    },\n  }));\n\nconst QRText = () => {\n    const { t } = useTranslation();\n\n  const classes = useStyles();\n    const [text, setText] = useState(\"\");\n    const [contactNamePreset, setContactNamePreset] = useState(\"\");\n    const storedConnectionId = useState(\"\");\n    const [scanning, setScanning] = useState(false);\n\n    const handleCopyConnectionIdToClipboard = () => {\n        navigator.clipboard.writeText(\n          `${window.location.origin}/#/login/${storedConnectionId}${contactNamePreset ? `/${contactNamePreset}` : \"\"}`,\n        );\n      };\n\n\n\n  const handleScan = (data) => {\n    if (!data?.text) return;\n    setText(data?.text);\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n    \n  return (\n    <div>\n        <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Hashed Value\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n\n        <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"connectionId\"\n              label=\"Input\"\n              name=\"Text\"\n              value={text}\n              onChange={(e) => setText(e.target.value || \"\")}\n              autoComplete=\"off\"\n              InputProps={{\n\n                endAdornment: (\n                    <>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <UploadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleCopyConnectionIdToClipboard}\n                            edge=\"end\"\n                            >\n                            <DownloadIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    </>\n                ),\n              }}\n        />\n    </div>\n  );\n}\n\nexport default QRText;","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Typography from \"@mui/material/Typography\";\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { useTranslation } from \"react-i18next\";\nimport QRCode from \"react-qr-code\";\nimport QRReader from \"react-qr-scanner\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@mui/styles\";\nimport DownloadIcon from '@mui/icons-material/Download';\nimport UploadIcon from '@mui/icons-material/Upload';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport HashInputs from \"./HashInputs\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nconst QRText = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n    \n  return (\n    <div>\n      <Box sx={{ bgcolor: 'background.paper' }}>\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"inherit\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          {/* <Tab label=\"MD5\" {...a11yProps(0)} /> */}\n          <Tab label=\"SHA-256\" {...a11yProps(0)} />\n          <Tab label=\"SHA-512\" {...a11yProps(1)} />\n          <Tab label=\"SHA3-512\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        {/* <TabPanel value={value} index={0} dir={theme.direction}>\n          <HashInputs />\n        </TabPanel> */}\n        <TabPanel value={value} index={0} dir={theme.direction}>\n        <HashInputs />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        <HashInputs />\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n        <HashInputs />\n        </TabPanel>\n      </SwipeableViews>\n    </Box>\n    </div>\n  );\n}\n\nexport default QRText;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\n\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport QRText from \"../../atomic/molecules/qr-text/QRText\";\nimport QRFile from \"../../atomic/molecules/qr-file/QRFile\";\nimport RSA from \"./RSA\";\nimport Symmetric from \"./Symmetric\";\nimport Hashing from \"./Hashing\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nexport default function Maintainance() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"Encrypt\",\n        backButton: true,\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: \"Profile\",\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n          ],\n        },\n      }}\n    >\n      <div style={{ textAlign: \"center\", padding: 20 }}>\n      <Box sx={{ bgcolor: 'background.paper' }}>\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"inherit\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"RSA\" {...a11yProps(0)} />\n          <Tab label=\"Symmetric\" {...a11yProps(1)} />\n          <Tab label=\"Hashing\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <RSA />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <Symmetric />\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <Hashing />\n        </TabPanel>\n      </SwipeableViews>\n    </Box>\n      </div>\n    </PageContainer>\n  );\n}\n","// import React, { useState } from \"react\";\n\n// import {\n//     Avatar,\n//     Conversation,\n//     ConversationHeader,\n//     ConversationList,\n//     InfoButton,\n//     MainContainer,\n//     MessageList,\n//     Search,\n//     Sidebar,\n//     TypingIndicator,\n//     VideoCallButton,\n//     VoiceCallButton,\n//     Message,\n//     MessageInput,\n//     ChatContainer,\n//     MessageSeparator,\n//     ExpansionPanel\n// } from \"@chatscope/chat-ui-kit-react\";\n// import IconButton from '@mui/material/IconButton';\n// import AddIcon from '@mui/icons-material/Add';\n\n// // import contacts to be displayed at the end of this list of contacts\n// import { useSelector, useDispatch } from 'react-redux'\n\n// import lillyIco from './logo192.png'\n// import joeIco from './logo192.png'\n// import emilyIco from './logo192.png'\n// import kaiIco from './logo192.png'\n// import akaneIco from './logo192.png'\n// import eliotIco from './logo192.png'\n// import zoeIco from './logo192.png'\n// import patrikIco from './logo192.png'\n// import { useNavigate, useParams } from \"react-router-dom\";\n// // import for the creation of a new conversation\n// import { createConversation } from '../../redux/slices/podsSlice'\n\n// export default () => {\n//     const [messageInputValue, setMessageInputValue] = useState(\"\");\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch();\n//     const contacts = useSelector((state) => state.contacts.contacts);\n\n//     // get the conversationId from the url if it is there with react-router-dom\n//     const { conversationId } = useParams();\n\n//     // handle the creation of a new conversation\n//     const handleCreateConversation = () => {\n//         dispatch(createConversation({\n//             name: 'New Conversation',\n//             messages: [],\n//             id: Math.floor(Math.random() * 1000000)\n//         }))\n//     }\n\n//     return (\n//         <div style={{\n//             height: \"100vh\",\n//             position: \"relative\",\n//             overflow: \"none\"\n//         }}>\n//                 <Search key={'search'} placeholder=\"Search...\" style={{ margin: '10px' }}/>\n//                 <ConversationList scrollable>\n//                     {contacts.map((contact) => (\n//                         <Conversation name={contact.name} lastSenderName={contact.name} info=\"Yes i can do it for you\" onClick={() => navigate(`/contacts/${contact.id}`)} active={conversationId === contact.id}>\n//                             <Avatar src={patrikIco} name={contact.name} status=\"available\" />\n//                         </Conversation>\n//                     ))}\n\n//                     <div style={{\n//                         // position: \"fixed\",\n//                         // bottom: \"0\",\n//                         // left: \"0\",\n//                         // right: \"0\",\n//                         textAlign: \"center\",\n//                         padding: \"10px\",\n//                     }}>\n//                         <IconButton style={{ background: '#2b6a9b', color: '#fff', zIndex: 1, }} aria-label=\"add\" size=\"large\" onClick={() => navigate('/contacts/add')}>\n//                             <AddIcon />\n//                         </IconButton>\n//                         <IconButton style={{ background: '#2b6a9b', color: '#fff', zIndex: 1, }} aria-label=\"add\" size=\"large\" onClick={handleCreateConversation}>\n//                             <AddIcon />\n//                         </IconButton>\n//                     </div>\n\n//                 </ConversationList>\n//         </div>\n//     )\n// }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ListComponent from \"../../atomic/molecules/list/List\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport usePeer from \"../../p2p/usePeer.js\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopyOutlined\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport QrCode2Icon from \"@mui/icons-material/QrCode2\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport QRReader from \"react-qr-scanner\";\nimport ConnectToPeer from \"../../atomic/molecules/connect-to-peer/ConnectToPeer\";\nimport { red } from \"@mui/material/colors\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/profileChain\";\nimport TermsAndConditions from \"../../atomic/atom/termsAndConditions\";\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nexport default function ContactsListPage() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const { compiledBlockchain: userProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: userProfileBlockchain,\n  });\n  const storedConnectionId = userProfile.connectionId;\n\n  // const storedConnectionId = useSelector((state) => state.userProfile.connectionId);\n  const storedPods = useSelector((state) => state.pods);\n  const { activeConnections } = usePeer([]);\n  const [scanning, setScanning] = useState(false);\n  const [result, setResult] = useState(\"No result\");\n  // getlatest TermsAndConditions\n  const LatestTermsAndConditions =\n    TermsAndConditions[TermsAndConditions.length - 1]?.terms;\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"Terms and Conditions\",\n        backButton: true,\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: \"Profile\",\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n            {\n              text: \"About\",\n              icon: \"info\",\n              onClick: () =>\n                (window.location = \"https://positive-intentions.com\"),\n            },\n          ],\n        },\n      }}\n    >\n      <LatestTermsAndConditions padding={20} />\n    </PageContainer>\n  );\n}\n","// import React, { useState } from \"react\";\n\n// import {\n//     Avatar,\n//     Conversation,\n//     ConversationHeader,\n//     ConversationList,\n//     InfoButton,\n//     MainContainer,\n//     MessageList,\n//     Search,\n//     Sidebar,\n//     TypingIndicator,\n//     VideoCallButton,\n//     VoiceCallButton,\n//     Message,\n//     MessageInput,\n//     ChatContainer,\n//     MessageSeparator,\n//     ExpansionPanel\n// } from \"@chatscope/chat-ui-kit-react\";\n// import IconButton from '@mui/material/IconButton';\n// import AddIcon from '@mui/icons-material/Add';\n\n// // import contacts to be displayed at the end of this list of contacts\n// import { useSelector, useDispatch } from 'react-redux'\n\n// import lillyIco from './logo192.png'\n// import joeIco from './logo192.png'\n// import emilyIco from './logo192.png'\n// import kaiIco from './logo192.png'\n// import akaneIco from './logo192.png'\n// import eliotIco from './logo192.png'\n// import zoeIco from './logo192.png'\n// import patrikIco from './logo192.png'\n// import { useNavigate, useParams } from \"react-router-dom\";\n// // import for the creation of a new conversation\n// import { createConversation } from '../../redux/slices/podsSlice'\n\n// export default () => {\n//     const [messageInputValue, setMessageInputValue] = useState(\"\");\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch();\n//     const contacts = useSelector((state) => state.contacts.contacts);\n\n//     // get the conversationId from the url if it is there with react-router-dom\n//     const { conversationId } = useParams();\n\n//     // handle the creation of a new conversation\n//     const handleCreateConversation = () => {\n//         dispatch(createConversation({\n//             name: 'New Conversation',\n//             messages: [],\n//             id: Math.floor(Math.random() * 1000000)\n//         }))\n//     }\n\n//     return (\n//         <div style={{\n//             height: \"100vh\",\n//             position: \"relative\",\n//             overflow: \"none\"\n//         }}>\n//                 <Search key={'search'} placeholder=\"Search...\" style={{ margin: '10px' }}/>\n//                 <ConversationList scrollable>\n//                     {contacts.map((contact) => (\n//                         <Conversation name={contact.name} lastSenderName={contact.name} info=\"Yes i can do it for you\" onClick={() => navigate(`/contacts/${contact.id}`)} active={conversationId === contact.id}>\n//                             <Avatar src={patrikIco} name={contact.name} status=\"available\" />\n//                         </Conversation>\n//                     ))}\n\n//                     <div style={{\n//                         // position: \"fixed\",\n//                         // bottom: \"0\",\n//                         // left: \"0\",\n//                         // right: \"0\",\n//                         textAlign: \"center\",\n//                         padding: \"10px\",\n//                     }}>\n//                         <IconButton style={{ background: '#2b6a9b', color: '#fff', zIndex: 1, }} aria-label=\"add\" size=\"large\" onClick={() => navigate('/contacts/add')}>\n//                             <AddIcon />\n//                         </IconButton>\n//                         <IconButton style={{ background: '#2b6a9b', color: '#fff', zIndex: 1, }} aria-label=\"add\" size=\"large\" onClick={handleCreateConversation}>\n//                             <AddIcon />\n//                         </IconButton>\n//                     </div>\n\n//                 </ConversationList>\n//         </div>\n//     )\n// }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ListComponent from \"../../atomic/molecules/list/List\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport usePeer from \"../../p2p/usePeer.js\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopyOutlined\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport QrCode2Icon from \"@mui/icons-material/QrCode2\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport QRReader from \"react-qr-scanner\";\nimport ConnectToPeer from \"../../atomic/molecules/connect-to-peer/ConnectToPeer\";\nimport { red } from \"@mui/material/colors\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/profileChain\";\nimport TermsAndConditions from \"../../atomic/atom/termsAndConditions\";\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nexport default function ContactsListPage() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const { compiledBlockchain: userProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: userProfileBlockchain,\n  });\n  const storedConnectionId = userProfile.connectionId;\n\n  // const storedConnectionId = useSelector((state) => state.userProfile.connectionId);\n  const storedPods = useSelector((state) => state.pods);\n  const { activeConnections } = usePeer([]);\n  const [scanning, setScanning] = useState(false);\n  const [result, setResult] = useState(\"No result\");\n  // getlatest TermsAndConditions\n  const LatestPrivacyPolicy =\n    TermsAndConditions[TermsAndConditions.length - 1]?.privacyPolicy;\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"Privacy Policy\",\n        backButton: true,\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: \"Profile\",\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n            {\n              text: \"About\",\n              icon: \"info\",\n              onClick: () =>\n                (window.location = \"https://positive-intentions.com\"),\n            },\n          ],\n        },\n      }}\n    >\n      <LatestPrivacyPolicy padding={20} />\n    </PageContainer>\n  );\n}\n","// import React, { useState } from \"react\";\n\n// import {\n//     Avatar,\n//     Conversation,\n//     ConversationHeader,\n//     ConversationList,\n//     InfoButton,\n//     MainContainer,\n//     MessageList,\n//     Search,\n//     Sidebar,\n//     TypingIndicator,\n//     VideoCallButton,\n//     VoiceCallButton,\n//     Message,\n//     MessageInput,\n//     ChatContainer,\n//     MessageSeparator,\n//     ExpansionPanel\n// } from \"@chatscope/chat-ui-kit-react\";\n// import IconButton from '@mui/material/IconButton';\n// import AddIcon from '@mui/icons-material/Add';\n\n// // import contacts to be displayed at the end of this list of contacts\n// import { useSelector, useDispatch } from 'react-redux'\n\n// import lillyIco from './logo192.png'\n// import joeIco from './logo192.png'\n// import emilyIco from './logo192.png'\n// import kaiIco from './logo192.png'\n// import akaneIco from './logo192.png'\n// import eliotIco from './logo192.png'\n// import zoeIco from './logo192.png'\n// import patrikIco from './logo192.png'\n// import { useNavigate, useParams } from \"react-router-dom\";\n// // import for the creation of a new conversation\n// import { createConversation } from '../../redux/slices/podsSlice'\n\n// export default () => {\n//     const [messageInputValue, setMessageInputValue] = useState(\"\");\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch();\n//     const contacts = useSelector((state) => state.contacts.contacts);\n\n//     // get the conversationId from the url if it is there with react-router-dom\n//     const { conversationId } = useParams();\n\n//     // handle the creation of a new conversation\n//     const handleCreateConversation = () => {\n//         dispatch(createConversation({\n//             name: 'New Conversation',\n//             messages: [],\n//             id: Math.floor(Math.random() * 1000000)\n//         }))\n//     }\n\n//     return (\n//         <div style={{\n//             height: \"100vh\",\n//             position: \"relative\",\n//             overflow: \"none\"\n//         }}>\n//                 <Search key={'search'} placeholder=\"Search...\" style={{ margin: '10px' }}/>\n//                 <ConversationList scrollable>\n//                     {contacts.map((contact) => (\n//                         <Conversation name={contact.name} lastSenderName={contact.name} info=\"Yes i can do it for you\" onClick={() => navigate(`/contacts/${contact.id}`)} active={conversationId === contact.id}>\n//                             <Avatar src={patrikIco} name={contact.name} status=\"available\" />\n//                         </Conversation>\n//                     ))}\n\n//                     <div style={{\n//                         // position: \"fixed\",\n//                         // bottom: \"0\",\n//                         // left: \"0\",\n//                         // right: \"0\",\n//                         textAlign: \"center\",\n//                         padding: \"10px\",\n//                     }}>\n//                         <IconButton style={{ background: '#2b6a9b', color: '#fff', zIndex: 1, }} aria-label=\"add\" size=\"large\" onClick={() => navigate('/contacts/add')}>\n//                             <AddIcon />\n//                         </IconButton>\n//                         <IconButton style={{ background: '#2b6a9b', color: '#fff', zIndex: 1, }} aria-label=\"add\" size=\"large\" onClick={handleCreateConversation}>\n//                             <AddIcon />\n//                         </IconButton>\n//                     </div>\n\n//                 </ConversationList>\n//         </div>\n//     )\n// }\n\nimport React, { useEffect, useState, useRef, useMemo, memo } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ListComponent from \"../../atomic/molecules/list/List\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport usePeer from \"../../p2p/usePeer.js\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopyOutlined\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport QrCode2Icon from \"@mui/icons-material/QrCode2\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport QRReader from \"react-qr-scanner\";\nimport ConnectToPeer from \"../../atomic/molecules/connect-to-peer/ConnectToPeer\";\nimport { red } from \"@mui/material/colors\";\nimport Blockchain, { useBlockchain } from \"../../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../../blockchain/chains/profileChain\";\nimport TermsAndConditions from \"../../atomic/atom/termsAndConditions\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n// maps styles and market icon\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport icon from \"leaflet/dist/images/marker-icon.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nexport default function Map() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const { compiledBlockchain: userProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: userProfileBlockchain,\n  });\n  const storedConnectionId = userProfile.connectionId;\n\n  // const storedConnectionId = useSelector((state) => state.userProfile.connectionId);\n  const storedPods = useSelector((state) => state.pods);\n  const { activeConnections } = usePeer([]);\n  const [scanning, setScanning] = useState(false);\n  const [result, setResult] = useState(\"No result\");\n  // getlatest TermsAndConditions\n  const LatestTermsAndConditions =\n    TermsAndConditions[TermsAndConditions.length - 1]?.terms;\n\n  const initialPosition = [0, 0];\n  const [position, setPosition] = useState(initialPosition);\n\n  // get gps position from device\n  useEffect(() => {\n    const setLocation = () =>\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          // alert(position.coords.longitude + \" \" + position.coords.latitude)\n          setPosition([position.coords.latitude, position.coords.longitude]);\n        },\n        (error) => alert(error.message),\n        { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 },\n      );\n\n    setLocation();\n\n    // const interval = setInterval(() => {\n    //     setLocation();\n    // }, 5000);\n    // return () => clearInterval(interval);\n  }, []);\n\n  // mapp component with position update\n  const MapComponent = useMemo(() => {\n    return () => (\n      <MapContainer\n        center={position || initialPosition}\n        zoom={13}\n        scrollWheelZoom={true}\n        style={{ height: \"100vh\" }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n        />\n        {position && (\n          <Marker\n            position={position}\n            icon={L.icon({\n              iconUrl: icon,\n              iconSize: [25, 41],\n              iconAnchor: [12, 41],\n              popupAnchor: [1, -34],\n              shadowSize: [41, 41],\n            })}\n          >\n            <Popup>You are here</Popup>\n          </Marker>\n        )}\n      </MapContainer>\n    );\n  }, [position[0], position[1]]);\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"Map\",\n        backButton: true,\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: \"Profile\",\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n          ],\n        },\n      }}\n    >\n      <MapComponent />\n\n      {/* <LatestTermsAndConditions padding={20}/> */}\n    </PageContainer>\n  );\n}\n","import React, { useEffect, useState, useRef, useMemo, memo } from \"react\";\n// import List from \"@mui/material/List\";\n// import ListItem from \"@mui/material/ListItem\";\n// import ListItemText from \"@mui/material/ListItemText\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\n// import AppBar from \"@mui/material/AppBar\";\n// import Typography from \"@mui/material/Typography\";\n// import ListItemAvatar from \"@mui/material/ListItemAvatar\";\n// import Avatar from \"@mui/material/Avatar\";\n// import ListItemIcon from '@mui/material/ListItemIcon';\n// import ChevronRight from '@mui/icons-material/ChevronRight';\n// import Fab from '@mui/material/Fab';\n// import AddIcon from '@mui/icons-material/Add';\n// import ListComponent from '../../atomic/molecules/list/List';\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\n\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\n// import test from './get_started.ts'\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Box sx={{ width: \"100%\", mr: 1 }}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default function Map() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n\n  useEffect(() => {\n    setTimeout(() => {\n      // test();\n    }, 5000);\n  }, []);\n\n  // const userProfileBlockchain = useSelector((state) => state.userProfile.blockchain);\n  // const {\n  //     compiledBlockchain: userProfile,\n  //   } = useBlockchain({\n  //     compiler: profileCompiler,\n  //     blockchain: userProfileBlockchain,\n  //   });\n  //   const storedConnectionId = userProfile.connectionId;\n\n  // // const storedConnectionId = useSelector((state) => state.userProfile.connectionId);\n  // const storedPods = useSelector((state) => state.pods);\n  // const { activeConnections } = usePeer([])\n  // const [scanning, setScanning] = useState(false)\n  // const [result, setResult] = useState('No result')\n  // // getlatest TermsAndConditions\n  // const LatestTermsAndConditions = TermsAndConditions[TermsAndConditions.length - 1]?.terms;\n\n  // const initialPosition = [0, 0];\n  // const [position, setPosition] = useState(initialPosition);\n\n  // // get gps position from device\n  // useEffect(() => {\n  //     const setLocation = () => navigator.geolocation.getCurrentPosition((position) => {\n  //         // alert(position.coords.longitude + \" \" + position.coords.latitude)\n  //         setPosition([position.coords.latitude, position.coords.longitude])\n  //     },\n  //     (error) => alert(error.message),\n  //     { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n  //     );\n\n  //     setLocation();\n\n  //     // const interval = setInterval(() => {\n  //     //     setLocation();\n  //     // }, 5000);\n  //     // return () => clearInterval(interval);\n  // }, [])\n\n  // mapp component with position update\n  // const MapComponent = useMemo(() => {\n  //     return () => (\n  //         <MapContainer center={position || initialPosition} zoom={13} scrollWheelZoom={true} style={{ height: '100vh' }} >\n  //             <TileLayer\n  //                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  //                 attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n  //             />\n  //             {position && <Marker position={position} icon={L.icon({\n  //                 iconUrl: icon,\n  //                 iconSize: [25, 41],\n  //                 iconAnchor: [12, 41],\n  //                 popupAnchor: [1, -34],\n  //                 shadowSize: [41, 41]\n  //             })}>\n  //                 <Popup>\n  //                     You are here\n  //                 </Popup>\n  //             </Marker>}\n  //         </MapContainer>\n  //     )\n  // }, [position[0], position[1]])\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"AI\",\n        backButton: true,\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: \"Profile\",\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n          ],\n        },\n      }}\n    >\n      {/* <MapComponent /> */}\n\n      {/* <LatestTermsAndConditions padding={20}/> */}\n\n      <Box\n        sx={{\n          width: \"100%\",\n          // vertically center\n          alignItems: \"center\",\n          // horizontally center\n          justifyContent: \"center\",\n          padding: 5,\n        }}\n      >\n        <Typography variant=\"h6\" gutterBottom component=\"div\">\n          Loading AI for offline...\n        </Typography>\n        <LinearProgressWithLabel value={25} />\n      </Box>\n\n      <Box\n        sx={{\n          width: \"100%\",\n          // vertically center\n          alignItems: \"center\",\n          // horizontally center\n          justifyContent: \"center\",\n          padding: 5,\n        }}\n      >\n        <Typography variant=\"h6\" gutterBottom component=\"div\">\n          Warming up...\n        </Typography>\n        <LinearProgressWithLabel value={25} />\n      </Box>\n    </PageContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport QrCode2Icon from \"@mui/icons-material/QrCode2\";\nimport QRCode from \"react-qr-code\";\nimport QRReader from \"react-qr-scanner\";\nimport { makeStyles } from \"@mui/styles\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport Button from \"@mui/material/Button\";\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\nimport Slider from \"@mui/material/Slider\";\nimport Typography from \"@mui/material/Typography\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\n\nconst useStyles = makeStyles((theme) => ({\n  qrcodeReader: {\n    display: 'block',\n    // height: '100vh',\n    width: \"100%\",\n    // top: 0,\n    // left: 0,\n    // position: 'absolute',\n    zIndex: 10000,\n  },\n}));\n\nexport default ({ defaultValue }) => {\n    const classes = useStyles();\n  const [isQRMode, setIsQRMode] = useState(false);\n  const [scanning, setScanning] = useState(false);\n  const [fileParts, setFileParts] = useState([]);\n  const [selectedPart, setSelectedPart] = useState(0);\n  const [partDensity, setPartDensity] = useState(100);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [value, setValue] = useState(defaultValue || \"\");\n\n  useEffect(() => {\n    const partSize = partDensity;\n    const numberOfParts = Math.ceil(value.length / partSize);\n    const parts = [];\n    for (let i = 0; i < value.length; i += partSize) {\n      const part = value.substr(i, partSize);\n      const partNumber = Math.ceil(i / partSize);\n      const partData = {\n        part: partNumber + 1,\n        total: numberOfParts,\n        data: part,\n      };\n      parts.push(partData);\n    }\n    setFileParts(parts);\n  }, [value]);\n\n  const handleScan = (data) => {\n    const scannedData = JSON.parse(data);\n    const hasPartBeenScanned = fileParts.some(\n      (part) => part?.part === scannedData?.part\n    );\n    if (hasPartBeenScanned) return;\n    const newFileParts = [...fileParts, scannedData];\n    console.log(\"newFileParts\", newFileParts.length);\n    setFileParts(newFileParts);\n  };\n\n  useEffect(() => {\n    const areAllPartsScanned = fileParts.length === fileParts[0]?.total;\n    if (areAllPartsScanned && scanning) {\n      const content = fileParts.reduce((acc, part) => acc + part.data, \"\");\n\n      setValue(content);\n      setScanning(false);\n      setFileParts([]);\n    }\n  }, [fileParts]);\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (isPlaying) {\n        setSelectedPart(selectedPart + 1);\n      }\n    }, 1000);\n  }, [isPlaying, selectedPart]);\n\n  const handleCopyToClipboard = () => {\n    navigator.clipboard.writeText(\n        value\n    );\n  };\n\n  return (\n    <>\n      {(!!true || !isQRMode) && (\n        <Accordion\n        expanded={isQRMode}\n      >\n        <AccordionSummary\n        aria-controls=\"panel4bh-content\"\n        id=\"panel4bh-header\"\n      >\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          label={\"WebRTC offer\"}\n          name=\"webRTC\"\n          value={scanning ? 'Scanning...' : value}\n          onChange={(e) => !scanning && setValue(e.target.value || \"\")}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n                <>\n                {!!value && (<InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={() => handleCopyToClipboard()}\n                    edge=\"end\"\n                  >\n                    <ContentCopyIcon />\n                  </IconButton>\n                </InputAdornment>)}\n\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={() => {\n                    setIsQRMode(!isQRMode)\n                    if (isQRMode) {\n                      setScanning(false);\n                    }\n                }}\n                  edge=\"end\"\n                >\n                  <QrCode2Icon />\n                </IconButton>\n              </InputAdornment>\n                </>\n            ),\n          }}\n        />\n      </AccordionSummary>\n      <AccordionDetails>\n      {!scanning && fileParts.length > 0 && (\n            <div style={{ background: \"white\", padding: 20 }}>\n              <QRCode\n                size={256}\n                style={{ height: \"auto\", maxWidth: \"100%\", width: \"100%\" }}\n                value={JSON.stringify(fileParts?.[selectedPart]) || \"\"}\n                viewBox={`0 0 256 256`}\n              />\n            </div>\n          )}\n\n          {scanning && (\n            <QRReader\n              id={`qrcode-reader-${fileParts?.length}`}\n              key={`qrcode-reader-${fileParts?.length}`}\n              className={classes.qrcodeReader}\n              onError={handleError}\n              onScan={(data) => {\n                data && handleScan(data.text);\n              }}\n              constraints={{\n                video: {\n                  facingMode: \"environment\",\n                },\n              }}\n            />\n          )}\n          <Button\n        type=\"button\"\n        fullWidth\n        variant=\"contained\"\n        onClick={() => {\n            setFileParts([]);\n            setScanning(!scanning)\n        }}\n        color={scanning ? \"error\" : \"primary\"}\n      >\n        {scanning ? (\"Stop Scanning\") : \"Scan QR\"}\n      </Button>\n      {(!scanning && fileParts.length > 1) && (\n              <>\n                <Typography gutterBottom>Seek Part</Typography>\n                <Slider\n                  aria-label=\"select part\"\n                  defaultValue={0}\n                  step={1}\n                  marks\n                  min={0}\n                  max={fileParts.length - 1}\n                  value={selectedPart}\n                  valueLabelDisplay=\"auto\"\n                  onChange={(e, value) => {\n                    setIsPlaying(false);\n                    setSelectedPart(value);\n                  }}\n                />\n      \n                <IconButton\n                  aria-label=\"delete\"\n                  size=\"large\"\n                  onClick={() => {\n                    setIsPlaying(false);\n                    setSelectedPart(selectedPart - 1);\n                  }}\n                >\n                  <SkipPreviousIcon fontSize=\"inherit\" />\n                </IconButton>\n                <IconButton\n                  aria-label=\"delete\"\n                  size=\"large\"\n                  // primary\n                  color=\"primary\"\n                  onClick={() => setIsPlaying(!isPlaying)}\n                >\n                  {isPlaying ? (\n                    <PauseIcon fontSize=\"inherit\" />\n                  ) : (\n                    <PlayArrowIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n                <IconButton\n                  aria-label=\"delete\"\n                  size=\"large\"\n                  onClick={() => {\n                    setIsPlaying(false);\n                    setSelectedPart(selectedPart + 1);\n                  }}\n                >\n                  <SkipNextIcon fontSize=\"inherit\" />\n                </IconButton>\n              </>\n            )}\n      </AccordionDetails>\n        </Accordion>\n      )}\n\n      \n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport Button from \"@mui/material/Button\";\nimport usePeer from \"../../p2p/usePeer\";\nimport QRInput from \"../../atomic/atom/qrInput/QRInput\";\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: 10,\n  },\n}));\n\nexport default function Maintainance() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const contacts = useSelector((state) => state.contacts) || [];\n  const { peer } = usePeer();\n\n  const [rtc, setRtc] = useState(null);\n  const [dc, setDc] = useState(null);\n  const [rtcIceCandidate, setRtcIceCandidate] = useState(null);\n  const [rtcRemoteIceCandidate, setRtcRemoteIceCandidate] = useState(null);\n  const [rtcOffer, setRtcOffer] = useState(null);\n  const [rtcRemoteOffer, setRtcRemoteOffer] = useState(null);\n  const [rtcAnswer, setRtcAnswer] = useState(null);\n  const [rtcRemoteAnswer, setRtcRemoteAnswer] = useState(null);\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    if (peer) {\n      setRtc(peer.connect().peerConnection);\n    }\n  }, [peer]);\n\n  useEffect(() => {\n    if (rtc) {\n      rtc.onicecandidate = function (event) {\n        if (event.candidate) {\n          const serialisedIceCandidate = JSON.stringify(event.candidate);\n          setRtcIceCandidate(serialisedIceCandidate);\n        }\n      };\n\n      rtc.ondatachannel = function (event) {\n        event.channel.onopen = function () {\n          event.channel.send(\"hello from rtc1\"); // Sending message from dc1\n        };\n        event.channel.onmessage = function (event) {\n          console.info(\"rtc1: received message:\", event.data);\n        };\n      };\n\n      const dc = rtc.createDataChannel(\"channel1\");\n      dc.onopen = function () {\n        dc.send(\"hello from rtc2\"); // Sending message from dc2\n      };\n      dc.onmessage = function (event) {\n        console.info(\"rtc2: received message:\", event.data);\n      };\n      setDc(dc);\n    }\n  }, [rtc]);\n\n  const handleCreateOffer = async () => {\n    const offer = await rtc.createOffer();\n    await rtc.setLocalDescription(offer);\n    setRtcOffer(JSON.stringify(offer));\n  };\n\n  const handleRemoteOffer = async (rtcRemoteOffer) => {\n    const offer = JSON.parse(rtcRemoteOffer.replace(/(\\r\\n|\\n|\\r)/gm, \"\"));\n    // RTCSessionDescriptionInit\n    const offerDescption = new RTCSessionDescription(offer);\n    await rtc.setRemoteDescription(offerDescption).catch((e) => {\n      console.error(\"rtc1: setRemoteDescription\", e);\n    });\n\n    await handleAnswer();\n  };\n\n  useEffect(() => {\n    if (rtcRemoteOffer) {\n      handleRemoteOffer(rtcRemoteOffer);\n    }\n  }, [rtcRemoteOffer]);\n\n  const handleAnswer = async () => {\n    const answer = await rtc.createAnswer();\n    await rtc.setLocalDescription(answer);\n    setRtcAnswer(JSON.stringify(answer));\n  };\n\n  const handleRemoteAnswer = async (rtcRemoteAnswer) => {\n    const answer = JSON.parse(rtcRemoteAnswer.replace(/(\\r\\n|\\n|\\r)/gm, \"\"));\n    // RTCSessionDescriptionInit\n    const answerDescption = new RTCSessionDescription(answer);\n    await rtc.setRemoteDescription(answerDescption);\n\n    // // send message from dc2\n    // dc.send(\"hello from rtc2\");\n  };\n\n  useEffect(() => {\n    if (rtcRemoteAnswer) {\n      handleRemoteAnswer(rtcRemoteAnswer);\n    }\n  }, [rtcRemoteAnswer]);\n\n  const handleIceCandidate = async (rtcIceCandidate) => {\n    const iceCandidate = JSON.parse(\n      rtcIceCandidate.replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n    );\n    await rtc.addIceCandidate(iceCandidate);\n  };\n\n  useEffect(() => {\n    if (rtcRemoteIceCandidate) {\n      handleIceCandidate(rtcRemoteIceCandidate);\n    }\n  }, [rtcRemoteIceCandidate]);\n\n  return (\n    <PageContainer\n      headerProps={{\n        title: \"WebRTC\",\n        backButton: true,\n        menuProps: {\n          icon: \"more\",\n          items: [\n            {\n              text: \"Profile\",\n              icon: \"account\",\n              onClick: () => navigate(\"/profile\"),\n            },\n          ],\n        },\n      }}\n    >\n      <div style={{ textAlign: \"center\", padding: 20 }}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"connectionId\"\n          label={\"WebRTC offer\"}\n          name=\"webRTC\"\n          value={rtcOffer}\n          onChange={(e) => setRtcOffer(e.target.value || \"\")}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleCreateOffer}\n                  edge=\"end\"\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"connectionId\"\n          label={\"WebRTC remote offer\"}\n          name=\"webRTC\"\n          value={rtcRemoteOffer}\n          onChange={(e) => setRtcRemoteOffer(e.target.value || \"\")}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleCreateOffer}\n                  edge=\"end\"\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"connectionId\"\n          label={\"WebRTC answer\"}\n          name=\"webRTC\"\n          value={rtcAnswer}\n          onChange={(e) => setRtcAnswer(e.target.value || \"\")}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleAnswer}\n                  edge=\"end\"\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"connectionId\"\n          label={\"WebRTC remote answer\"}\n          name=\"webRTC\"\n          value={rtcRemoteAnswer}\n          onChange={(e) => setRtcRemoteAnswer(e.target.value || \"\")}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleRemoteAnswer}\n                  edge=\"end\"\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"connectionId\"\n          label={\"WebRTC ice candidate\"}\n          name=\"webRTC\"\n          value={rtcIceCandidate}\n          onChange={(e) => setRtcIceCandidate(e.target.value || \"\")}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleCreateOffer}\n                  edge=\"end\"\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"connectionId\"\n          label={\"WebRTC remote ice candidate\"}\n          name=\"webRTC\"\n          value={rtcRemoteIceCandidate}\n          onChange={(e) => setRtcRemoteIceCandidate(e.target.value || \"\")}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleCreateOffer}\n                  edge=\"end\"\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"connectionId\"\n          label={\"message\"}\n          name=\"webRTC\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value || \"\")}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleCreateOffer}\n                  edge=\"end\"\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          component=\"label\"\n          fullWidth\n          onClick={() => {\n            dc.send(message);\n          }}\n        >\n          send\n        </Button>\n\n        {!!false && (<QRInput defaultValue=\"hello world\" />)}\n      </div>\n    </PageContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, useLocation, matchPath } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport PageContainer from \"../../atomic/organism/page-container/PageContainer\";\nimport Pods from \"../pods/Pods\";\nimport Pod from \"../pod/Pod\";\nimport PodDetails from \"../podDetails/PodDetails\";\nimport Contacts from \"../contacts/Contacts\";\nimport ContactDetails from \"../contactDetails/ContactDetails\";\nimport Profile from \"../profile/Profile\";\nimport SplitPane from \"react-split-pane\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst FullScreenDialog = () => {\n  const { pathname } = useLocation();\n  // const inPods = pathname === '/pods';\n  const inContacts = pathname === '/contacts';\n  const inContactDetails = pathname.includes('/contact/');\n  const inPod = pathname.includes('/pod/');\n  const inPodDetails = pathname.includes('/pod/') && pathname.includes('/details');\n  const inPods = pathname === '/pods';\n  const inProfile = pathname === '/profile';\n  const [isContacts, setIsContacts] = React.useState(inContacts);\n  const [isContactDetails, setIsContactDetails] = React.useState(inContactDetails);\n  const [isPod, setIsPod] = React.useState(inPod);\n  const [isProfile, setIsProfile] = React.useState(inProfile);\n  const [isPodDetails, setIsPodDetails] = React.useState(inPodDetails);\n  \n  useEffect(() => {\n    if (inPods) {\n      setIsContacts(false);\n      setIsContactDetails(false);\n      setIsPod(false);\n      setIsProfile(false);\n    }\n  }, [inPods]);\n\n  useEffect(() => {\n    if (inContacts || inContactDetails) return setIsContacts(true)\n    return setIsContacts(false);\n  }, [inContacts]);\n\n  useEffect(() => {\n    if (inContactDetails) return setIsContactDetails(true)\n    return setIsContactDetails(false);\n  }, [inContactDetails]);\n\n  useEffect(() => {\n    if (inPod || inPodDetails) return setIsPod(true)\n    return setIsPod(false);\n  }, [inPod]);\n\n  useEffect(() => {\n    if (inPodDetails) return setIsPodDetails(true)\n    return setIsPodDetails(false);\n  }, [inPodDetails]);\n\n  useEffect(() => {\n    if (inProfile) return setIsProfile(true)\n    return setIsProfile(false);\n  }, [inProfile]);\n\n\n  // const inContacts = matchPath(pathname, {\n  //   path: \"/contacts\",\n  //   exact: true,\n  // });\n\n  // const inContactDetails = matchPath(pathname, {\n  //   path: \"/contact/:contactId\",\n  // });\n\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n\n  return (\n    <React.Fragment>\n      <Pods />\n      <Dialog\n        fullScreen\n        open={isContacts}\n        TransitionComponent={Transition}\n      >\n        <Contacts />\n      </Dialog>\n      <Dialog\n        fullScreen\n        open={isContactDetails}\n        TransitionComponent={Transition}\n      >\n        <ContactDetails />\n      </Dialog>\n      <Dialog\n        fullScreen\n        open={isPod}\n        TransitionComponent={Transition}\n      >\n        <Pod />\n      </Dialog>\n      <Dialog\n        fullScreen\n        open={isProfile}\n        TransitionComponent={Transition}\n      >\n        <Profile qr={pathname.includes('/profile/qr')} />\n      </Dialog>\n      <Dialog\n        fullScreen\n        open={isPodDetails}\n        TransitionComponent={Transition}\n      >\n        <PodDetails />\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nfunction useViewport() {\n  // State to store the current viewport category ('mobile', 'tablet', 'desktop')\n  const [viewport, setViewport] = useState('desktop');\n\n  useEffect(() => {\n    const determineViewport = () => {\n      const width = window.innerWidth;\n      \n      if (width < 600) {\n        setViewport('mobile');\n      } else if (width >= 600 && width < 1024) {\n        setViewport('tablet');\n      } else {\n        setViewport('desktop');\n      }\n    };\n\n    // Determine the viewport once on initial render\n    determineViewport();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', determineViewport);\n\n    // Cleanup function to remove the event listener\n    return () => window.removeEventListener('resize', determineViewport);\n  }, []); // Empty dependency array ensures this effect runs only on mount and unmount\n\n  return viewport;\n}\n\nexport default function Maintainance() {\n\n  const viewport = useViewport();\n  console.log({ viewport })\n\n  // return (\n  //   <SplitPane split=\"vertical\" minSize={200} defaultSize={viewport === 'mobile' ? '100%' :300}>\n  //     <Pods />\n  //     <SplitPane split=\"vertical\" minSize={200} defaultSize={viewport === 'desktop' ? '50%' : '100%'}>\n  //       <Contacts />\n  //       {viewport === 'desktop' && <ContactDetails />}\n  //     </SplitPane>\n  //   </SplitPane>\n  // );\n\n  return <FullScreenDialog />\n}\n","import React, { useCallback, useEffect, useState, Suspense, lazy } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport {\n  createHashRouter,\n  createBrowserRouter,\n  RouterProvider,\n  Navigate,\n} from \"react-router-dom\";\n// import App from \"../pages/app/App\";\n// import Chat from \"../pages/chat/Chat\";\n// import Conversations from \"../pages/conversations/Conversations\";\n// import ConversationDetails from \"../pages/conversationDetails/ConversationDetails\";\n// import Profile from \"../pages/addContact/AddContact\";\nimport Login from \"../pages/login/Login\";\nimport Pods from \"../pages/pods/Pods\";\nimport Pod from \"../pages/pod/Pod\";\nimport PodDetails from \"../pages/podDetails/PodDetails\";\nimport Contacts from \"../pages/contacts/Contacts\";\nimport ContactDetails from \"../pages/contactDetails/ContactDetails\";\nimport Profile from \"../pages/profile/Profile\";\nimport Files from \"../pages/files/Files\";\nimport File from \"../pages/file/File\";\nimport Feed from \"../pages/feed/Feed\";\nimport Maintainance from \"../pages/maintainance/Maintainance\";\nimport Hands from \"../pages/hands/Hands\";\nimport ShareQR from \"../pages/shareQr/ShareQR\";\nimport Encryption from \"../pages/encryption/Encryption\";\n// import Verse from '../pages/verse/Verse'\nimport Blockchain, { useBlockchain } from \"../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../blockchain/chains/profileChain\";\nimport TermsAndConditions from \"../../components/atomic/atom/termsAndConditions\";\nimport TermsAndConditionsComponent from \"../pages/termsAndConditions/TermsAndConditions\";\nimport PrivacyPolicyComponent from \"../pages/privacyPolicy/PrivacyPolicy\";\nimport Map from \"../pages/map/Map\";\nimport AI from \"../pages/ai/AI\";\nimport WebRTC from \"../pages/webrtc/WebRTC\";\nimport Layout from \"../pages/layout/Layout\";\n\nconst Verse = lazy(() => import(\"../pages/verse/Verse\"));\n\nexport default () => {\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const { compiledBlockchain: userProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: userProfileBlockchain,\n  });\n  const storedUsername = userProfile.displayName;\n  const agreedToTerms = userProfile.agreedToTerms;\n\n  // const storedUsername = useSelector((state) => state.userProfile.displayName);\n  // const agreedToTerms = useSelector((state) => state.userProfile.agreedToTerms);\n  const [router, setRouter] = useState(null);\n  const agreedToLatestTerms = (agreedToTerms ?? []).includes(\n    TermsAndConditions[TermsAndConditions.length - 1]?.version,\n  );\n\n  // useEffect(() => {\n  //   setRouter(\n  //     createBrowserRouter([\n  //       {\n  //         path: \"*\",\n  //         element: <Maintainance />,\n  //       },\n  //     ]),\n  //   );\n  // }, [storedUsername]);\n\n  useEffect(() => {\n    if (!storedUsername || !agreedToLatestTerms) {\n      setRouter(\n        createHashRouter([\n          {\n            path: \"*\",\n            element: <Navigate to=\"/login\" />,\n          },\n          {\n            path: \"/terms\",\n            element: <TermsAndConditionsComponent />,\n          },\n          {\n            path: \"/terms/privacy\",\n            element: <PrivacyPolicyComponent />,\n          },\n          {\n            path: \"/login\",\n            element: <Login />,\n          },\n          {\n            path: \"/login/:contactId\",\n            element: <Login />,\n          },\n          {\n            path: \"/login/:contactId/:contactName\",\n            element: <Login />,\n          },\n          {\n            path: \"/feed\",\n            element: <Feed />,\n          },\n          {\n            path: \"/verse\",\n            element: (\n              <Suspense fallback={<div>Loading...</div>}>\n                <Verse />\n              </Suspense>\n            ),\n          },\n          {\n            path: \"/map\",\n            element: <Map />,\n          },\n          {\n            path: \"/ai\",\n            element: <AI />,\n          },\n          {\n            path: \"/qr\",\n            element: <ShareQR />,\n          },\n          {\n            path: \"/webrtc\",\n            element: <WebRTC />,\n          },\n          {\n            path: \"/layout\",\n            element: <Layout />,\n          },\n          {\n            path: \"/hands\",\n            element: <Hands />,\n          },\n          {\n            path: \"/encrypt\",\n            element: <Encryption />,\n          }\n        ]),\n      );\n    } else {\n      setRouter(\n        createHashRouter([\n          {\n            path: \"*\",\n            element: <Navigate to=\"/pods\" />,\n          },\n          {\n            path: \"/login\",\n            element: <Login />,\n          },\n          {\n            path: \"/login/:contactId\",\n            element: <Login />,\n          },\n          {\n            path: \"/terms\",\n            element: <TermsAndConditionsComponent />,\n          },\n          {\n            path: \"/terms/privacy\",\n            element: <PrivacyPolicyComponent />,\n          },\n          {\n            path: \"/login/:contactId/:contactName\",\n            element: <Login />,\n          },\n          {\n            path: \"/contacts\",\n            element: <Layout />,\n          },\n          {\n            path: \"/contact/:contactId\",\n            element: <Layout />,\n          },\n          {\n            path: \"/pods\",\n            element: <Layout />,\n          },\n          {\n            path: \"/pod/:podId\",\n            element: <Layout />,\n          },\n          {\n            path: \"/pod/:podId/details\",\n            element: <Layout />,\n          },\n          {\n            path: \"/pod/:podId/files\",\n            element: <Files />,\n          },\n          {\n            path: \"/pod/:podId/file/:fileId\",\n            element: <File />,\n          },\n          {\n            path: \"/pod/:podId/verse\",\n            element: (\n              <Suspense fallback={<div>Loading...</div>}>\n                <Verse />\n              </Suspense>\n            ),\n          },\n          {\n            path: \"/profile\",\n            element: <Layout />,\n          },\n          {\n            path: \"/profile/qr\",\n            element: <Layout />,\n          },\n          {\n            path: \"/feed\",\n            element: (\n              // <SplitPane split=\"vertical\" minSize={350}>\n              //   <Pods />\n              <Feed />\n              // </SplitPane>\n            ),\n          },\n          {\n            path: \"/verse\",\n            element: (\n              <Suspense fallback={<div>Loading...</div>}>\n                <Verse />\n              </Suspense>\n            ),\n          },\n          {\n            path: \"/map\",\n            element: <Map />,\n          },\n          {\n            path: \"/ai\",\n            element: <AI />,\n          },\n          {\n            path: \"/qr\",\n            element: <ShareQR />,\n          },\n          {\n            path: \"/webrtc\",\n            element: <WebRTC />,\n          },\n          {\n            path: \"/layout\",\n            element: <Layout />,\n          },\n          {\n            path: \"/hands\",\n            element: <Hands />,\n          },\n          {\n            path: \"/encrypt\",\n            element: <Encryption />,\n          }\n        ]),\n      );\n    }\n  }, [storedUsername]);\n\n  return router?.state && <RouterProvider router={router} />;\n};\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\n// import storage from 'redux-persist/lib/storage';\nimport storage from \"redux-persist-indexeddb-storage\";\n\nimport userProfileReducer from \"./slices/userProfileSlice\";\nimport contactsReducer from \"./slices/contactsSlice\";\nimport podsReducer from \"./slices/podsSlice\";\nimport encryptionReducer from \"./slices/encryptionSlice\";\nimport storageReducer from \"./slices/storageSlice\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage(\"positive-intentions\"),\n};\n\nconst appReducer = combineReducers({\n  userProfile: userProfileReducer,\n  contacts: contactsReducer,\n  pods: podsReducer,\n  encryption: encryptionReducer,\n  storage: storageReducer,\n});\n\nconst rootReducer = (state, action) => {\n  // When a user logs out, reset the state of all reducers\n  if (action.type === \"userProfile/logout\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = configureStore({\n    reducer: persistedReducer,\n  });\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\n// export default configureStore({\n//   reducer: {\n//     userProfile: userProfileReducer,\n//     contacts: contactsReducer,\n//     conversations: conversationsReducer,\n//   },\n// })\n","import { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport React from \"react\";\nimport reduxPersistConfig from \"./store\";\n\nconst { store, persistor } = reduxPersistConfig();\n\nexport default ({ children }) => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      {children}\n    </PersistGate>\n  </Provider>\n);\n","import { decrypt, encrypt } from \"../../encryption/Encryption\";\n\nconst createEncryptionMiddleware =\n  (encryptionKeys) => async (req, res, next) => {\n    const { privateKey, remotePublicKey } = encryptionKeys[req.sender];\n    const deserializedPrivateKey = await window.crypto.subtle.importKey(\n      \"jwk\",\n      privateKey,\n      {\n        name: \"RSA-OAEP\",\n        hash: \"SHA-256\",\n      },\n      true,\n      [\"decrypt\"],\n    );\n    const deserializedRemotePublicKey = await window.crypto.subtle.importKey(\n      \"jwk\",\n      remotePublicKey,\n      {\n        name: \"RSA-OAEP\",\n        hash: \"SHA-256\",\n      },\n      true,\n      [\"encrypt\"],\n    );\n\n    let decryptedMessage = null;\n    if (req.payload) {\n      decryptedMessage = await decrypt(req.payload, deserializedPrivateKey);\n    }\n    req.payload = JSON.parse(decryptedMessage);\n    res.sendEncrypted = async (type, payload) => {\n      let encryptedPayload = payload;\n      if (payload) {\n        encryptedPayload = await encrypt(\n          JSON.stringify(payload),\n          deserializedRemotePublicKey,\n        );\n      }\n      res.send(type, encryptedPayload);\n    };\n\n    next();\n  };\n\nexport default createEncryptionMiddleware;\n","import {\n  generateKeyPair,\n  generateSymmetricKey,\n  deserializePrivateKey,\n  decrypt,\n  encrypt,\n  deserializePublicKey,\n  decryptWithSymmetricKey,\n  deserializeSymmetricKey,\n} from \"../../encryption/Encryption\";\nimport createEncryptionMiddleware from \"./encryptionMiddleware\";\n\n// const createEncryptionMiddleware = (encryptionKeys) => async (req,res, next) => {\n//     const { privateKey, remotePublicKey } = encryptionKeys[req.sender];\n//     const deserializedPrivateKey = await window.crypto.subtle.importKey(\n//         'jwk',\n//         privateKey,\n//         {\n//             name: 'RSA-OAEP',\n//             hash: 'SHA-256',\n//         },\n//         true,\n//         ['decrypt']\n//     );\n//     const deserializedRemotePublicKey = await window.crypto.subtle.importKey(\n//         'jwk',\n//         remotePublicKey,\n//         {\n//             name: 'RSA-OAEP',\n//             hash: 'SHA-256',\n//         },\n//         true,\n//         ['encrypt']\n//     );\n\n//     console.log({ deserializedPrivateKey, deserializedRemotePublicKey })\n\n//     let decryptedMessage = null\n//     if(req.payload) {\n//         decryptedMessage = await decrypt(req.payload, deserializedPrivateKey);\n//     }\n//     req.payload = JSON.parse(decryptedMessage);\n//     res.sendEncrypted = async (type, payload) => {\n//         let encryptedPayload = payload\n//         if (payload) {\n//             encryptedPayload = await encrypt(JSON.stringify(payload), deserializedRemotePublicKey);\n//         }\n//         res.send(type, encryptedPayload);\n//     }\n\n//     next();\n// }\n\nconst handshakeEndpoints = (\n  {\n    addContactDispatch,\n    updateContactDispatch,\n    addEncryptionKeysDispatch,\n    updateEncryptionKeysDispatch,\n    encryptionKeys,\n  },\n  sendNotification,\n) => {\n  const encryptionMiddleware = createEncryptionMiddleware(encryptionKeys);\n  return {\n    requestUserDetails: (state) => [\n      // encryptionMiddleware,\n      (request, response, next) => {\n        if (!state.contacts.find((contact) => contact.id === request.sender)) {\n          addContactDispatch({ ...request.payload });\n          const message = `${request.payload.displayName} added to contacts`;\n          sendNotification(message, { variant: \"success\" });\n        } else {\n          updateContactDispatch({ ...request.payload, id: request.sender });\n        }\n\n        response.send({ ...state.userProfile });\n      },\n    ],\n    validateIdentity: (state) => [\n      // encryptionMiddleware,\n      async (request, response, next) => {\n        const { privateKey, remotePublicKey } = encryptionKeys[request.sender];\n\n        const decryptedrsaMessage = await decrypt(\n          request.payload,\n          await deserializePrivateKey(privateKey),\n        );\n\n        const encryptedMessage = await encrypt(\n          decryptedrsaMessage,\n          await deserializePublicKey(remotePublicKey),\n        );\n\n        response.send({ data: encryptedMessage });\n      },\n    ],\n    createEncryption: (state) => [\n      async (request, response, next) => {\n        const { publicKey, privateKey } = await generateKeyPair();\n        const symmetricKey = await generateSymmetricKey();\n        const serializedPublicKey = await window.crypto.subtle.exportKey(\n          \"jwk\",\n          publicKey,\n        );\n        // serializedPublicKey.key_ops = ['encrypt'];\n        const serializedPrivateKey = await window.crypto.subtle.exportKey(\n          \"jwk\",\n          privateKey,\n        );\n        // serializedPrivateKey.key_ops = ['decrypt'];\n        const serializedSymmetricKey = await window.crypto.subtle.exportKey(\n          \"jwk\",\n          symmetricKey,\n        );\n        addEncryptionKeysDispatch({\n          userId: request.sender,\n          publicKey: serializedPublicKey,\n          privateKey: serializedPrivateKey,\n          remotePublicKey: request.payload.publicKey,\n          symmetricKey: serializedSymmetricKey,\n          established: true,\n        });\n        response.send({\n          publicKey: serializedPublicKey,\n          symmetricKey: serializedSymmetricKey,\n        });\n      },\n    ],\n  };\n};\n\nexport default handshakeEndpoints;\n","export default () => ({\n  ping: () => [\n    (request, response, next) => {\n      console.log(\"user request\", {\n        payload: request.payload,\n        sender: request.sender,\n      });\n\n      next();\n    },\n    (request, response, next) => {\n      console.log(\"user response\", {\n        payload: response.payload,\n        sender: response.sender,\n      });\n\n      response.send(\"pong\", { message: \"pong\" });\n    },\n  ],\n  pong: () => [\n    (request, response, next) => {\n      response.send({ message: \"ping\" });\n    },\n  ],\n});\n","import createEncryptionMiddleware from \"./encryptionMiddleware\";\nimport { compiler as podCompiler } from \"../../blockchain/chains/podChain\";\nimport Blockchain from \"../../blockchain/Blockchain\";\nimport FileSaver from \"file-saver\";\nimport { logToNLevelAnalytics } from \"../../utils/analytics\";\n\nconst podEndpoints = (\n  {\n    createNewPodDispatch,\n    addUserToPodDispatch,\n    addMessageToConversationDispatch,\n    encryptionKeys,\n    updatePodUnreadCountDispatch,\n    setShouldHangupDispatch,\n    setPeerIsTypingDispatch,\n    setEphemeralStoreDispatch,\n    addStorageItemDispatch,\n    addToBlockchainDispatch,\n  },\n  sendNotification,\n) => {\n  const encryptionMiddleware = createEncryptionMiddleware(encryptionKeys);\n  return {\n    requestPodDetails: (state) => [\n      // encryptionMiddleware,\n      (request, response, next) => {\n        console.log(\"recieving requestPodDetails\", request.payload);\n\n        // response.send('requestUserDetails');\n        const pod = state.pods.find((pod) => pod.id === request.payload.id);\n        response.send(\"recievePodDetails\", { ...pod, messages: [] });\n      },\n    ],\n    recievePodDetails: (state) => [\n      // encryptionMiddleware,\n      (request, response, next) => {\n        console.log(\"recieving recievePodDetails\", request.payload);\n        if (!state.pods.find((pod) => pod.id === request.payload.id)) {\n          console.log(\"recievePodDetails\", request.payload);\n          createNewPodDispatch(request.payload);\n        }\n      },\n    ],\n    addUserToPod: (state) => [\n      // encryptionMiddleware,\n      (request, response, next) => {\n        console.log(\"recieving addNewPod\", request.payload);\n        addUserToPodDispatch(request.payload.podId, request.payload.userId);\n        response.send();\n      },\n    ],\n    addNewPod: (state) => [\n      // encryptionMiddleware,\n      (request, response, next) => {\n        console.log(\"recieving addNewPod\", request.payload);\n        if (!state.pods.find((pod) => pod.id === request.payload.id)) {\n          console.log(\"addNewPod\", request.payload);\n\n          // const blockchainInstance = new Blockchain({\n          //     compiler: podCompiler,\n          //     chain: pod.blockchain?.chain ?? [],\n          //     storage: pod.blockchain?.storage ?? {},\n          // });\n          // const compiledBlockchain = blockchainInstance?.compile?.();\n\n          // const payLoadContainsClone = request.payload.pendingBlocks.find((block) => block.type === 'setClone');\n          // const cloneAlreadyExists = state.pods.find((pod) => !!pod.clone);\n\n          // find the value of \"cloneAlreadyExists\" and \"payLoadContainsClone\" in the console log below\n          // you will have to get the compiles result from the blockchain\n          const blockchainInstance = new Blockchain({\n            compiler: podCompiler,\n            chain: request.payload.pendingBlocks,\n            storage: request.payload.pendingStorage,\n          });\n          const compiledBlockchain = blockchainInstance?.compile?.();\n          const payLoadContainsClone = compiledBlockchain?.clone;\n\n          const cloneAlreadyExists = !!state.pods.find((pod) => {\n            const blockchainInstance = new Blockchain({\n              compiler: podCompiler,\n              chain: pod.blockchain?.chain ?? [],\n              storage: pod.blockchain?.storage ?? {},\n            });\n            const compiledBlockchain = blockchainInstance?.compile?.();\n            return compiledBlockchain?.clone;\n          });\n\n          console.log({\n            payLoadContainsClone,\n            cloneAlreadyExists,\n            payload: request.payload,\n            state,\n          });\n\n          if (payLoadContainsClone && cloneAlreadyExists) {\n            console.log(\"clone already exists\");\n            return response.send({ canCreateClone: false });\n          }\n\n          // cloning is only allowed when there are no existing pods\n          if (state.pods.length !== 0 && payLoadContainsClone) {\n            console.log(\n              \"cloning is only allowed when there are no existing pods\",\n            );\n            return response.send({ canCreateClone: false });\n          }\n\n          createNewPodDispatch(request.payload);\n        } else {\n          const newMember =\n            request.payload.members[request.payload.members.length - 1];\n          addUserToPodDispatch(request.payload.id, newMember);\n        }\n        response.send();\n      },\n    ],\n    message: (state) => [\n      // encryptionMiddleware,\n      (request, response, next) => {\n        const isNotOnPodPage =\n          window.location.pathname !== `/pod/${request.payload.podId}`;\n        const isNotOnPodsOverViewPage = window.location.pathname !== `/pods`;\n        console.log(\"in message handler\");\n        logToNLevelAnalytics(\"RecievingMessageSuccess\");\n\n        if (isNotOnPodPage || document.hidden) {\n          // create messahe for notification. something like:\n          // \"james: hello world\"\n          const contactName = state.contacts.find(\n            (contact) => contact.connectionId === request.payload.message.from,\n          ).displayName;\n          const content = request.payload.message.content;\n          const message = `💬 ${contactName}: ${content}`;\n          sendNotification(message, { variant: \"success\" });\n          const storedUnreadCount =\n            state.pods.find((pod) => pod.id === request.payload.podId)\n              ?.unreadCount || 0;\n          const newUnreadCount = storedUnreadCount ? storedUnreadCount + 1 : 1;\n          updatePodUnreadCountDispatch(request.payload.podId, newUnreadCount);\n          // updatePodUnreadCountDispatch( request.payload.podId, 1);\n        }\n\n        if (!state.pods.find((pod) => pod.id === request.payload.id)) {\n          createNewPodDispatch(request.payload.podDetails);\n        }\n\n        addToBlockchainDispatch(\n          request.payload.podId,\n          request.payload.blocks,\n          request.payload.block,\n          request.payload.storage,\n        );\n        addMessageToConversationDispatch({\n          podId: request.payload.podId,\n          message: {\n            ...request.payload.message,\n            attachment: request.payload.message?.attachment?.sha,\n          },\n        });\n        if (request.payload.message.attachment)\n          addStorageItemDispatch(\n            request.payload.podId,\n            request.payload.message.attachment,\n          );\n        response.send();\n      },\n    ],\n    largeFile: (state) => [\n      // encryptionMiddleware,\n      (request, response, next) => {\n        console.log(\"recieving largeFile\", request.payload);\n        // download the base64encoded file inrequest.payload.data\n        // and save it to the file system\n        sendNotification(\"Downloading file\", {\n          variant: \"success\",\n          insist: true,\n        });\n        // const file = request.payload.data;\n        // const blob = new Blob([file], { type: \"application/octet-stream\" });\n        // FileSaver.saveAs(blob, request.payload.name);\n\n        const element = document.createElement(\"a\");\n        element.href = request.payload?.data; // URL.createObjectURL(file);\n        element.download = request.payload?.name;\n        document.body.appendChild(element);\n        element.click();\n        response.send();\n      },\n    ],\n    setShouldHangup: (state) => [\n      (request, response, next) => {\n        console.log(\"recieving setShouldHangup\", request.payload);\n        setShouldHangupDispatch(\n          request.payload.podId,\n          request.payload.shouldHangup,\n        );\n        response.send();\n      },\n    ],\n    setPeerIsTyping: (state) => [\n      (request, response, next) => {\n        console.log(\"recieving setPeerIsTyping\", request.payload);\n        setPeerIsTypingDispatch(\n          request.payload.podId,\n          request.payload.peerDisplayName,\n          request.payload.isTyping,\n        );\n        response.send();\n      },\n    ],\n    updateEphemeralStorage: (state) => [\n      (request, response, next) => {\n        console.log(\"recieving updateEphemeralStorage\", request.payload);\n        setEphemeralStoreDispatch(\n          request.payload.podId,\n          request.payload.ephemeralStorage,\n        );\n        response.send();\n      },\n    ],\n    addToBlockchain: (state) => [\n      (request, response, next) => {\n        console.log(\"recieving addToBlockchain\", request.payload);\n        addToBlockchainDispatch(\n          request.payload.id,\n          request.payload.pendingBlocks,\n          request.payload.block,\n          request.payload.pendingStorage,\n        );\n        response.send();\n      },\n    ],\n    syncPodBlockchains: (state) => [\n      (request, response, next) => {\n        const pods = state.pods.filter((pod) => {\n          const blockchainInstance = new Blockchain({\n            compiler: podCompiler,\n            chain: pod.blockchain?.chain ?? [],\n            storage: pod.blockchain?.storage ?? {},\n          });\n          const compiledBlockchain = blockchainInstance?.compile?.();\n          console.log(\"sync blockchain compoled\", {\n            compiledBlockchain,\n            request,\n          });\n          return compiledBlockchain?.users.includes(\n            request?.payload?.userId ?? \"\",\n          );\n        });\n        console.log({ pods });\n        response.send({ pods });\n      },\n    ],\n  };\n};\n\nexport default podEndpoints;\n","import handshakeEndpoints from \"./handshakeEndpoints\";\nimport pingPingEndpoints from \"./pingPingEndpoints\";\nimport podEndpoints from \"./podEndpoints\";\n\nconst appiSchema = (\n  {\n    addContactDispatch,\n    updateContactDispatch,\n    createNewPodDispatch,\n    addUserToPodDispatch,\n    setShouldHangupDispatch,\n    updatePodUnreadCountDispatch,\n    addMessageToConversationDispatch,\n    addEncryptionKeysDispatch,\n    updateEncryptionKeysDispatch,\n    setPeerIsTypingDispatch,\n    setEphemeralStoreDispatch,\n    addStorageItemDispatch,\n    addToBlockchainDispatch,\n    encryptionKeys,\n  },\n  sendNotification,\n) => ({\n  ...pingPingEndpoints(),\n  ...handshakeEndpoints(\n    {\n      addContactDispatch,\n      updateContactDispatch,\n      addEncryptionKeysDispatch,\n      updateEncryptionKeysDispatch,\n      encryptionKeys,\n    },\n    sendNotification,\n  ),\n  ...podEndpoints(\n    {\n      createNewPodDispatch,\n      addUserToPodDispatch,\n      addMessageToConversationDispatch,\n      encryptionKeys,\n      updatePodUnreadCountDispatch,\n      setShouldHangupDispatch,\n      setPeerIsTypingDispatch,\n      setEphemeralStoreDispatch,\n      addStorageItemDispatch,\n      addToBlockchainDispatch,\n    },\n    sendNotification,\n  ),\n});\n\nexport default appiSchema;\n","import React, { useEffect, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact, updateContact } from \"../redux/slices/contactsSlice\";\nimport {\n  addMessage,\n  createNewPod,\n  addUserToPod,\n  updatePodUnreadCount,\n  setShouldHangup,\n  setPeerIsTyping,\n  addToBlockchain,\n  setEphemeralStorage,\n} from \"../redux/slices/podsSlice\";\nimport { addStorageItem } from \"../redux/slices/storageSlice\";\nimport {\n  addEncryptionKeys,\n  updateEncryptionKeys,\n} from \"../redux/slices/encryptionSlice\";\nimport PeerProvider from \"./PeerProvider\";\nimport createAppiSchema from \"./appi/appiSchema\";\nimport Blockchain, { useBlockchain } from \"../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../blockchain/chains/profileChain\";\nimport { useNotification } from \"../notifications/notificationManager\";\nimport { compiler as podCompiler } from \"../blockchain/chains/podChain\";\nimport {\n  generateKeyPair,\n  encrypt,\n  deserializePublicKey,\n  decrypt,\n  deserializePrivateKey,\n} from \"../encryption/Encryption\";\nimport { useCryptography } from \"cryptography/Cryptography\";\n\nexport default ({ children }) => {\n  const { randomString } = useCryptography();\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const addToBlockchainDispatch = (podId, blocks, block, storage) =>\n    dispatch(addToBlockchain({ podId, blocks, block, storage, append: true }));\n  const { compiledBlockchain: userProfile, addBlocks: addBlocksToProfile } =\n    useBlockchain({\n      compiler: profileCompiler,\n      blockchain: userProfileBlockchain,\n      dispatch: addToBlockchainDispatch,\n    });\n  const contacts = useSelector((state) => state.contacts);\n  const pods = useSelector((state) => state.pods);\n  const encryptionKeys = useSelector((state) => state.encryption);\n  const dispatch = useDispatch();\n  const addContactDispatch = (contact) => dispatch(addContact(contact));\n  const updateContactDispatch = (contact) => dispatch(updateContact(contact));\n  const addMessageToConversationDispatch = (message) =>\n    dispatch(addMessage(message));\n  const createNewPodDispatch = (pod) => dispatch(createNewPod(pod));\n  const addEncryptionKeysDispatch = (keys) => dispatch(addEncryptionKeys(keys));\n  const updateEncryptionKeysDispatch = (keys) =>\n    dispatch(updateEncryptionKeys(keys));\n  const addUserToPodDispatch = (podId, userId) =>\n    dispatch(addUserToPod({ podId, userId }));\n  const updatePodUnreadCountDispatch = (podId, unreadCount) =>\n    dispatch(updatePodUnreadCount({ podId, unreadCount }));\n  const setShouldHangupDispatch = (podId, shouldHangup) =>\n    dispatch(setShouldHangup({ podId, shouldHangup }));\n  const setPeerIsTypingDispatch = (podId, peerDisplayName, isTyping) =>\n    dispatch(setPeerIsTyping({ podId, peerDisplayName, isTyping }));\n  const setEphemeralStoreDispatch = (podId, ephemeralStorage) =>\n    dispatch(setEphemeralStorage({ podId, ephemeralStorage }));\n  const addStorageItemDispatch = (podId, item) =>\n    dispatch(addStorageItem({ podId, item }));\n  const sendNotification = useNotification();\n\n  const appiSchema = createAppiSchema(\n    {\n      addContactDispatch,\n      updateContactDispatch,\n      createNewPodDispatch,\n      addUserToPodDispatch,\n      setShouldHangupDispatch,\n      updatePodUnreadCountDispatch,\n      addMessageToConversationDispatch,\n      addEncryptionKeysDispatch,\n      updateEncryptionKeysDispatch,\n      setPeerIsTypingDispatch,\n      setEphemeralStoreDispatch,\n      addStorageItemDispatch,\n      addToBlockchainDispatch,\n      encryptionKeys,\n    },\n    sendNotification,\n  );\n\n  const onConnection = async (\n    connection,\n    sendMessage,\n    managedState,\n    activeConnections,\n  ) => {\n    if (!!true || !activeConnections.includes(connection.peer)) {\n      const contactDetails = managedState.contacts.find(\n        (contact) => contact.connectionId === connection.peer,\n      );\n\n      if (contactDetails) {\n        const publicKey = encryptionKeys[contactDetails.id]?.remotePublicKey;\n        const privateKey = encryptionKeys[contactDetails.id]?.privateKey;\n        const randomHash = randomString();\n        const encryptedRandomHash = await encrypt(\n          randomHash,\n          await deserializePublicKey(publicKey),\n        );\n        const response = await sendMessage(\n          connection.peer,\n          { type: \"validateIdentity\", payload: encryptedRandomHash },\n          connection,\n        );\n        if (\n          randomHash ===\n          (await decrypt(\n            response.data,\n            await deserializePrivateKey(privateKey),\n          ))\n        ) {\n          const message = `✅ ${contactDetails.displayName} connected`;\n          sendNotification(message, { variant: \"success\" });\n\n          const peerPods = await sendMessage(\n            connection.peer,\n            { type: \"syncPodBlockchains\" },\n            connection,\n          );\n\n          peerPods?.pods\n            ?.filter(\n              (ppod) => !managedState.pods.find((pod) => pod.id === ppod.id),\n            )\n            .forEach(async (ppod) => {\n              const {\n                id,\n                name,\n                members,\n                unreadCount,\n                shouldHangup,\n                peerIsTyping,\n                blockchain,\n                storage,\n              } = ppod;\n              const newPod = {\n                id,\n                pendingBlocks: blockchain.chain,\n                pendingStorage: blockchain.storage,\n              };\n              createNewPodDispatch(newPod);\n            });\n        } else {\n          connection.close();\n        }\n      } else if (!contactDetails) {\n        const myUserDetails = {\n          connectionId: managedState.userProfile.connectionId,\n          id: managedState.userProfile.id,\n          displayName: managedState.userProfile.displayName,\n          avatar: managedState.userProfile.avatar,\n        };\n\n        const connectingMessage = `⌛ Connecting to peer`;\n        sendNotification(connectingMessage, { variant: \"info\" });\n\n        const userDetails = await sendMessage(\n          connection.peer,\n          { type: \"requestUserDetails\", payload: myUserDetails },\n          connection,\n        );\n\n        if (userDetails) {\n          const { id } = userDetails;\n          const storedContact = managedState.contacts.find(\n            (contact) => contact.id === id,\n          );\n\n          if (storedContact) {\n            const publicKey =\n              encryptionKeys[storedContact.connectionId]?.publicKey;\n            const randomHash = randomString();\n            const encryptedRandomHash = await encrypt(\n              randomHash,\n              await deserializePublicKey(publicKey),\n            );\n            const response = await sendMessage(\n              connection.peer,\n              { type: \"validateIdentity\", payload: encryptedRandomHash },\n              connection,\n            );\n            if (response.data === randomHash) {\n              updateContactDispatch(userDetails);\n              const connectedMessage = `✅ ${userDetails.displayName} connection ID updated`;\n              sendNotification(connectedMessage, { variant: \"success\" });\n\n              const peerPods = await sendMessage(\n                connection.peer,\n                { type: \"syncPodBlockchains\" },\n                connection,\n              );\n              const pods = peerPods.pods.map((pod) => {\n                const blockchainInstance = new Blockchain({\n                  compiler: podCompiler,\n                  chain: pod.blockchain?.chain ?? [],\n                  storage: pod.blockchain?.storage ?? {},\n                });\n                const compiledBlockchain = blockchainInstance?.compile?.();\n                return compiledBlockchain;\n              });\n            } else {\n              connection.close();\n            }\n          } else {\n            addContactDispatch({\n              connectionId: connection.peer,\n              ...userDetails,\n            });\n            const { publicKey, privateKey } = await generateKeyPair();\n            const serializedPublicKey = await window.crypto.subtle.exportKey(\n              \"jwk\",\n              publicKey,\n            );\n            const serializedPrivateKey = await window.crypto.subtle.exportKey(\n              \"jwk\",\n              privateKey,\n            );\n\n            const response = await sendMessage(\n              connection.peer,\n              {\n                type: \"createEncryption\",\n                payload: { publicKey: serializedPublicKey },\n              },\n              connection,\n            );\n            if (response) {\n              addEncryptionKeysDispatch({\n                userId: id,\n                publicKey: serializedPublicKey,\n                privateKey: serializedPrivateKey,\n                remotePublicKey: response.publicKey,\n                symmetricKey: response.symmetricKey,\n                established: true,\n              });\n\n              const connectedMessage = `✅ ${userDetails.displayName} added to contacts`;\n              sendNotification(connectedMessage, { variant: \"success\" });\n\n              const peerPods = await sendMessage(\n                connection.peer,\n                { type: \"syncPodBlockchains\" },\n                connection,\n              );\n            }\n          }\n        }\n      }\n    }\n  };\n\n  const managedState = useMemo(\n    () => ({\n      userProfile,\n      contacts,\n      pods,\n    }),\n    [userProfile, contacts, pods],\n  );\n\n  return (\n    <PeerProvider\n      appiSchema={appiSchema}\n      managedState={{ ...managedState }}\n      onConnection={onConnection}\n    >\n      {children}\n    </PeerProvider>\n  );\n};\n","import React from \"react\";\nimport { CryptographyProvider, randomString } from \"cryptography/Cryptography\";\nimport { useSelector } from \"react-redux\";\nimport { compiler as profileCompiler } from \"../blockchain/chains/profileChain\";\nimport { useBlockchain } from \"../blockchain/Blockchain\";\n\nconst ReduxConnectedCryptography = ({ children }) => {\n  const userProfileBlockchain = useSelector(\n    (state) => state.userProfile.blockchain,\n  );\n  const { compiledBlockchain: userProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: userProfileBlockchain,\n  });\n\n  return (\n    <CryptographyProvider entropy={userProfile.encryptionSignature + randomString()}>\n      {children}\n    </CryptographyProvider>\n  );\n};\n\nexport default ReduxConnectedCryptography;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"@mui/material/Button\";\nimport { logout } from \"../../../redux/slices/userProfileSlice\";\n\nfunction ErrorBoundary(props) {\n  const dispatch = useDispatch();\n  const [hasError, setHasError] = useState(false);\n  const [error, setError] = useState(null);\n\n  const logoutDispatch = () => dispatch(logout());\n\n  const handleLogout = () => {\n    logoutDispatch();\n  };\n\n  try {\n    if (hasError) {\n      // You can customize the error message and UI here\n      return (\n        <div>\n          <h1>Something went wrong!</h1>\n          <p>{error.toString()}</p>\n\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            onClick={handleLogout}\n          >\n            reset data\n          </Button>\n        </div>\n      );\n    }\n\n    // If no error occurred, render the children\n    return props.children;\n  } catch (error) {\n    // Handle the error and set state accordingly\n    console.error(error);\n    setHasError(true);\n    setError(error);\n    return null;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useEffect } from \"react\";\nimport \"./index.css\";\n// import './components/utils/bigIntPolyfill';\n// import App from './components/pages/app/App';\n// import Login from './components/pages/login/Login';\n// import reportWebVitals from './reportWebVitals';\n\n// import styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport \"./index.css\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport Router from \"./components/router/Router\";\nimport Redux from \"./components/redux/Redux\";\nimport ReduxConnectedPeerProvider from \"./components/p2p/ReduxConnectedPeerProvider\";\nimport ReduxConnectedCryptography from \"./components/cryptography/ReduxConnectedCryptography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { StylesProvider, jssPreset } from \"@mui/styles\";\nimport { SnackbarProvider } from \"./components/notifications/notificationManager\";\nimport ErrorBoundary from \"./components/atomic/atom/errorBoundary/ErrorBoundary\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./components/translations/i18n\";\nimport { create } from \"jss\";\nimport rtl from \"jss-rtl\";\nimport { useTranslation } from \"react-i18next\";\nimport { logToNLevelAnalytics } from \"./components/utils/analytics\";\n// import { PaletteMode } from \"@mui/material\";\n\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\n// import * as Sentry from \"@sentry/react\";\n\n// Sentry.init({\n//   dsn: \"https://2f7caacbd22c4f52a83ab1bcf0b5e3b2@o237943.ingest.sentry.io/4505097365159936\",\n//   integrations: [new Sentry.BrowserTracing(), new Sentry.Replay()],\n//   // Performance Monitoring\n//   tracesSampleRate: 1.0, // Capture 100% of the transactions, reduce in production!\n//   // Session Replay\n//   replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n//   replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n// });\n\n// i18n.then (() => console.log('translations loaded'))\n\n// logToNLevelAnalytics();\n\nexport const ColorModeContext = React.createContext({\n  toggleColorMode: () => {},\n});\n\nconst App = () => {\n  const { i18n } = useTranslation();\n\n  // const theme = createTheme({\n  //   palette: {\n  //     // mode: 'dark',\n  //   },\n  // });\n\n  // useEffect(() => () => {\n  //   function requestFullScreen(element) {\n  //     // Supports most browsers and their versions.\n  //     var requestMethod = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullScreen;\n\n  //     if (requestMethod) { // Native full screen.\n  //         requestMethod.call(element);\n  //     } else if (typeof window.ActiveXObject !== \"undefined\") { // Older IE.\n  //         var wscript = new window.ActiveXObject(\"WScript.Shell\");\n  //         if (wscript !== null) {\n  //             wscript.SendKeys(\"{F11}\");\n  //         }\n  //     }\n  // }\n\n  // var elem = document.body; // Make the body go full screen.\n  // requestFullScreen(elem);\n  // }, []);\n\n  const userPreferredTheme =\n    window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? \"dark\"\n      : \"light\";\n\n  const [mode, setMode] = React.useState(userPreferredTheme);\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n      },\n    }),\n    [],\n  );\n\n  // const isRightToLeft = () => {\n  //   return false; // i18n.dir() === 'rtl';\n  // }\n\n  // const [isRTL, setIsRTL] = React.useState(isRightToLeft());\n\n  // useEffect(\n  //   () => {\n  //     const newTextDirection = isRightToLeft() ? 'rtl' : 'ltr';\n  //     if (newTextDirection === 'ltr') {\n  //       document.dir = 'ltr';\n  //     } else {\n  //       document.dir = 'rtl';\n  //     }\n\n  //     setIsRTL(newTextDirection);\n  //   },\n  //   [i18n.dir()],\n  // ); // Only re-run the effect if props.language changes\n\n  document.body.dir = i18n.dir();\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n        // direction: isRTL ? 'rtl' : 'ltr',\n        // typography: {\n        //   fontFamily: isRightToLeft() ? 'Arial' : 'Roboto',\n        // },\n      }),\n    [mode],\n  );\n\n  // return <div>hello world</div>;\n\n  return (\n    <React.StrictMode>\n      <SnackbarProvider>\n        <Redux>\n          <I18nextProvider i18n={i18n}>\n            <ReduxConnectedCryptography>\n              <ReduxConnectedPeerProvider>\n                <ColorModeContext.Provider value={colorMode}>\n                  <ThemeProvider theme={theme}>\n                    <StylesProvider jss={jss}>\n                      <ErrorBoundary>\n                        <Router />\n                      </ErrorBoundary>\n                    </StylesProvider>\n                  </ThemeProvider>\n                </ColorModeContext.Provider>\n              </ReduxConnectedPeerProvider>\n            </ReduxConnectedCryptography>\n          </I18nextProvider>\n        </Redux>\n      </SnackbarProvider>\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\nconst Button = ({ ...rest }) => {\n  return <button {...rest} />;\n};\n\nexport default Button;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport Example from \"./stories/components/Example.tsx\";\nimport MainApp from \"./App.tsx\";\n\nexport const App = () => {\n  return (\n    <div>\n      <MainApp />\n    </div>\n  );\n};\n\nconst container = document.getElementById(\"app\");\nconst root = createRoot(container); // createRoot(container!) if you use TypeScript\nroot.render(<App />);\n\nif (\"serviceWorker\" in navigator) {\n  window.addEventListener(\"load\", () => {\n    navigator.serviceWorker\n      .register(\"/service-worker.js\")\n      .then((registration) => {\n        console.log(\"SW registered: \", registration);\n      })\n      .catch((registrationError) => {\n        console.log(\"SW registration failed: \", registrationError);\n      });\n  });\n}\n","import * as React from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ArrowRight from \"@mui/icons-material/ArrowRight\";\nimport { ForkLeft } from \"@mui/icons-material\";\n\nconst NestedMenuItem = React.forwardRef((props, ref) => {\n  const {\n    parentMenuOpen,\n    label,\n    rightIcon,\n    leftIcon,\n    keepOpen,\n    children,\n    customTheme,\n    className,\n    tabIndex: tabIndexProp,\n    ContainerProps: ContainerPropsProp = {},\n    rightAnchored,\n    ...MenuItemProps\n  } = props;\n\n  const { ref: containerRefProp, ...ContainerProps } = ContainerPropsProp;\n\n  const menuItemRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => menuItemRef.current);\n\n  const containerRef = React.useRef(null);\n  React.useImperativeHandle(containerRefProp, () => containerRef.current);\n\n  const menuContainerRef = React.useRef(null);\n\n  const [isSubMenuOpen, setIsSubMenuOpen] = React.useState(false);\n\n  const handleMouseEnter = (event) => {\n    setIsSubMenuOpen(true);\n\n    if (ContainerProps?.onMouseEnter) {\n      ContainerProps.onMouseEnter(event);\n    }\n  };\n\n  const handleMouseLeave = (event) => {\n    setIsSubMenuOpen(false);\n\n    if (ContainerProps?.onMouseLeave) {\n      ContainerProps.onMouseLeave(event);\n    }\n  };\n\n  const isSubmenuFocused = () => {\n    const active = containerRef.current?.ownerDocument?.activeElement;\n\n    for (const child of menuContainerRef.current?.children ?? []) {\n      if (child === active) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const handleFocus = (event) => {\n    if (event.target === containerRef.current) {\n      setIsSubMenuOpen(true);\n    }\n\n    if (ContainerProps?.onFocus) {\n      ContainerProps.onFocus(event);\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Escape\") {\n      return;\n    }\n\n    if (isSubmenuFocused()) {\n      event.stopPropagation();\n    }\n\n    const active = containerRef.current?.ownerDocument?.activeElement;\n\n    if (event.key === \"ArrowLeft\" && isSubmenuFocused()) {\n      containerRef.current?.focus();\n    }\n\n    if (\n      event.key === \"ArrowRight\" &&\n      event.target === containerRef.current &&\n      event.target === active\n    ) {\n      const firstChild = menuContainerRef.current?.children[0];\n      firstChild?.focus();\n    }\n  };\n\n  const open = isSubMenuOpen && parentMenuOpen;\n\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return (\n    <div\n      {...ContainerProps}\n      ref={containerRef}\n      onFocus={handleFocus}\n      tabIndex={tabIndex}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onKeyDown={handleKeyDown}\n    >\n      <MenuItem\n        {...MenuItemProps}\n        data-open={!!open || undefined}\n        className={className}\n        ref={menuItemRef}\n        keepOpen={keepOpen}\n      >\n        {leftIcon}\n        {label}\n        <div style={{ flexGrow: 1 }} />\n        {rightIcon}\n      </MenuItem>\n\n      <Menu\n        hideBackdrop\n        style={{ pointerEvents: \"none\" }}\n        anchorEl={menuItemRef.current}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: rightAnchored ? \"left\" : \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: rightAnchored ? \"right\" : \"left\",\n        }}\n        css={customTheme}\n        open={!!open}\n        autoFocus={false}\n        disableAutoFocus\n        disableEnforceFocus\n        disablePortal\n        onClose={() => {\n          setIsSubMenuOpen(false);\n        }}\n      >\n        <div ref={menuContainerRef} style={{ pointerEvents: \"auto\" }}>\n          {children}\n        </div>\n      </Menu>\n    </div>\n  );\n});\n\nexport default NestedMenuItem;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport NestedMenuItem from \"./NestedMenuItem\";\n\nexport const Dropdown = React.forwardRef(\n  (\n    {\n      trigger,\n      menu,\n      keepOpen: keepOpenGlobal,\n      isOpen: controlledIsOpen,\n      onOpen: onControlledOpen,\n      minWidth,\n      floatLeft,\n    },\n    ref,\n  ) => {\n    const [isInternalOpen, setInternalOpen] = React.useState(null);\n\n    const isOpen = controlledIsOpen || isInternalOpen;\n\n    let anchorRef = React.useRef(null);\n    if (ref) {\n      anchorRef = ref;\n    }\n\n    const handleOpen = (event) => {\n      event.stopPropagation();\n\n      if (menu.length) {\n        onControlledOpen\n          ? onControlledOpen(event.currentTarget)\n          : setInternalOpen(event.currentTarget);\n      }\n    };\n\n    const handleClose = (event) => {\n      event.stopPropagation();\n\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\n        return;\n      }\n\n      handleForceClose();\n    };\n\n    const handleForceClose = () => {\n      onControlledOpen ? onControlledOpen(null) : setInternalOpen(null);\n    };\n\n    const renderMenu = (menuItem, index) => {\n      if (!menuItem) return null;\n      const { keepOpen: keepOpenLocal, ...props } = menuItem.props;\n\n      let extraProps = {};\n      if (props.menu) {\n        extraProps = {\n          parentMenuOpen: isOpen,\n        };\n      }\n\n      return React.createElement(menuItem.type, {\n        ...props,\n        key: index,\n        ...extraProps,\n        onClick: (event) => {\n          event.stopPropagation();\n\n          if (!keepOpenGlobal && !keepOpenLocal) {\n            handleClose(event);\n          }\n\n          if (menuItem.props.onClick) {\n            menuItem.props.onClick(event);\n          }\n        },\n        children: props.menu\n          ? React.Children.map(props.menu, renderMenu)\n          : props.children,\n      });\n    };\n\n    return (\n      <>\n        {React.cloneElement(trigger, {\n          onClick: isOpen ? handleForceClose : handleOpen,\n          ref: anchorRef,\n        })}\n\n        <Menu\n          PaperProps={{ sx: { minWidth: minWidth ?? 0 } }}\n          anchorEl={isOpen}\n          open={!!isOpen}\n          disablePortal\n          onClose={handleClose}\n          anchorOrigin={\n            floatLeft\n              ? {\n                  vertical: \"top\",\n                  horizontal: \"left\", // Set the anchor origin to left\n                }\n              : {}\n          }\n          transformOrigin={\n            floatLeft\n              ? {\n                  vertical: \"top\",\n                  horizontal: \"right\", // Set the transform origin to right\n                }\n              : {}\n          }\n        >\n          {React.Children.map(menu, renderMenu)}\n        </Menu>\n      </>\n    );\n  },\n);\n\nexport const DropdownMenuItem = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between !important;\n\n  & > svg {\n    margin-left: 32px;\n  }\n`;\n\nexport const DropdownNestedMenuItem = styled(NestedMenuItem)`\n  display: flex;\n  justify-content: space-between !important;\n\n  & > svg {\n    margin-left: 32px;\n  }\n`;\n","// use selector to get attachment data by the sha. you can use the router podId to get the attachment by pod from the redux store.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\n\n// random image\nexport default ({ sha, data }) => {\n  if (typeof sha !== \"string\") return null;\n  const navigate = useNavigate();\n\n  const { podId } = useParams();\n  const attachment = useSelector((state) =>\n    state.storage[podId]?.find((item) => item?.sha === sha),\n  );\n  return (\n    (!!data || attachment) && (\n      <Button onClick={() => navigate(`/pod/${podId}/file/${attachment?.sha}`)}>\n        <img\n          style={{ maxHeight: 300, maxWidth: 300 }}\n          src={data ?? attachment?.data}\n          alt=\"random\"\n        />\n      </Button>\n    )\n  );\n};\n","import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n// maps styles and market icon\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport icon from \"leaflet/dist/images/marker-icon.png\";\n\nconst MapComponent = ({ position: initialPosition }) => {\n  const position = [\n    initialPosition?.latitude ?? 0,\n    initialPosition?.longitude ?? 0,\n  ];\n  return (\n    <MapContainer\n      center={position || initialPosition}\n      zoom={13}\n      scrollWheelZoom={false}\n      style={{ height: \"300px\", width: \"300px\" }}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n      />\n      {position && (\n        <Marker\n          position={position}\n          icon={L.icon({\n            iconUrl: icon,\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            shadowSize: [41, 41],\n          })}\n        >\n          <Popup>You are here</Popup>\n        </Marker>\n      )}\n    </MapContainer>\n  );\n};\n\nexport default MapComponent;\n","// use selector to get attachment data by the sha. you can use the router podId to get the attachment by pod from the redux store.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport { formatDate } from \"../../molecules/conversation/Conversation\";\nimport Message from \"./Message\";\nimport Location from \"./Location\";\n\n// random image\nexport default ({ payload, attachmentSha }) => {\n  // if (typeof payload !== 'string') return null;\n  const navigate = useNavigate();\n\n  const { podId } = useParams();\n  // const attachment = useSelector(state => state.storage[podId]?.find(item => item?.sha === sha));\n  // console.log({ attachment, podId, sha })\n  // return (!!data || attachment) && (\n  //     <Button onClick={() => navigate(`/pod/${podId}/file/${attachment?.sha}`)}>\n  //         <img style={{ maxHeight: 300, maxWidth: 300 }} src={data ?? attachment?.data} alt=\"random\"/>\n  //     </Button>\n  // );\n\n  return (\n    <>\n      {payload.image?.data && (\n        <Button onClick={() => navigate(`/pod/${podId}/file/${attachmentSha}`)}>\n          <img\n            style={{ maxHeight: 300, maxWidth: 300 }}\n            src={payload.image.data}\n            alt=\"random\"\n          />\n        </Button>\n      )}\n      {payload.audio?.data && (\n        <audio src={payload.audio?.data} controls style={{ width: \"100%\" }} />\n      )}\n      {!!payload.file?.name && (\n        <Button onClick={() => navigate(`/pod/${podId}/file/${attachmentSha}`)}>\n          {`${payload.file.name}`}\n        </Button>\n      )}\n      {!!payload.location.latitude && !payload.reply?.id && (\n        <Location position={payload.location} />\n      )}\n      {!!payload.reply?.id && (\n        <Button\n          onClick={() => {\n            const element = document.getElementById(payload.reply.id);\n\n            if (element) {\n              // Scroll to the element\n              element.scrollIntoView({ behavior: \"smooth\" });\n            }\n          }}\n        >\n          Go to replied message\n        </Button>\n      )}\n      {(!!payload.file?.name ||\n        !!payload.image?.data ||\n        !!payload.reply?.id) && <br />}\n      {payload.content ?? \"\"}\n    </>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Badge from \"@mui/material/Badge\";\nimport Attachment from \"./Attachment\";\nimport Payload from \"./Payload\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    sentMessage: {\n      // backgroundColor: theme.palette.primary.light,\n      backgroundColor:\n        theme.palette.type === \"dark\"\n          ? \"#004D00 !important\"\n          : \"#0080ff !important\",\n      color:\n        theme.palette.mode === \"dark\"\n          ? theme.palette.primary.contrastText\n          : theme.palette.primary.main,\n      // marginBottom: theme.spacing(2),\n      width: \"fit-content\",\n      alignSelf: \"flex-end\",\n      backgroundColor: \"#e6ffe6\",\n    },\n    messageContent: {\n      padding: theme.spacing(2),\n      // color: theme.palette.primary.contrastText,\n    },\n    messageHeader: {\n      padding: theme.spacing(1),\n      // color: theme.palette.primary.contrastText,\n    },\n    greenBackground: {\n      backgroundColor:\n        theme.palette.mode === \"dark\"\n          ? \"#004D00 !important\"\n          : \"#e6ffe6 !important\",\n      textAlign: \"left\",\n    },\n    blueBackground: {\n      backgroundColor:\n        theme.palette.mode === \"dark\"\n          ? \"#00005A !important\"\n          : \"#e6f7ff !important\",\n      textAlign: \"left\",\n    },\n    // lightGreen: {\n    //     backgroundColor: '#e6ffe6 !important',\n    //     textAlign: \"left\",\n    // },\n    // lightBlue: {\n    //     backgroundColor: '#e6f7ff !important',\n    //     textAlign: \"left\",\n    // },\n    // darkGreen: {\n    //     backgroundColor: '#b3ffb3 !important',\n    //     textAlign: \"left\",\n    // },\n    // darkBlue: {\n    //     backgroundColor: '#b3e6ff !important',\n    //     textAlign: \"left\",\n    // },\n    // veryDarkGreen: {\n    //     backgroundColor: '#00b300 !important',\n    //     textAlign: \"left\",\n    // },\n    // veryDarkBlue: {\n    //     backgroundColor: '#0080ff !important',\n    //     textAlign: \"left\",\n    // },\n  };\n});\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n  \"& .MuiBadge-badge\": {\n    backgroundColor: \"#44b700\",\n    color: \"#44b700\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}));\n\nconst formatDate = (timestamp) => {\n  const date = new Date(timestamp);\n\n  const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // months are zero indexed\n  const day = (\"0\" + date.getDate()).slice(-2);\n  const year = date.getFullYear();\n\n  let hours = date.getHours();\n  const minutes = (\"0\" + date.getMinutes()).slice(-2);\n  const seconds = (\"0\" + date.getSeconds()).slice(-2);\n  const ampm = hours >= 12 ? \"PM\" : \"AM\";\n\n  // convert from 24-hour to 12-hour format\n  hours = hours % 12;\n  // the hour '0' should be '12'\n  hours = hours ? hours : 12;\n\n  const formattedTime =\n    month +\n    \"/\" +\n    day +\n    \"/\" +\n    year +\n    \" \" +\n    hours +\n    \":\" +\n    minutes +\n    \":\" +\n    seconds +\n    \" \" +\n    ampm;\n\n  return formattedTime;\n};\n\nexport default function Message({\n  message,\n  username,\n  timestamp,\n  type,\n  avatar,\n  isOnline,\n  attachment,\n  imageAttachment,\n  payload,\n  attachmentSha,\n  id,\n  votes,\n  style,\n}) {\n  const classes = useStyles();\n\n  const cardClass =\n    type === \"sent\" ? classes.greenBackground : classes.blueBackground;\n\n  const upvotes = votes ? votes.upvotes.length : 0;\n  return (\n    <Badge\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      badgeContent={`❤️ ${upvotes}`}\n      invisible={upvotes > 0 ? false : true}\n    >\n      <Card id={id} className={[classes.sentMessage, cardClass]} style={style}>\n        <CardHeader\n          className={classes.messageHeader}\n          title={username}\n          subheader={timestamp}\n          avatar={\n            <StyledBadge\n              overlap=\"circular\"\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n              variant=\"dot\"\n              invisible={type === \"sent\" || !isOnline}\n            >\n              <Avatar src={avatar} alt={username}>\n                {username ? username[0] : \"-\"}\n              </Avatar>\n            </StyledBadge>\n          }\n        />\n        <CardContent className={classes.messageContent}>\n          {!!imageAttachment && (\n            <Attachment sha={imageAttachment.sha} data={imageAttachment.data} />\n          )}\n          {payload && (\n            <Payload payload={payload} attachmentSha={attachmentSha} />\n          )}\n\n          <Typography variant=\"body1\">{message}</Typography>\n        </CardContent>\n      </Card>\n    </Badge>\n  );\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useRef } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { makeStyles } from \"@mui/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport KeyboardDoubleArrowDownIcon from \"@mui/icons-material/KeyboardDoubleArrowDown\";\nimport Message from \"../../atom/message/Message\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ReplyIcon from \"@mui/icons-material/Reply\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Fab from \"@mui/material/Fab\";\nimport { useLongPress } from \"use-long-press\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  SwipeableList,\n  SwipeableListItem,\n} from \"@sandstreamdev/react-swipeable-list\";\nimport \"@sandstreamdev/react-swipeable-list/dist/styles.css\";\nimport \"./style.css\";\nimport { ConstructionOutlined } from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n  sentMessage: {\n    justifyContent: \"flex-end !important\",\n  },\n  list: {\n    paddingBottom: `${theme.spacing(8)} !important`,\n  },\n  swipeableListItem: {\n    background: \"transparent !important\",\n  },\n  fab: {\n    position: \"fixed !important\",\n    bottom: theme.spacing(9),\n    right: theme.spacing(2),\n  },\n}));\n\nexport const formatDate = (timestamp) => {\n  const date = new Date(timestamp);\n\n  const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // months are zero indexed\n  const day = (\"0\" + date.getDate()).slice(-2);\n  const year = date.getFullYear();\n\n  let hours = date.getHours();\n  const minutes = (\"0\" + date.getMinutes()).slice(-2);\n  const seconds = (\"0\" + date.getSeconds()).slice(-2);\n  const ampm = hours >= 12 ? \"PM\" : \"AM\";\n\n  // convert from 24-hour to 12-hour format\n  hours = hours % 12;\n  // the hour '0' should be '12'\n  hours = hours ? hours : 12;\n\n  const formattedTime =\n    month +\n    \"/\" +\n    day +\n    \"/\" +\n    year +\n    \" \" +\n    hours +\n    \":\" +\n    minutes +\n    \":\" +\n    seconds +\n    \" \" +\n    ampm;\n\n  return formattedTime;\n};\n\nexport default function Conversation({\n  list,\n  isGroup,\n  deleteItem,\n  loading,\n  onReply,\n  onUpvote,\n}) {\n  const scrollRef = useRef(null);\n  const classes = useStyles();\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollIntoView({ behaviour: \"smooth\" });\n    }\n\n    document.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  // calculate if the scroll is near the bottom of the scroll\n  // and it should update the value as the users changes the scroll position\n\n  const [isNearBottom, setIsNearBottom] = React.useState(true);\n\n  const handleScroll = () => {\n    const distantFromBottom =\n      document.documentElement.scrollHeight -\n      document.documentElement.scrollTop -\n      document.documentElement.clientHeight;\n    setIsNearBottom(distantFromBottom > 400);\n  };\n\n  const handleScrollToBottom = () => {\n    // scrollRef.current.scrollIntoView({ behaviour: \"smooth\" });\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const handleDelete = (id) => {\n    deleteItem(id);\n  };\n\n  const handleReply = (message) => {\n    onReply(message);\n  };\n\n  const handleUpvote = (e) => {\n    const messageId = e.target.parentNode.parentNode.parentNode.id;\n    console.log(\"handleUpvote\", messageId);\n    onUpvote(messageId);\n  };\n\n  const bind = useLongPress(handleUpvote, {\n    threshold: 500,\n    cancelOnMovement: true,\n    captureEvent: true,\n  });\n\n  return (\n    <List className={classes.list} onSc>\n      {list.map((item) => (\n        <SwipeableListItem\n          className=\"swipeableListItem\"\n          swipeLeft={{\n            content: (\n              <DeleteIcon\n                color=\"error\"\n                style={{ height: \"30px\", marginRight: 20, color: \"\" }}\n              />\n            ),\n            action: () => handleDelete(item.id),\n          }}\n          swipeRight={{\n            content: (\n              <ReplyIcon\n                color=\"primary\"\n                style={{ height: \"30px\", marginLeft: 20 }}\n              />\n            ),\n            action: () => handleReply(item),\n          }}\n          // onSwipeProgress={setIsSwiping}\n          // onSwipeStart={handleStartSwiping}\n          // onSwipeEnd={handleEndSwipingWithClick}\n        >\n          <ListItem\n            key={item.id}\n            onClick={item.onClick}\n            className={item.type === \"sent\" ? classes.sentMessage : \"\"}\n          >\n            <Button id={item.id} style={{ textTransform: \"none\" }} {...bind()}>\n              <Message\n                type={item.type}\n                payload={item.payload}\n                message={item.content}\n                attachmentSha={item.attachmentSha}\n                attachment={item.attachment}\n                imageAttachment={item.image}\n                username={item.name}\n                isOnline={isGroup && item.isOnline}\n                // parse date from something like `Date(item.timestampSent)` to `'10/23/2023 12:00:00 AM'`\n                timestamp={formatDate(item.timestamp?.created)}\n                avatar={item.avatar}\n                votes={item.votes}\n              />\n            </Button>\n          </ListItem>\n        </SwipeableListItem>\n      ))}\n      {loading && (\n        <>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography component=\"div\" gutterBottom>\n              Loading file into browser. Please wait.\n            </Typography>\n            <CircularProgress />\n          </Box>\n        </>\n      )}\n      <li ref={scrollRef} />\n      {list.length > 10 && isNearBottom && (\n        <Fab\n          color=\"primary\"\n          aria-label=\"scroll to bottom\"\n          className={classes.fab}\n          onClick={handleScrollToBottom}\n        >\n          <KeyboardDoubleArrowDownIcon />\n        </Fab>\n      )}\n    </List>\n  );\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { red } from \"@mui/material/colors\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  container: {\n    borderLeft: `5px solid ${theme.palette.mode === \"dark\" ? \"#99CCFF\" : theme.palette.primary.main}`,\n    // marginRight: -16,\n  },\n  avatar: {\n    backgroundColor: red[500],\n    marginRight: 10,\n  },\n}));\n\nconst CustomAccordion = ({\n  title,\n  avatar,\n  children,\n  expanded,\n  onChange,\n  customButtons,\n  showExpandIcon = true,\n}) => {\n  const classes = useStyles();\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  useEffect(() => {\n    if (expanded !== undefined) {\n      setIsExpanded(expanded);\n    }\n  }, [expanded]);\n\n  const handleChange = () => {\n    if (expanded === undefined) {\n      setIsExpanded(!isExpanded);\n    } else {\n      onChange();\n    }\n  };\n\n  return (\n    <Accordion\n      className={avatar ? classes.container : undefined}\n      expanded={expanded !== undefined ? expanded : isExpanded}\n      onChange={handleChange}\n    >\n      <AccordionSummary\n        expandIcon={showExpandIcon && <ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        {avatar ? (\n          <Avatar className={classes.avatar} aria-label=\"recipe\">\n            {avatar}\n          </Avatar>\n        ) : (\n          <CommentIcon style={{ marginRight: 5 }} />\n        )}\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {title}\n        </Typography>\n        {customButtons}\n      </AccordionSummary>\n      <AccordionDetails>{children}</AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default CustomAccordion;\n","import React, { useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCryptography } from \"cryptography/Cryptography\";\nimport { useNotification } from \"../../../notifications/notificationManager\";\nimport { makeStyles } from \"@mui/styles\";\nimport { red } from \"@mui/material/colors\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\n// import CardContent from '@mui/material/CardContent';\n// import CardActions from '@mui/material/CardActions';\nimport IconButton from \"@mui/material/IconButton\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Typography from \"@mui/material/Typography\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\n// import { useTheme } from '@mui/material/styles';\n// import useMediaQuery from '@mui/material/useMediaQuery';\nimport ListItemText from \"@mui/material/ListItemText\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport CardContent from \"@mui/material/CardContent\";\nimport {\n  Dropdown,\n  DropdownMenuItem,\n  DropdownNestedMenuItem,\n} from \"../dropdown/Dropdown\";\nimport CustomAccordion from \"../customAccordion/CustomAccordion\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  messageInputContainer: {\n    backgroundColor: \"#f0f8ff\",\n    padding: \"0 10px\",\n    margin: \"10px 0\",\n    width: \"100%\",\n    height: 40,\n    marginTop: \"15px\",\n    borderRadius: \"30px !important\",\n  },\n  messageInput: {\n    padding: 0,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#303030\" : \"#f0f8ff\",\n  },\n}));\n\nconst Post = ({ isDarkMode, imageId, postDetails }) => {\n  const { chance } = useCryptography();\n  const navigate = useNavigate();\n  const [dense, setDense] = React.useState(false);\n  const [secondary, setSecondary] = React.useState(false);\n\n  // pic a random number between  and including 1-9\n  const num = Math.floor(Math.random() * 9) + 1;\n  const randomNumber = useMemo(() => Math.floor(Math.random() * 9) + 1, []);\n  const randomAnimalName = useMemo(() => chance.animal(), []);\n  const randomDate = useMemo(\n    () => chance.date({ year: 2023, string: true }),\n    [],\n  );\n  const randomLongSentence = useMemo(() => chance.sentence({ words: 30 }), []);\n  const randomShortSentence = useMemo(() => chance.sentence(), []);\n\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState([]);\n  const handleChange = (panel) => (event, isExpanded) => {\n    console.log(\"handleChange\", panel, isExpanded);\n    if (isExpanded) {\n      setExpanded((prevExpanded) => [...prevExpanded, panel]);\n    } else {\n      setExpanded((prevExpanded) =>\n        prevExpanded.filter((item) => item !== panel),\n      );\n    }\n  };\n  const sendNotification = useNotification();\n\n  const defaultMenuItems = [\n    {\n      text: \"Go to message\",\n      icon: \"navigate\",\n      onClick: () => navigate(`/pods`),\n    },\n    {\n      text: \"Go to file\",\n      icon: \"navigate\",\n      onClick: () => navigate(`/pods`),\n    },\n    {\n      text: \"Delete Post\",\n      icon: \"navigate\",\n      subMenuItems: [\n        {\n          text: \"Confirm delete\",\n          onClick: () => sendNotification(\"Deleting post\", { variant: \"info\" }),\n        },\n      ],\n    },\n  ];\n\n  const InputComponent = () => (\n    <OutlinedInput\n      className={classes.messageInputContainer}\n      id=\"outlined-adornment-weight\"\n      endAdornment={\n        <>\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"send message\"\n              //   onClick={handleSendMessage}\n              // icon is green when there is text in the input field\n              //   color={messageInputValue || imageAttachment ? \"primary\" : \"disabled\"}\n              //   disabled={(!messageInputValue && !imageAttachment) || !isOnline}\n              edge=\"end\"\n            >\n              <SendIcon />\n            </IconButton>\n          </InputAdornment>\n        </>\n      }\n      aria-describedby=\"outlined-weight-helper-text\"\n      //   onChange={handleMessageChange}\n      // on Enter key press, send message\n      // but on on shift Enter\n      //   onKeyPress={(ev) => {\n      //     if (ev.key === 'Enter' && !ev.shiftKey) {\n      //       ev.preventDefault();\n      //       if (!!messageInputValue) handleSendMessage();\n      //     }\n      //   }}\n      //   value={messageInputValue}\n      classes={{ root: classes.messageInput }}\n      sx={{ width: \"100%\" }}\n      autoComplete=\"off\"\n      // lightblue background\n      // style={{ backgroundColor: '#f0f8ff' }}\n      multiline\n      placeholder=\"Reply...\"\n      inputProps={{\n        \"aria-label\": \"weight\",\n      }}\n    />\n  );\n\n  return (\n    <Card style={{ margin: \"20px 0\" }}>\n      <CardHeader\n        avatar={\n          <Avatar\n            sx={{ bgcolor: red[500] }}\n            aria-label=\"recipe\"\n            src={`/avatars/${randomNumber}.jpg`}\n          >\n            R\n          </Avatar>\n        }\n        action={\n          <Dropdown\n            keepOpen\n            trigger={\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n              >\n                <MoreVertIcon />\n              </IconButton>\n            }\n            menu={defaultMenuItems.map((item, index) => {\n              return !(item?.subMenuItems?.length > 0) ? (\n                <div>\n                  <DropdownMenuItem onClick={item.onClick}>\n                    <ListItemText>{item.text}</ListItemText>\n                  </DropdownMenuItem>\n                </div>\n              ) : (\n                <DropdownNestedMenuItem\n                  label={item.text}\n                  rightAnchored\n                  menu={[\n                    ...(item.subMenuItems ?? []).map((subItem, index) => {\n                      return (\n                        !!subItem && (\n                          <DropdownMenuItem onClick={subItem.onClick}>\n                            <ListItemText>{subItem.text}</ListItemText>\n                          </DropdownMenuItem>\n                        )\n                      );\n                    }),\n                  ]}\n                >\n                  <ListItemText>{item.text}</ListItemText>\n                </DropdownNestedMenuItem>\n              );\n            })}\n          />\n        }\n        title={randomAnimalName}\n        subheader={randomDate}\n      />\n      <CardMedia\n        component=\"img\"\n        image={\n          imageId\n            ? `/feed/${isDarkMode ? \"dark\" : \"light\"}/${imageId}.jpg`\n            : postDetails?.payload?.image?.data\n        }\n        alt=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {postDetails?.payload?.content}\n        </Typography>\n      </CardContent>\n      {/* <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\" style={{ marginLeft: 'auto' }}>\n          <FavoriteIcon />\n        </IconButton>\n      </CardActions> */}\n\n      {/* <Accordion expanded={expanded.includes(postDetails?.id)} onChange={handleChange(postDetails?.id)}>\n        <AccordionSummary\n          aria-controls=\"panel4bh-content\"\n          id=\"panel4bh-header\"\n        >\n          <CommentIcon style={{ marginRight: 5 }} />\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Comments\n          </Typography>\n          <IconButton aria-label=\"add to favorites\" style={{ marginLeft: 'auto', padding: 0 }} onClick={(e) => e.stopPropagation()}>\n          <FavoriteIcon />\n        </IconButton>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Accordion expanded={expanded.includes(imageId)} onChange={handleChange(imageId)}>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel4bh-content\"\n              id=\"panel4bh-header\"\n            >\n              <CommentIcon style={{ marginRight: 5 }} />\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Comments\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography>hello world</Typography>\n\n              <OutlinedInput className={classes.messageInputContainer}\n                id=\"outlined-adornment-weight\"\n                endAdornment={\n                  <>\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"send message\"\n                        //   onClick={handleSendMessage}\n                        // icon is green when there is text in the input field\n                        //   color={messageInputValue || imageAttachment ? \"primary\" : \"disabled\"}\n                        //   disabled={(!messageInputValue && !imageAttachment) || !isOnline}\n                        edge=\"end\"\n                      >\n                        <SendIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  </>\n                }\n                aria-describedby=\"outlined-weight-helper-text\"\n                //   onChange={handleMessageChange}\n                // on Enter key press, send message\n                // but on on shift Enter\n                //   onKeyPress={(ev) => {\n                //     if (ev.key === 'Enter' && !ev.shiftKey) {\n                //       ev.preventDefault();\n                //       if (!!messageInputValue) handleSendMessage();\n                //     }\n                //   }}\n                //   value={messageInputValue}\n                classes={{ root: classes.messageInput }}\n                sx={{ width: '100%' }}\n                autoComplete=\"off\"\n                // lightblue background\n                // style={{ backgroundColor: '#f0f8ff' }}\n                multiline\n                inputProps={{\n                  'aria-label': 'weight',\n                }}\n              />\n            </AccordionDetails>\n          </Accordion>\n\n          <OutlinedInput className={classes.messageInputContainer}\n            id=\"outlined-adornment-weight\"\n            endAdornment={\n              <>\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"send message\"\n                    //   onClick={handleSendMessage}\n                    // icon is green when there is text in the input field\n                    //   color={messageInputValue || imageAttachment ? \"primary\" : \"disabled\"}\n                    //   disabled={(!messageInputValue && !imageAttachment) || !isOnline}\n                    edge=\"end\"\n                  >\n                    <SendIcon />\n                  </IconButton>\n                </InputAdornment>\n              </>\n            }\n            aria-describedby=\"outlined-weight-helper-text\"\n            //   onChange={handleMessageChange}\n            // on Enter key press, send message\n            // but on on shift Enter\n            //   onKeyPress={(ev) => {\n            //     if (ev.key === 'Enter' && !ev.shiftKey) {\n            //       ev.preventDefault();\n            //       if (!!messageInputValue) handleSendMessage();\n            //     }\n            //   }}\n            //   value={messageInputValue}\n            classes={{ root: classes.messageInput }}\n            sx={{ width: '100%' }}\n            autoComplete=\"off\"\n            // lightblue background\n            // style={{ backgroundColor: '#f0f8ff' }}\n            multiline\n            inputProps={{\n              'aria-label': 'weight',\n            }}\n          />\n        </AccordionDetails>\n      </Accordion> */}\n      <CustomAccordion\n        title={\n          <Typography variant=\"body\" color=\"text.primary\">\n            Comments\n          </Typography>\n        }\n        customButtons={\n          <IconButton\n            aria-label=\"add to favorites\"\n            style={{ marginLeft: \"auto\", padding: 0 }}\n            onClick={(e) => e.stopPropagation()}\n            disableRipple\n          >\n            <FavoriteIcon />\n          </IconButton>\n        }\n        showExpandIcon={false}\n      >\n        <CustomAccordion\n          title={\n            <>\n              <Typography variant=\"body\" color=\"text.primary\">\n                {randomAnimalName} - {randomDate}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {randomShortSentence}\n              </Typography>\n            </>\n          }\n          avatar=\"R\"\n          customButtons={\n            <IconButton\n              aria-label=\"add to favorites\"\n              style={{ marginLeft: \"auto\", padding: 0 }}\n              onClick={(e) => e.stopPropagation()}\n              disableRipple\n            >\n              <FavoriteIcon />\n            </IconButton>\n          }\n          showExpandIcon={false}\n        >\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {randomLongSentence}\n          </Typography>\n          <InputComponent />\n        </CustomAccordion>\n\n        <InputComponent />\n      </CustomAccordion>\n    </Card>\n  );\n};\n\nexport default Post;\n","import React, { useEffect, useRef, useMemo } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { makeStyles } from \"@mui/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport KeyboardDoubleArrowUpIcon from \"@mui/icons-material/KeyboardDoubleArrowUp\";\nimport Message from \"../../atom/message/Message\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ReplyIcon from \"@mui/icons-material/Reply\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Fab from \"@mui/material/Fab\";\nimport { useLongPress } from \"use-long-press\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  SwipeableList,\n  SwipeableListItem,\n} from \"@sandstreamdev/react-swipeable-list\";\nimport \"@sandstreamdev/react-swipeable-list/dist/styles.css\";\nimport \"./style.css\";\nimport { ConstructionOutlined } from \"@mui/icons-material\";\nimport Divider from \"@mui/material/Divider\";\nimport Chip from \"@mui/material/Chip\";\n\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport { Container } from \"@mui/material\";\n\nimport Post from \"../../atom/post/Post\";\n\nconst useStyles = makeStyles((theme) => ({\n  sentMessage: {\n    justifyContent: \"flex-end !important\",\n  },\n  list: {\n    paddingBottom: `${theme.spacing(8)} !important`,\n  },\n  swipeableListItem: {\n    background: \"transparent !important\",\n  },\n  fab: {\n    position: \"fixed !important\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  messageInputContainer: {\n    marginTop: \"15px\",\n    borderRadius: \"30px !important\",\n  },\n  messageInput: {\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#303030\" : \"#f0f8ff\",\n  },\n}));\n\nexport const formatDate = (timestamp) => {\n  const date = new Date(timestamp);\n\n  const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // months are zero indexed\n  const day = (\"0\" + date.getDate()).slice(-2);\n  const year = date.getFullYear();\n\n  let hours = date.getHours();\n  const minutes = (\"0\" + date.getMinutes()).slice(-2);\n  const seconds = (\"0\" + date.getSeconds()).slice(-2);\n  const ampm = hours >= 12 ? \"PM\" : \"AM\";\n\n  // convert from 24-hour to 12-hour format\n  hours = hours % 12;\n  // the hour '0' should be '12'\n  hours = hours ? hours : 12;\n\n  const formattedTime =\n    month +\n    \"/\" +\n    day +\n    \"/\" +\n    year +\n    \" \" +\n    hours +\n    \":\" +\n    minutes +\n    \":\" +\n    seconds +\n    \" \" +\n    ampm;\n\n  return formattedTime;\n};\n\nexport default function Thread({\n  list,\n  isGroup,\n  deleteItem,\n  loading,\n  onReply,\n  onUpvote,\n}) {\n  const scrollRef = useRef(null);\n  const theme = useTheme();\n  const classes = useStyles();\n  useEffect(() => {\n    // if (scrollRef.current) {\n    //     scrollRef.current.scrollIntoView({ behaviour: \"smooth\" });\n    // }\n\n    document.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  // calculate if the scroll is near the bottom of the scroll\n  // and it should update the value as the users changes the scroll position\n\n  const [isNearTop, setIsNearTop] = React.useState(true);\n\n  const handleScroll = () => {\n    const distantFromTop = document.documentElement.scrollTop;\n    setIsNearTop(distantFromTop < 400);\n  };\n\n  const handleScrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  const handleDelete = (id) => {\n    deleteItem(id);\n  };\n\n  const handleReply = (message) => {\n    onReply(message);\n  };\n\n  const handleUpvote = (e) => {\n    const messageId = e.target.parentNode.parentNode.parentNode.id;\n    console.log(\"handleUpvote\", messageId);\n    onUpvote(messageId);\n  };\n\n  const bind = useLongPress(handleUpvote, {\n    threshold: 500,\n    cancelOnMovement: true,\n    captureEvent: true,\n  });\n\n  const isDarkMode = theme.palette.mode === \"dark\";\n\n  // create array with number 1 to 24. the numbers are in a randomised order\n  const randomNumbers = useMemo(\n    () =>\n      [...Array(24).keys()].map((i) => i + 1).sort(() => Math.random() - 0.5),\n    [],\n  );\n  //   const randomNumbers = [...Array(24).keys()].map(i => (i+1)).sort(() => Math.random() - 0.5);\n\n  return (\n    <List className={classes.list}>\n      <li ref={scrollRef} />\n      <Container>\n        {list.map((item) => (\n          <Post isDarkMode={isDarkMode} postDetails={item} />\n        ))}\n      </Container>\n\n      <Divider>\n        <Chip label={\"Test data:\"} />\n      </Divider>\n\n      <Container>\n        {randomNumbers.map((number) => (\n          <Post isDarkMode={isDarkMode} imageId={number} />\n        ))}\n      </Container>\n\n      {!isNearTop && (\n        <Fab\n          color=\"primary\"\n          aria-label=\"scroll to bottom\"\n          className={classes.fab}\n          onClick={handleScrollToTop}\n        >\n          <KeyboardDoubleArrowUpIcon />\n        </Fab>\n      )}\n    </List>\n  );\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport Badge from \"@mui/material/Badge\";\nimport { styled } from \"@mui/material/styles\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport VideocamIcon from \"@mui/icons-material/Videocam\";\nimport QrCode2Icon from '@mui/icons-material/QrCode2';\nimport { useNavigate } from \"react-router-dom\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport ContentCut from \"@mui/icons-material/ContentCut\";\nimport ScreenShareIcon from \"@mui/icons-material/ScreenShare\";\nimport TranslateIcon from \"@mui/icons-material/Translate\";\nimport CallIcon from \"@mui/icons-material/Call\";\nimport FullscreenIcon from \"@mui/icons-material/Fullscreen\";\nimport FullscreenExitIcon from \"@mui/icons-material/FullscreenExit\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport InstallMobileIcon from \"@mui/icons-material/InstallMobile\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport AssistantDirectionIcon from \"@mui/icons-material/AssistantDirection\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\nimport PermMediaIcon from \"@mui/icons-material/PermMedia\";\nimport SupportIcon from '@mui/icons-material/Support';\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport LibraryBooksIcon from \"@mui/icons-material/LibraryBooks\";\nimport KeyIcon from '@mui/icons-material/Key';\nimport ScienceIcon from \"@mui/icons-material/Science\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\nimport RedditIcon from \"@mui/icons-material/Reddit\";\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\nimport ViewInArIcon from \"@mui/icons-material/ViewInAr\";\nimport YouTubeIcon from \"@mui/icons-material/YouTube\";\nimport LiveTvIcon from '@mui/icons-material/LiveTv';\nimport ContactPhoneIcon from \"@mui/icons-material/ContactPhone\";\nimport Download from \"@mui/icons-material/DownloadForOffline\";\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\nimport VolunteerActivismIcon from '@mui/icons-material/VolunteerActivism';\nimport NavigationIcon from \"@mui/icons-material/Navigation\";\nimport PrivacyTipIcon from '@mui/icons-material/PrivacyTip';\nimport WavingHandIcon from '@mui/icons-material/WavingHand';\nimport QuestionMarkIcon from \"@mui/icons-material/QuestionMark\";\nimport ConnectWithoutContactIcon from '@mui/icons-material/ConnectWithoutContact';\nimport { useTranslation } from \"react-i18next\";\nimport { ColorModeContext } from \"../../../../App.tsx\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useNotification } from \"../../../notifications/notificationManager\";\nimport { languages } from \"../../../translations/i18n\";\n\nimport Slide from \"@mui/material/Slide\";\n\nimport {\n  Dropdown,\n  DropdownMenuItem,\n  DropdownNestedMenuItem,\n} from \"../../../atomic/atom/dropdown/Dropdown\";\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n  \"& .MuiBadge-badge\": {\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"&.green .MuiBadge-badge\": {\n    backgroundColor: \"#44b700\",\n    color: \"#44b700\",\n  },\n  \"&.amber .MuiBadge-badge\": {\n    backgroundColor: \"#FFA500\",\n    color: \"#FFA500\",\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}));\n\nconst presetIcons = {\n  account: <AccountCircle />,\n  arrowBack: <ArrowBackIcon />,\n  camera: <VideocamIcon />,\n  settings: <SettingsIcon />,\n  more: <MoreVertIcon />,\n  logout: <LogoutIcon />,\n  info: <InfoIcon />,\n  folder: <PermMediaIcon />,\n  document: <DescriptionIcon />,\n  screen: <ScreenShareIcon />,\n  call: <CallIcon />,\n  fullscreen: <FullscreenIcon />,\n  fullscreenExit: <FullscreenExitIcon />,\n  lightMode: <LightModeIcon />,\n  darkMode: <DarkModeIcon />,\n  translate: <TranslateIcon />,\n  install: <InstallMobileIcon />,\n  docs: <MenuBookIcon />,\n  github: <GitHubIcon />,\n  reddit: <RedditIcon />,\n  youtube: <YouTubeIcon />,\n  navigate: <AssistantDirectionIcon />,\n  delete: <DeleteIcon />,\n  labs: <ScienceIcon />,\n  gram: <CollectionsIcon />,\n  verse: <ViewInArIcon />,\n  callContact: <ContactPhoneIcon />,\n  help: <QuestionMarkIcon />,\n  privacy: <PrivacyTipIcon />,\n  support: <SupportIcon />,\n  download: <Download />,\n  cast: <LiveTvIcon />,\n  qr: <QrCode2Icon />,\n  connect: <ConnectWithoutContactIcon />,\n  hand: <WavingHandIcon />,\n  map: <NavigationIcon />,\n  donate: <VolunteerActivismIcon />,\n  key: <KeyIcon />,\n};\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n  });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nconst CustomDropdown = ({ menuItems }) => {\n  const { t, i18n } = useTranslation();\n  const theme = useTheme();\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const colorMode = React.useContext(ColorModeContext);\n  const sendNotification = useNotification();\n  const navigate = useNavigate();\n\n  const isInstalledPwa = useMemo(() => {\n    return (\n      window.matchMedia(\"(display-mode: standalone)\").matches ||\n      window.navigator.standalone ||\n      document.referrer.includes(\"android-app://\")\n    );\n  }, []);\n\n  useEffect(() => {\n    const handleFullscreenChange = async () => {\n      const isInFullscreen = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement;\n      \n      if (!isInFullscreen && isFullScreen && document.documentElement.requestFullscreen) {\n        // Attempt to enter fullscreen\n        try {\n          await document.documentElement.requestFullscreen();\n        } catch (error) {\n          console.log(error);\n        }\n      } else if (isInFullscreen && !isFullScreen && document.exitFullscreen) {\n        // Attempt to exit fullscreen\n        try {\n          await document.exitFullscreen();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n  \n    handleFullscreenChange();\n  }, [isFullScreen]);\n  \n\n  const [deferredPrompt, setDeferredPrompt] = useState(null);\n  useEffect(() => {\n    const handleBeforeInstallPromptEvent = (e) => {\n      e.preventDefault();\n      setDeferredPrompt(e);\n    };\n    window.addEventListener(\n      \"beforeinstallprompt\",\n      handleBeforeInstallPromptEvent,\n    );\n\n    const bipEvent = new Event(\"beforeinstallprompt\");\n\n    // Define the prompt method on the event object\n    bipEvent.prompt = () => {\n      return new Promise((resolve) => {\n        // Simulate user accepting the prompt\n        resolve({ outcome: \"accepted\" }); // or 'dismissed' to simulate user dismissing the prompt\n      });\n    };\n\n    // Dispatch the custom event to trigger your event handler\n    window.dispatchEvent(bipEvent);\n    return () => {\n      window.removeEventListener(\n        \"beforeinstallprompt\",\n        handleBeforeInstallPromptEvent,\n      );\n    };\n  }, []);\n\n  const defaultMenuItems = [\n    {\n      text: t(\"components.menuItems.labs\"),\n      icon: \"labs\",\n      subMenuItems: [\n        {\n          text: t(\"podsPage.gram\"),\n          icon: \"gram\",\n          onClick: () => navigate(\"/feed\"),\n        },\n        {\n          text: t(\"podsPage.verse\"),\n          icon: \"verse\",\n          onClick: () => navigate(\"/verse\"),\n        },\n        {\n          text: t(\"podsPage.map\"),\n          icon: \"map\",\n          onClick: () => navigate(\"/map\"),\n        },\n        {\n          text: t(\"podsPage.qr\"),\n          icon: \"qr\",\n          onClick: () => navigate(\"/qr\"),\n        },\n        {\n          text: t(\"podsPage.webrtc\"),\n          icon: \"connect\",\n          onClick: () => navigate(\"/webrtc\"),\n        },\n        {\n          text: t(\"podsPage.hands\"),\n          icon: \"hand\",\n          onClick: () => navigate(\"/hands\"),\n        },\n        {\n          text: t(\"podsPage.encrypt\"),\n          icon: \"key\",\n          onClick: () => navigate(\"/encrypt\"),\n        }\n      ],\n    },\n    {\n      text: t(\"components.menuItems.about\"),\n      icon: \"info\",\n      subMenuItems: [\n        {\n          text: t(\"components.menuItems.terms\"),\n          icon: \"document\",\n          onClick: () => navigate(\"/terms\"),\n        },\n        {\n          text: t(\"components.menuItems.privacy\"),\n          icon: \"privacy\",\n          onClick: () => navigate(\"/terms/privacy\"),\n        },\n        {\n          text: t(\"components.menuItems.docs\"),\n          icon: \"docs\",\n          onClick: () =>\n            window.open(\"https://positive-intentions.com/docs/intro\"),\n        },\n        {\n          text: t(\"components.menuItems.github\"),\n          icon: \"github\",\n          onClick: () => window.open(\"https://github.com/positive-intentions\"),\n        },\n        {\n          text: t(\"components.menuItems.reddit\"),\n          icon: \"reddit\",\n          onClick: () =>\n            window.open(\"https://www.reddit.com/r/positive_intentions/\"),\n        },\n        {\n          text: t(\"components.menuItems.youtube\"),\n          icon: \"youtube\",\n          onClick: () =>\n            window.open(\"https://www.youtube.com/@positive_intentions\"),\n        },\n        {\n          text: t(\"components.menuItems.contact\"),\n          icon: \"support\",\n          onClick: () =>\n            window.open(\"https://www.reddit.com/user/Accurate-Screen8774\"),\n        },\n      ],\n    },\n    {\n      text: t(\"components.menuItems.options\"),\n      icon: \"settings\",\n      subMenuItems: [\n        {\n          text:\n            theme.palette.mode === \"dark\"\n              ? t(\"components.menuItems.lightMode\")\n              : t(\"components.menuItems.darkMode\"),\n          icon: theme.palette.mode === \"dark\" ? \"lightMode\" : \"darkMode\",\n          onClick: colorMode.toggleColorMode,\n        },\n        !isInstalledPwa\n          ? {\n              text: isFullScreen\n                ? t(\"components.menuItems.exitFullscreen\")\n                : t(\"components.menuItems.fullscreen\"),\n              icon: isFullScreen ? \"fullscreenExit\" : \"fullscreen\",\n              onClick: () => setIsFullScreen(!isFullScreen),\n            }\n          : null,\n        !isInstalledPwa\n          ? {\n              text: t(\"components.menuItems.install\"),\n              icon: \"install\",\n              onClick: () => {\n                sendNotification?.(\n                  t(\"components.menuItems.requestingToInstall\"),\n                  { variant: \"info\" },\n                );\n\n                if (deferredPrompt) {\n                  deferredPrompt\n                    ?.prompt()\n                    .then((result) => {\n                      if (result.outcome === \"accepted\") {\n                        console.log(\"Installation accepted\");\n                        sendNotification?.(\n                          t(\"components.menuItems.installPossible\"),\n                          { variant: \"success\" },\n                        );\n                      } else {\n                        console.log(\"Installation dismissed\");\n                        sendNotification?.(\n                          t(\"components.menuItems.installDismissed\"),\n                          { variant: \"warning\" },\n                        );\n                      }\n                    })\n                    .catch((error) => {\n                      console.error(\"Installation prompt error:\", error);\n                      sendNotification?.(\n                        t(\"components.menuItems.installFailed\"),\n                        { variant: \"warning\" },\n                      );\n                    });\n                } else {\n                  console.error(\n                    \"The beforeinstallprompt event has not been fired.\",\n                  );\n                  sendNotification?.(\n                    t(\"components.menuItems.installNotSupported\"),\n                    { variant: \"warning\" },\n                  );\n                }\n              },\n            }\n          : null,\n        {\n          text: t(\"components.menuItems.downloadZip\"),\n          icon: \"download\",\n          onClick: () => window.open(\"/positive-intentions.zip\"),\n        },\n      ],\n    },\n    {\n      text: t(\"components.menuItems.language\"),\n      icon: \"translate\",\n      subMenuItems: [\n        ...languages.map((language) => {\n          return {\n            text: language.name,\n            onClick: () => i18n.changeLanguage(language.id),\n          };\n        }),\n      ],\n    },\n    {\n      text: t(\"components.menuItems.sponsor\"),\n      icon: \"donate\",\n      onClick: () => window.open(\"https://github.com/sponsors/positive-intentions\"),\n    }\n  ];\n\n  return (\n    <Dropdown\n      keepOpen\n      trigger={\n        <IconButton\n          ref={menuItems.ref}\n          size=\"large\"\n          aria-label=\"account of current user\"\n          aria-controls=\"menu-appbar\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          {presetIcons[menuItems.icon ?? \"more\"]}\n        </IconButton>\n      }\n      menu={[\n        ...(menuItems?.items ?? [])\n          .concat(defaultMenuItems)\n          .filter((i) => !!i)\n          .map((item, index) => {\n            return !(item?.subMenuItems?.length > 0) ? (\n              <div>\n                <DropdownMenuItem onClick={item.onClick}>\n                  <ListItemIcon>\n                    {/* <ContentCut fontSize=\"small\" /> */}\n                    {presetIcons[item.icon]}\n                  </ListItemIcon>\n                  <ListItemText>{item.text}</ListItemText>\n                </DropdownMenuItem>\n              </div>\n            ) : (\n              <DropdownNestedMenuItem\n                label={item.text}\n                leftIcon={\n                  <ListItemIcon>\n                    {/* <ContentCut fontSize=\"small\" /> */}\n                    {presetIcons[item.icon]}\n                  </ListItemIcon>\n                }\n                rightAnchored\n                menu={[\n                  ...(item.subMenuItems ?? []).map((subItem, index) => {\n                    return (\n                      !!subItem && (\n                        <DropdownMenuItem onClick={subItem.onClick}>\n                          {subItem.icon && (\n                            <ListItemIcon>\n                              {/* <ContentCut fontSize=\"small\" /> */}\n                              {presetIcons[subItem.icon]}\n                            </ListItemIcon>\n                          )}\n                          <ListItemText>{subItem.text}</ListItemText>\n                        </DropdownMenuItem>\n                      )\n                    );\n                  }),\n                ]}\n              >\n                <ListItemIcon>\n                  {/* <ContentCut fontSize=\"small\" /> */}\n                  {presetIcons[item.icon]}\n                </ListItemIcon>\n                <ListItemText>{item.text}</ListItemText>\n              </DropdownNestedMenuItem>\n            );\n          }),\n      ]}\n    />\n  );\n};\n\nexport default function AppHeader(\n  {\n    disabled,\n    title,\n    leftIcon,\n    rightIcon,\n    backButton,\n    backCount,\n    avatarProps = {},\n    menuProps = {},\n    customButtons = [],\n    hideOnScroll,\n  },\n  ...props\n) {\n  if (disabled) return null;\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [subMenuAnchorEl, setSubMenuAnchorEl] = React.useState(null);\n  const menuRef = React.useRef(null);\n  const subMenuRef = React.useRef(null);\n  const navigate = useNavigate();\n\n  const handleMenu = (event) => {\n    setAnchorEl(menuRef);\n  };\n\n  const handleSubMenuMenu = (event) => {\n    setSubMenuAnchorEl(subMenuRef);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSubMenuClose = () => {\n    setSubMenuAnchorEl(null);\n  };\n\n  const [subMenuOpen, setSubMenuOpen] = React.useState(false);\n\n  const AppBarRender = () => (\n    <AppBar>\n      <Toolbar>\n        {backButton && (\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            // sx={{ mr: 2 }}\n            onClick={() => {\n              if (typeof backButton === 'function') backButton();\n              navigate(typeof backButton === \"string\" ? backButton : -1)\n            }}\n          >\n            <Badge color=\"info\" badgeContent={backCount}>\n              {presetIcons.arrowBack}\n            </Badge>\n          </IconButton>\n        )}\n\n        {Object.keys(avatarProps).length > 0 && (\n          <StyledBadge\n            className={avatarProps?.isOnline ? \"green\" : \"amber\"}\n            overlap=\"circular\"\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n            variant=\"dot\"\n            invisible={!avatarProps?.isOnline && !avatarProps?.isSomeOnline}\n            sx={{ mr: 2 }}\n          >\n            <Avatar\n              src={avatarProps?.src ?? \"\"}\n              alt={avatarProps?.alt ?? \"-\"}\n            />\n          </StyledBadge>\n        )}\n\n        <Typography\n          variant=\"h6\"\n          component=\"div\"\n          sx={{\n            flexGrow: 1,\n            overflow: \"hidden\",\n            whiteSpace: \"nowrap\",\n            textOverflow: \"ellipsis\",\n          }}\n        >\n          {title}\n        </Typography>\n\n        {customButtons.map((button, index) => {\n          return (\n            <IconButton\n              key={index}\n              ref={menuRef}\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={button.onClick}\n              color=\"inherit\"\n            >\n              {presetIcons[button.icon]}\n            </IconButton>\n          );\n        })}\n\n        <CustomDropdown menuItems={menuProps} />\n      </Toolbar>\n    </AppBar>\n  );\n\n  return (\n    <>\n      <CssBaseline />\n      {hideOnScroll ? (\n        <HideOnScroll {...props}>\n          <AppBarRender />\n        </HideOnScroll>\n      ) : (\n        <AppBarRender />\n      )}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Slide from \"@mui/material/Slide\";\nimport AppHeader from \"../../molecules/app-header/AppHeader\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport SpeedDial from \"@mui/material/SpeedDial\";\nimport SpeedDialIcon from \"@mui/material/SpeedDialIcon\";\nimport SpeedDialAction from \"@mui/material/SpeedDialAction\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopyOutlined\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ShareIcon from \"@mui/icons-material/Share\";\n\nconst presetIcons = {\n  add: <AddIcon />,\n};\n\nconst actions = [\n  { icon: <FileCopyIcon />, name: \"Copy\" },\n  { icon: <SaveIcon />, name: \"Save\" },\n  { icon: <PrintIcon />, name: \"Print\" },\n  { icon: <ShareIcon />, name: \"Share\" },\n];\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n  });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  // root: {\n  //     flexGrow: 1,\n  //     // height: \"100vh\",\n  //     // overflow: 'auto',\n  //     paddingTop: `${theme.spacing(8)}`\n  // },\n  // appBar: {\n  //     height: theme.spacing(8),\n  // },\n  // form: {\n  //     padding: theme.spacing(3),\n  // },\n  // title: {\n  //     fontWeight: \"bold\",\n  //     textAlign: \"left\",\n  //     display: \"flex\",\n  //     alignItems: \"center\",\n  //     height: \"100%\",\n  //     padding: `0 ${theme.spacing(3)}`,\n  // },\n  fab: {\n    position: \"fixed !important\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst defaultLightBackgroundImage = \"/backgrounds/light-random.png\";\nconst defaultDarkBackgroundImage = \"/backgrounds/dark-random.png\";\n\nexport default function PageContainer(props) {\n  const {\n    children,\n    headerProps = {},\n    fabProps = {},\n    speedDialProps = {},\n    backgroundImage,\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const defaultBackgroundImage =\n    theme.palette.mode === \"dark\"\n      ? defaultDarkBackgroundImage\n      : defaultLightBackgroundImage;\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      {/* <HideOnScroll {...props}> */}\n      <AppHeader {...headerProps} />\n      {/* <AppBar>\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\">\n              Scroll to hide App bar\n            </Typography>\n          </Toolbar>\n        </AppBar> */}\n      {/* </HideOnScroll> */}\n      <Toolbar />\n      {backgroundImage !== \"\" && (\n        <Box\n          sx={{\n            flexGrow: 1,\n            backgroundImage: `url(${backgroundImage ?? defaultBackgroundImage})`,\n            position: \"fixed\",\n            height: \"100%\",\n            width: \"100%\",\n            opacity: 0.05,\n            zIndex: 0,\n          }}\n        ></Box>\n      )}\n      <Container\n        disableGutters\n        className=\"page-container\"\n        style={{ flexGrow: 1 }}\n      >\n        {children}\n      </Container>\n\n      {Object.keys(fabProps).length > 0 && (\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          className={classes.fab}\n          onClick={fabProps?.onClick}\n        >\n          {presetIcons[fabProps?.icon]}\n        </Fab>\n      )}\n\n      {Object.keys(speedDialProps).length > 0 && (\n        <SpeedDial\n          ariaLabel=\"SpeedDial basic example\"\n          sx={{ position: \"absolute\", bottom: 16, right: 16 }}\n          icon={speedDialProps.icon ?? <SpeedDialIcon />}\n        >\n          {speedDialProps.actions.map((action) => (\n            <SpeedDialAction\n              key={action.name}\n              icon={action.icon}\n              tooltipTitle={action.name}\n              onClick={action.onClick}\n            />\n          ))}\n        </SpeedDial>\n      )}\n    </React.Fragment>\n  );\n}\n","//disable linting file\n/* eslint-disable */\n\n// Check if BigInt is not defined\nif (typeof window.BigInt === \"undefined\") {\n  window.BigInt = (function () {\n    function BigInt(value) {\n      if (!(this instanceof window.BigInt)) {\n        return new window.BigInt(value);\n      }\n\n      if (typeof value !== \"string\" || !/^-?\\d+$/.test(value)) {\n        throw new TypeError(\"Invalid BigInt value\");\n      }\n\n      // Remove leading zeros, if any, and handle '-0' case\n      this.value = value.replace(/^0+|(?<=^-)0+/g, \"\") || \"0\";\n      if (this.value === \"-0\") this.value = \"0\";\n    }\n\n    window.BigInt.prototype.add = function (other) {\n      if (!(other instanceof window.BigInt)) {\n        throw new TypeError(\"Argument must be of type BigInt\");\n      }\n\n      let carry = 0;\n      let result = \"\";\n      const maxLength = Math.max(this.value.length, other.value.length);\n\n      const isThisNegative = this.value[0] === \"-\";\n      const isOtherNegative = other.value[0] === \"-\";\n\n      // If both are negative, negate the result of the addition\n      if (isThisNegative && isOtherNegative) {\n        return new window.BigInt(\n          \"-\" + this.negate().add(other.negate()).toString(),\n        );\n      }\n\n      // If one of them is negative, perform subtraction\n      if (isThisNegative) {\n        return other.subtract(this.negate());\n      }\n      if (isOtherNegative) {\n        return this.subtract(other.negate());\n      }\n\n      for (let i = 0; i < maxLength || carry; i++) {\n        let sum = carry;\n        if (i < this.value.length) {\n          sum += parseInt(this.value.charAt(this.value.length - 1 - i), 10);\n        }\n        if (i < other.value.length) {\n          sum += parseInt(other.value.charAt(other.value.length - 1 - i), 10);\n        }\n\n        result = (sum % 10) + result;\n        carry = Math.floor(sum / 10);\n      }\n\n      return new window.BigInt(result);\n    };\n\n    // Placeholder for subtraction (not fully implemented)\n    window.BigInt.prototype.subtract = function (other) {\n      // This is a placeholder; actual subtraction logic will be more complex.\n      // For simplicity, assume the current number is larger than the 'other'.\n      return new window.BigInt(\"0\");\n    };\n\n    // Helper method to negate a BigInt\n    window.BigInt.prototype.negate = function () {\n      if (this.value[0] === \"-\") {\n        return new BigInt(this.value.substring(1));\n      }\n      return new BigInt(\"-\" + this.value);\n    };\n\n    window.BigInt.prototype.toString = function () {\n      return this.value;\n    };\n\n    return window.BigInt;\n  })();\n}\n\n// Usage\n// const a = BigInt('12345');\n// const b = BigInt('67890');\n// const c = a.add(b);\n// console.log(c.toString()); // 80135\n\n// function SHA3_512(input):\n//     input = applyPadding(input)    // Pre-processing step\n//     state = initializeState()     // State Initialization\n\n//     // Keccak Rounds\n//     for round in 1 to 24:\n//         state = applyTheta(state)\n//         state = applyRho(state)\n//         state = applyPi(state)\n//         state = applyChi(state)\n//         state = applyIota(state, round)\n\n//     output = generateOutput(state)  // Output Generation\n//     return output\n\nfunction applyPadding(message) {\n  const r = 576; // Rate for SHA3-512\n\n  // Convert the message to a binary representation\n  let binaryMessage = \"\";\n  for (let i = 0; i < message.length; i++) {\n    let bin = message.charCodeAt(i).toString(2);\n    binaryMessage += (\"00000000\" + bin).slice(-8); // Pad each byte to 8 bits\n  }\n\n  // Append the initial \"1\"\n  binaryMessage += \"1\";\n\n  // Add \"0\" bits until length % r = r-1\n  while (binaryMessage.length % r !== r - 1) {\n    binaryMessage += \"0\";\n  }\n\n  // Append the final \"1\"\n  binaryMessage += \"1\";\n\n  return binaryMessage;\n}\n\n// // Example usage:\n// let paddedMessage = applyPadding(\"YourInputHere\");\n// console.log(paddedMessage);\n\nfunction initializeState() {\n  const w = 64; // word length in bits for SHA3-512\n  const state = [];\n\n  for (let x = 0; x < 5; x++) {\n    state[x] = [];\n    for (let y = 0; y < 5; y++) {\n      state[x][y] = window.BigInt(0); // Using window.BigInt to handle 64-bit values in JavaScript\n    }\n  }\n  return state;\n}\n\n// // Example usage:\n// let state = initializeState();\n// console.log(state);\n\nfunction applyTheta(state) {\n  const w = 64; // word length in bits for SHA3-512\n  let C = Array(5).fill(window.BigInt(0));\n  let D = Array(5).fill(window.BigInt(0));\n\n  // Step 1: For each x, compute C[x]\n  for (let x = 0; x < 5; x++) {\n    C[x] = state[x][0];\n    for (let y = 1; y < 5; y++) {\n      C[x] ^= state[x][y];\n    }\n  }\n\n  // Step 2: Compute D[x]\n  for (let x = 0; x < 5; x++) {\n    D[x] =\n      C[(x + 4) % 5] ^\n      ((C[(x + 1) % 5] << 1n) | (C[(x + 1) % 5] >> window.BigInt(w - 1))); // Left rotation by 1, using BigInt\n  }\n\n  // Step 3: For each x, y, XOR the lane at x, y with D[x]\n  for (let x = 0; x < 5; x++) {\n    for (let y = 0; y < 5; y++) {\n      state[x][y] ^= D[x];\n    }\n  }\n\n  return state;\n}\n\n// // Example usage:\n// let state = initializeState();\n// state = applyTheta(state);\n// console.log(state);\n\nfunction applyRho(state) {\n  const rotationOffsets = [\n    [0, 36, 3, 41, 18],\n    [1, 44, 10, 45, 2],\n    [62, 6, 43, 15, 61],\n    [28, 55, 25, 21, 56],\n    [27, 20, 39, 8, 14],\n  ];\n\n  for (let x = 0; x < 5; x++) {\n    for (let y = 0; y < 5; y++) {\n      const offset = window.BigInt(rotationOffsets[x][y]); // Convert to BigInt\n      state[x][y] = (state[x][y] << offset) | (state[x][y] >> (64n - offset)); // Use BigInt for 64\n    }\n  }\n\n  return state;\n}\n\n// // Example usage:\n// let state = initializeState();\n// state = applyRho(state);\n// console.log(state);\n\nfunction applyPi(state) {\n  const newState = Array(5)\n    .fill(0)\n    .map(() => Array(5).fill(window.BigInt(0))); // Initialize a new 5x5 state with zeros\n\n  for (let x = 0; x < 5; x++) {\n    for (let y = 0; y < 5; y++) {\n      const newX = y;\n      const newY = (2 * x + 3 * y) % 5;\n      newState[newX][newY] = state[x][y];\n    }\n  }\n\n  return newState;\n}\n\n// Example usage:\n// let state = initializeState();\n// state = applyPi(state);\n// console.log(state);\n\nfunction applyChi(state) {\n  const newState = Array(5)\n    .fill(0)\n    .map(() => Array(5).fill(window.BigInt(0))); // Initialize a new 5x5 state with zeros\n\n  for (let x = 0; x < 5; x++) {\n    for (let y = 0; y < 5; y++) {\n      const nextLane = state[(x + 1) % 5][y];\n      const twoPlacesAheadLane = state[(x + 2) % 5][y];\n      newState[x][y] = state[x][y] ^ (~nextLane & twoPlacesAheadLane);\n    }\n  }\n\n  return newState;\n}\n\n// // Example usage:\n// let state = initializeState();\n// state = applyChi(state);\n// console.log(state);\n\nconst ROUND_CONSTANTS = [\n  // window.BigInt(0x0000000000000001),\n  // window.BigInt(0x0000000000008082),\n  // window.BigInt(0x800000000000808a),\n  // window.BigInt(0x8000000080008000),\n  // window.BigInt(0x000000000000808b),\n  // window.BigInt(0x0000000080000001),\n  // window.BigInt(0x8000000080008081),\n  // window.BigInt(0x8000000000008009),\n  // window.BigInt(0x000000000000008a),\n  // window.BigInt(0x0000000000000088),\n  // window.BigInt(0x0000000080008009),\n  // window.BigInt(0x000000008000000a),\n  // window.BigInt(0x000000008000808b),\n  // window.BigInt(0x800000000000008b),\n  // window.BigInt(0x8000000000008089),\n  // window.BigInt(0x8000000000008003),\n  // window.BigInt(0x8000000000008002),\n  // window.BigInt(0x8000000000000080),\n  // window.BigInt(0x000000000000800a),\n  // window.BigInt(0x800000008000000a),\n  // window.BigInt(0x8000000080008081),\n  // window.BigInt(0x8000000000008080),\n  // window.BigInt(0x0000000080000001),\n  // window.BigInt(0x8000000080008008),\n];\n\nfunction applyIota(state, roundNumber) {\n  state[0][0] = state[0][0] ^ ROUND_CONSTANTS[roundNumber];\n  return state;\n}\n\n// // Example usage:\n// let state = initializeState();\n// const roundNumber = 0; // This is just an example; typically you'd be iterating through rounds in the overall Keccak function.\n// state = applyIota(state, roundNumber);\n// console.log(state);\n\nfunction generateOutput(state, outputLength) {\n  // Assuming state is a 2D array and each lane is a window.BigInt representing 64 bits.\n  // Convert state to a flat binary string.\n  let output = \"\";\n  for (let y = 0; y < 5; y++) {\n    for (let x = 0; x < 5; x++) {\n      const lane = state[x][y];\n      const binaryLane = lane.toString(2).padStart(64, \"0\");\n      output += binaryLane;\n    }\n  }\n\n  // Trim or pad the binary string to the desired length.\n  if (output.length > outputLength) {\n    output = output.substring(0, outputLength);\n  } else {\n    while (output.length < outputLength) {\n      // Here, we would typically reapply the Keccak permutation and continue squeezing.\n      // But for simplicity, we're padding with zeros.\n      output += \"0\";\n    }\n  }\n\n  return output;\n}\n\n// // Example usage:\n// let state = initializeState(); // Assuming state has undergone all transformations\n// const desiredOutputLength = 256; // 256 bits as an example\n// const result = generateOutput(state, desiredOutputLength);\n// console.log(result);\n\nfunction absorbInput(state, block) {\n  const w = 64; // word length in bits for SHA3-512\n  let x = 0,\n    y = 0;\n\n  for (let j = 0; j < block.length; j += w) {\n    const segment = block.slice(j, j + w);\n    state[x][y] ^= window.BigInt(parseInt(segment, 2));\n\n    // update x and y values for next cell\n    y++;\n    if (y >= 5) {\n      y = 0;\n      x++;\n    }\n  }\n\n  return state;\n}\n\nfunction keccakF(state) {\n  for (let i = 0; i < 24; i++) {\n    // 24 rounds in Keccak\n    state = applyTheta(state);\n    state = applyRho(state);\n    state = applyPi(state);\n    state = applyChi(state);\n    state = applyIota(state, i);\n  }\n  return state;\n}\n\nfunction calculateSHA3_512(input) {\n  let paddedInput = applyPadding(input);\n  let state = initializeState();\n\n  // Absorption phase\n  for (let i = 0; i < paddedInput.length; i += 576) {\n    let block = paddedInput.substring(i, i + 576);\n    state = absorbInput(state, block);\n    state = keccakF(state);\n  }\n\n  // Squeezing phase (just one iteration for SHA3-512)\n  let output = generateOutput(state, 1024);\n  return binaryToHex(output);\n}\n\nfunction xorStateWithBlock(state, block) {\n  for (let y = 0; y < 5; y++) {\n    for (let x = 0; x < 5; x++) {\n      if (y * 64 + x * 320 < block.length) {\n        let chunk = block.substring(y * 64 + x * 320, y * 64 + x * 320 + 64);\n        let value = window.BigInt(\"0b\" + chunk);\n        state[x][y] ^= value;\n      }\n    }\n  }\n  return state;\n}\n\n// The functions applyPadding, initializeState, absorbInput, applyTheta, applyRho,\n// applyPi, applyChi, applyIota, and generateOutput should be defined based on our prior discussions.\n\nfunction binaryToHex(binaryString) {\n  let hexString = \"\";\n  for (let i = 0; i < binaryString.length; i += 4) {\n    const byte = binaryString.substr(i, 4);\n    const hex = parseInt(byte, 2).toString(16);\n    hexString += hex;\n  }\n  return hexString;\n}\n\n// console.log({\n//     newSha3_5121: calculateSHA3_512('Hello, World!'),\n//     newSha3_5122: calculateSHA3_512('Hello, World!!'),\n//     newSha3_5123: calculateSHA3_512('Hello, World!'),\n//     newSha3_5124: calculateSHA3_512('Hallo, World!'),\n//     newSha3_5125: calculateSHA3_512('Hello, World!'),\n//     newSha3_5126: calculateSHA3_512('Hello, World!'),\n//     newSha3_5127: calculateSHA3_512('Hello, World!'),\n//     newSha3_5128: calculateSHA3_512('Hello, World!'),\n//     newSha3_5129: calculateSHA3_512('Hello, World!'),\n// })\n\nexport default calculateSHA3_512;\n","import { useMemo } from \"react\";\nimport calculateSHA3_512 from \"../utils/calculateSha3512\";\nimport calculateSha256 from \"../utils/calculateSha256\";\nimport { randomString } from \"../cryptography/Cryptography\";\n\nconst calculateHash = calculateSha256;\n// function calculateSHA256(str) {\n//     const charToCode = (char) => char.charCodeAt(0);\n//     const leftRotate = (value, shift) => (value >>> shift) | (value << (32 - shift));\n//     const rightRotate = (value, shift) => (value << shift) | (value >>> (32 - shift));\n//     const toHex = (value) => value.toString(16).padStart(8, '0');\n\n//     const addUnsigned = (x, y) => {\n//         const MAX_UINT32 = Math.pow(2, 32) - 1;\n//         return (x & MAX_UINT32) + (y & MAX_UINT32);\n//       };\n\n//     const wordsToBlocks = (words) => {\n//         const blocks = [];\n//         for (let i = 0; i < words.length; i += 16) {\n//             blocks.push(words.slice(i, i + 16));\n//         }\n//         return blocks;\n//     };\n\n//     const preprocessMessage = (message) => {\n//         const bitLength = message.length * 8;\n//         const paddingLength = message.length % 64 < 56 ? 56 - (message.length % 64) : 120 - (message.length % 64);\n\n//         const paddedMessage = new Uint8Array(message.length + paddingLength + 8);\n//         paddedMessage.set(message);\n//         paddedMessage[message.length] = 0x80;\n//         paddedMessage.set(new Uint8Array(bitLengthToArray(bitLength)), paddedMessage.length - 8);\n\n//         return paddedMessage;\n//     };\n\n//     const bitLengthToArray = (bitLength) => {\n//         const arr = new Uint8Array(8);\n//         for (let i = 7; i >= 0; i--) {\n//             arr[i] = bitLength & 0xff;\n//             bitLength >>>= 8;\n//         }\n//         return arr;\n//     };\n\n//     const computeSHA256 = (message) => {\n//         const K = new Uint32Array([\n//             0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n//             0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n//             0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n//             0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n//             0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n//             0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n//             0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n//             0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n//             0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n//             0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n//             0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n//             0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n//             0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n//             0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n//             0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n//             0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n//         ]);\n\n//         const blocks = wordsToBlocks(new Uint32Array(message.buffer));\n//         const hash = new Uint32Array([\n//             0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n//             0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n//         ]);\n\n//         for (const block of blocks) {\n//             const schedule = new Uint32Array(64);\n//             schedule.set(block);\n\n//             for (let t = 16; t < 64; t++) {\n//                 const s0 = rightRotate(schedule[t - 15], 7) ^ rightRotate(schedule[t - 15], 18) ^ (schedule[t - 15] >>> 3);\n//                 const s1 = rightRotate(schedule[t - 2], 17) ^ rightRotate(schedule[t - 2], 19) ^ (schedule[t - 2] >>> 10);\n//                 schedule[t] = addUnsigned(addUnsigned(addUnsigned(schedule[t - 16], s0), schedule[t - 7]), s1);\n//             }\n\n//             let a = hash[0];\n//             let b = hash[1];\n//             let c = hash[2];\n//             let d = hash[3];\n//             let e = hash[4];\n//             let f = hash[5];\n//             let g = hash[6];\n//             let h = hash[7];\n\n//             for (let t = 0; t < 64; t++) {\n//                 const S1 = rightRotate(e, 6) ^ rightRotate(e, 11) ^ rightRotate(e, 25);\n//                 const ch = (e & f) ^ (~e & g);\n//                 const temp1 = addUnsigned(addUnsigned(addUnsigned(addUnsigned(h, S1), ch), K[t]), schedule[t]);\n//                 const S0 = rightRotate(a, 2) ^ rightRotate(a, 13) ^ rightRotate(a, 22);\n//                 const maj = (a & b) ^ (a & c) ^ (b & c);\n//                 const temp2 = addUnsigned(S0, maj);\n\n//                 h = g;\n//                 g = f;\n//                 f = e;\n//                 e = addUnsigned(d, temp1);\n//                 d = c;\n//                 c = b;\n//                 b = a;\n//                 a = addUnsigned(temp1, temp2);\n//             }\n\n//             hash[0] = addUnsigned(hash[0], a);\n//             hash[1] = addUnsigned(hash[1], b);\n//             hash[2] = addUnsigned(hash[2], c);\n//             hash[3] = addUnsigned(hash[3], d);\n//             hash[4] = addUnsigned(hash[4], e);\n//             hash[5] = addUnsigned(hash[5], f);\n//             hash[6] = addUnsigned(hash[6], g);\n//             hash[7] = addUnsigned(hash[7], h);\n//         }\n\n//         const hashArray = new Uint8Array(hash.buffer);\n//         const hashHex = Array.from(hashArray, (byte) => byte.toString(16).padStart(2, '0')).join('');\n\n//         return hashHex;\n//     };\n\n//     const messageBytes = new TextEncoder().encode(str);\n//     const paddedMessage = preprocessMessage(messageBytes);\n//     const sha256Hash = computeSHA256(paddedMessage);\n\n//     return sha256Hash;\n// }\n\nclass Blockchain {\n  constructor({ chain, compiler, storage, onNewBlock, onNewChain }) {\n    this.chain = chain;\n    this.compiler = compiler;\n    this.pendingBlocks = [];\n    this.pendingStorage = {};\n\n    this.compile = () => {\n      let state = {};\n      const resolveStorage = (payload = {}) => {\n        const { type } = payload;\n        if (\n          [\n            \"text\",\n            \"image\",\n            \"videos\",\n            \"file\",\n            \"link\",\n            \"location\",\n            \"audio\",\n          ].includes(type)\n        ) {\n          return {\n            ...payload,\n            sha: payload.payload,\n            payload:\n              type === \"file\"\n                ? { ...storage[payload.payload], data: \"\" }\n                : storage[payload.payload],\n          };\n        }\n\n        if ([\"reply\"].includes(type)) {\n          return {\n            ...payload,\n            payload: state.messages.find(\n              (message) => message.id === payload.payload,\n            ),\n          };\n        }\n\n        return payload;\n      };\n\n      (this.chain ?? []).forEach((block) => {\n        state = this.compiler(resolveStorage(block.payload), state);\n      });\n\n      return state;\n    };\n\n    this.addBlocks = (blocks, append) => {\n      blocks.forEach((block) => {\n        this.addBlock(block, append);\n      });\n    };\n\n    this.addBlock = (block, append) => {\n      // hash of last block in chain\n      const newBlock = {\n        id: calculateSha256(\n          JSON.stringify({\n            ...block.payload,\n            previousBlockHash: this.chain\n              ? this.chain[this.chain.length - 1]?.id\n              : randomString(),\n          }),\n        ),\n        payload: block.payload?.id ? block.payload : block,\n      };\n      if (\n        [\n          \"text\",\n          \"image\",\n          \"videos\",\n          \"file\",\n          \"link\",\n          \"location\",\n          \"audio\",\n        ].includes(block.type)\n      ) {\n        const payloadHash = append\n          ? block.payload\n          : calculateSha256(JSON.stringify(block.payload));\n        this.pendingStorage[payloadHash] = block.payload;\n        newBlock.payload.payload = payloadHash;\n      }\n      this.chain = [...(this.chain || []), newBlock];\n      this.pendingBlocks = [...this.pendingBlocks, newBlock];\n    };\n\n    this.getUpdate = () => {\n      const pendingBlocks = [...this.pendingBlocks];\n      const pendingStorage = { ...this.pendingStorage };\n      this.pendingBlocks = [];\n      this.pendingStorage = {};\n      return { pendingBlocks, pendingStorage };\n    };\n\n    this.mergeChain = (chain) => {\n      const filteredChain = chain.filter((block) => {\n        const blockId = block.payload.id;\n        return !this.chain.find((b) => b.payload.id === blockId);\n      });\n      const newChain = [...this.chain, ...filteredChain];\n\n      const sortedChain = newChain.sort(\n        (a, b) => new Date(a.payload.timestamp) - new Date(b.payload.timestamp),\n      );\n\n      // calculate blockhashes for eachblock based on the hash of the previous block\n      const chainWithUpdatedHashes = sortedChain.map((block, index) => {\n        const previousBlock = sortedChain[index - 1];\n        const previousBlockHash = previousBlock ? previousBlock.id : \"\";\n        const blockHash = calculateSha256(\n          JSON.stringify({ ...block.payload, previousBlockHash }),\n        );\n        return { ...block, id: blockHash };\n      });\n\n      this.chain = chainWithUpdatedHashes;\n    };\n  }\n}\n\nexport const useBlockchain = ({\n  blockchain,\n  blockchains = [],\n  compiler,\n  dispatch,\n}) => {\n  const blockchainInstance = useMemo(\n    () =>\n      new Blockchain({\n        compiler,\n        chain: blockchain?.chain ?? [],\n        storage: blockchain?.storage ?? {},\n      }),\n    [blockchain?.chain, blockchain?.storage],\n  );\n  const compiledBlockchain = useMemo(\n    () => blockchainInstance.compile(),\n    [blockchainInstance],\n  );\n  const addBlocks = (blocks, append) => {\n    if (typeof blocks.length === \"number\") {\n      blockchainInstance.addBlocks(blocks, append);\n    } else {\n      blockchainInstance.addBlock(blocks, append);\n    }\n    const { pendingBlocks, pendingStorage } = blockchainInstance.getUpdate();\n    dispatch({ blocks: pendingBlocks, storage: pendingStorage });\n    return {\n      pendingBlocks,\n      pendingStorage,\n    };\n  };\n\n  const compiledBlockchains = blockchains.map((blockchain) => {\n    const blockchainInstance = new Blockchain({\n      compiler,\n      chain: blockchain?.chain ?? [],\n      storage: blockchain?.storage ?? {},\n    });\n    const addBlocks = (blocks, append) => {\n      if (typeof blocks.length === \"number\") {\n        blockchainInstance.addBlocks(blocks, append);\n      } else {\n        blockchainInstance.addBlock(blocks, append);\n      }\n      const { pendingBlocks, pendingStorage } = blockchainInstance.getUpdate();\n      dispatch({ blocks: pendingBlocks, storage: pendingStorage });\n      return {\n        pendingBlocks,\n        pendingStorage,\n      };\n    };\n    const compiledBlockchain = blockchainInstance?.compile?.();\n    return { ...compiledBlockchain, addBlocks };\n  });\n\n  return { compiledBlockchain, compiledBlockchains, addBlocks };\n};\n\nexport default Blockchain;\n\n// let mutationBlocksOld = [\n//     {\n//         id: 'blockId1',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'addUser',\n//         payload: 'userId',\n//     },\n//     {\n//         id: 'blockId2',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'addUser',\n//         payload: 'userId2',\n//     },\n//     {\n//         id: 'blockId3',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'setPodName',\n//         payload: 'New Pod Name',\n//     },\n//     {\n//         id: 'blockId4',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'createMessage',\n//     },\n//     {\n//         id: 'blockId5',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'text',\n//         payload: 'contentHash',\n//     },\n//     {\n//         id: 'blockId6',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'image',\n//         payload: 'imageHash',\n//     },\n//     {\n//         id: 'blockId7',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'link',\n//         payload: 'linkHash',\n//     },\n//     {\n//         id: 'blockId8',\n//         from: 'userId2',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'recieved',\n//     },\n//     {\n//         id: 'blockId9',\n//         from: 'userId2',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'read',\n//     },\n// ]\n\n// let mutationBlocks = mutationBlocksOld.map((block) => ({\n//     id: 'some Id',\n//     payload: block,\n// }));\n\n// let messageBlockchain = new Blockchain({\n//     chain: mutationBlocks,\n//     parser: (block, state) => {\n//         const { type, payload, messageId, from, timestamp } = block;\n\n//         switch (type) {\n//             case 'addUser':\n//                 state.users.push(payload);\n//                 return state;\n//             case 'removeUser':\n//                 state.users = state.users.filter((u) => u !== payload);\n//                 return state;\n//             case 'setPodName':\n//                 state.name = payload;\n//                 return state;\n//             case 'setPodavatar':\n//                 state.avatar = payload;\n//                 return state;\n//             case 'createMessage':\n//                 state.messages.push({\n//                     id: messageId,\n//                     from: from,\n//                     timestamp: { created: timestamp },\n//                     reciept: { recievedBy: [], readBy: [] },\n//                     votes: { upvotes: [], downvotes: [] },\n//                     payload: { content: '', image: [], video: [], file: [], link: [] },\n//                 });\n//                 return state;\n//             case 'text':\n//                 state.messages = state.messages.map((m) =>\n//                     m.id === messageId ? { ...m, payload: { ...m.payload, content: payload } } : m\n//                 );\n//                 return state;\n//             case 'image':\n//                 state.messages = state.messages.map((m) =>\n//                     m.id === messageId ? { ...m, payload: { ...m.payload, image: [...m.payload.image, payload] } } : m\n//                 );\n//                 return state;\n//             case 'video':\n//                 state.messages = state.messages.map((m) =>\n//                     m.id === messageId ? { ...m, payload: { ...m.payload, video: [...m.payload.video, payload] } } : m\n//                 );\n//                 return state;\n//             case 'file':\n//                 state.messages = state.messages.map((m) =>\n//                     m.id === messageId ? { ...m, payload: { ...m.payload, file: [...m.payload.file, payload] } } : m\n//                 );\n//                 return state;\n//             case 'link':\n//                 state.messages = state.messages.map((m) =>\n//                     m.id === messageId ? { ...m, payload: { ...m.payload, link: [...m.payload.link, payload] } } : m\n//                 );\n//                 return state;\n//             case 'reply':\n//                 state.messages = state.messages.map((m) =>\n//                     m.id === messageId ? { ...m, payload: { ...m.payload, replyTo: payload } } : m\n//                 );\n//                 return state;\n//             case 'recieved':\n//                 state.messages = state.messages.map((m) =>\n//                     m.id === messageId\n//                         ? { ...m, reciept: { ...m.reciept, recievedBy: [...m.reciept.recievedBy, { userId: from, timestamp: timestamp }] } }\n//                         : m\n//                 );\n//                 return state;\n//             case 'read':\n//                 state.messages = state.messages.map((m) =>\n//                     m.id === messageId\n//                         ? { ...m, reciept: { ...m.reciept, readBy: [...m.reciept.readBy, { userId: from, timestamp: timestamp }] } }\n//                         : m\n//                 );\n//                 return state;\n//             case 'delete':\n//                 state.messages = state.messages.filter((m) => m.id !== messageId);\n//                 return state;\n//             case 'upvote':\n//                 state.votes.upvotes.push(from);\n//                 return state;\n//             case 'downvote':\n//                 state.votes.downvotes.push(from);\n//                 return state;\n//             default:\n//                 return state;\n//         }\n//     },\n//     onNewBlock: (block) => {\n//         // addBlockToPodDispatch(block)\n//     },\n//     onNewChain: (chain) => {\n//         // replaceChainOnPodDispatch(chain)\n//     },\n// })\n\n// messageBlockchain.addBlock(\n//     {\n//         id: 'blockId10',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'addUser',\n//         payload: 'userId3',\n//     },\n// )\n\n// let podData = messageBlockchain.getState();\n\n// console.log({ podData, chain: messageBlockchain.chain })\n\n// let mutationBlocksOldRemote = [\n//     {\n//         id: 'blockId1',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'addUser',\n//         payload: 'userId',\n//     },\n//     {\n//         id: 'blockId2',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'addUser',\n//         payload: 'userId2',\n//     },\n//     {\n//         id: 'blockId3',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'setPodName',\n//         payload: 'New Pod Name',\n//     },\n//     {\n//         id: 'blockId4',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'createMessage',\n//     },\n//     {\n//         id: 'blockId5',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'text',\n//         payload: 'contentHash',\n//     },\n//     {\n//         id: 'blockId6',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'image',\n//         payload: 'imageHash',\n//     },\n//     {\n//         id: 'blockId7',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'link',\n//         payload: 'linkHash',\n//     },\n//     {\n//         id: 'blockId8',\n//         from: 'userId2',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'recieved',\n//     },\n//     {\n//         id: 'blockId9',\n//         from: 'userId2',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'read',\n//     },\n//     {\n//         id: 'blockId41',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'createMessage',\n//     },\n//     {\n//         id: 'blockId52',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'text',\n//         payload: 'contentHash',\n//     },\n// ]\n\n// let mutationBlocksRemote = mutationBlocksOldRemote.map((block) => ({\n//     id: 'some Id',\n//     payload: block,\n// }));\n\n// messageBlockchain.mergeChain(mutationBlocksRemote);\n// podData = messageBlockchain.getState();\n\n// console.log({ podData, chain: messageBlockchain.chain })\n\n// messageBlockchain.addBlock(\n//     {\n//         id: 'blockId10',\n//         from: 'userId',\n//         messageId: 'messageId',\n//         timestamp: '2020-01-01 00:00:00',\n//         type: 'addUser',\n//         payload: 'userId4',\n//     },\n// )\n\n// podData = messageBlockchain.getState();\n\n// console.log({ podData, chain: messageBlockchain.chain })\n","import { randomString } from \"../../cryptography/Cryptography\";\n\nexport function encodeEmojisToUnicode(inputString = \"\") {\n  return inputString.replace(\n    /[\\u007F-\\uFFFF]/g,\n    (match) => \"\\\\u\" + match.charCodeAt(0).toString(16).padStart(4, \"0\"),\n  );\n}\n\nfunction decodeUnicodeToEmojis(encodedString = \"\") {\n  return encodedString.replace(/\\\\u([\\dA-Fa-f]{4})/g, (match, group1) =>\n    String.fromCharCode(parseInt(group1, 16)),\n  );\n}\n\nexport const compiler = (block, propState) => {\n  const state = Object.keys(propState).length\n    ? propState\n    : {\n        id: \"\",\n        users: [],\n        name: \"\",\n        avatar: \"\",\n        messages: [],\n      };\n  if (!block) return state;\n  const { type, payload, messageId, from, timestamp, sha } = block;\n\n  switch (type) {\n    case \"addUser\":\n      state.users.push(payload);\n      return state;\n    case \"removeUser\":\n      state.users = state.users.filter((u) => u !== payload);\n      return state;\n    case \"setPodId\":\n      state.id = payload;\n    case \"setPodName\":\n      state.name = payload;\n      return state;\n    case \"setClone\":\n      state.clone = payload;\n      return state;\n    case \"setPodavatar\":\n      state.avatar = payload;\n      return state;\n    case \"createMessage\":\n      const newMessage = {\n        id: messageId,\n        from: from,\n        timestamp: { created: timestamp },\n        reciept: { recievedBy: [], readBy: [] },\n        votes: { upvotes: [], downvotes: [] },\n        payload: {\n          content: \"\",\n          image: [],\n          video: [],\n          file: [],\n          link: [],\n          reply: [],\n          location: [],\n          audio: [],\n        },\n      };\n      state.messages = [...state.messages, newMessage];\n      return state;\n    case \"text\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? {\n              ...m,\n              payload: {\n                ...m.payload,\n                content: decodeUnicodeToEmojis(payload),\n              },\n            }\n          : m,\n      );\n      return state;\n    case \"image\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? { ...m, payload: { ...m.payload, image: payload, sha } }\n          : m,\n      );\n      return state;\n    case \"video\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? { ...m, payload: { ...m.payload, video: payload, sha } }\n          : m,\n      );\n      return state;\n    case \"file\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? { ...m, payload: { ...m.payload, file: payload, sha } }\n          : m,\n      );\n      return state;\n    case \"location\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? { ...m, payload: { ...m.payload, location: payload } }\n          : m,\n      );\n      return state;\n    case \"audio\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? { ...m, payload: { ...m.payload, audio: payload } }\n          : m,\n      );\n      return state;\n    case \"link\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? { ...m, payload: { ...m.payload, link: payload } }\n          : m,\n      );\n      return state;\n    case \"reply\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? { ...m, payload: { ...m.payload, reply: payload } }\n          : m,\n      );\n      return state;\n    case \"recieved\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? {\n              ...m,\n              reciept: {\n                ...m.reciept,\n                recievedBy: [\n                  ...m.reciept.recievedBy,\n                  { userId: from, timestamp: timestamp },\n                ],\n              },\n            }\n          : m,\n      );\n      return state;\n    case \"read\":\n      state.messages = state.messages.map((m) =>\n        m.id === messageId\n          ? {\n              ...m,\n              reciept: {\n                ...m.reciept,\n                readBy: [\n                  ...m.reciept.readBy,\n                  { userId: from, timestamp: timestamp },\n                ],\n              },\n            }\n          : m,\n      );\n      return state;\n    case \"delete\":\n      state.messages = state.messages.filter((m) => m.id !== messageId);\n      return state;\n    case \"upvote\":\n      state.messages = state.messages.map((m) => {\n        if (m.id === messageId) {\n          return {\n            ...m,\n            votes: {\n              ...m.votes,\n              upvotes: [\n                ...m.votes.upvotes,\n                { userId: from, timestamp: timestamp },\n              ],\n              downvotes: m.votes.downvotes.filter((v) => v.userId !== from),\n            },\n          };\n        } else {\n          return m;\n        }\n      });\n      return state;\n    case \"downvote\":\n      state.messages = state.messages.map((m) => {\n        if (m.id === messageId) {\n          if (payload) {\n            return {\n              ...m,\n              votes: {\n                ...m.votes,\n                downvotes: [\n                  ...m.votes.downvotes,\n                  { userId: from, timestamp: timestamp },\n                ],\n                upvotes: m.votes.upvotes.filter((v) => v.userId !== from),\n              },\n            };\n          } else {\n            return {\n              ...m,\n              // votes: {\n              //     ...m.votes,\n              //     downvotes: m.votes.downvotes.filter((v) => v.userId !== from),\n              // },\n            };\n          }\n        } else {\n          return m;\n        }\n      });\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const blockBuilders = (salt = \"\") => ({\n  addMember: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"addUser\",\n      payload: payload.userId,\n    },\n  ],\n  setPodId: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"setPodId\",\n      payload: payload.id,\n    },\n  ],\n  setPodName: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"setPodName\",\n      payload: payload.name,\n    },\n  ],\n  sendMessage: (payload) => {\n    const messageId = randomString(salt);\n    const sendMessageBlocks = [\n      {\n        id: randomString(salt),\n        from: payload.from,\n        timestamp: Date.now(),\n        type: \"createMessage\",\n        messageId: messageId,\n      },\n    ];\n\n    if (payload.content) {\n      sendMessageBlocks.push({\n        id: randomString(salt),\n        from: payload.from,\n        timestamp: Date.now() + sendMessageBlocks.length,\n        type: \"text\",\n        messageId: messageId,\n        payload: encodeEmojisToUnicode(payload.content),\n      });\n    }\n    if (payload.image) {\n      sendMessageBlocks.push({\n        id: randomString(salt),\n        from: payload.from,\n        timestamp: Date.now() + sendMessageBlocks.length,\n        type: \"image\",\n        messageId: messageId,\n        payload: payload.image,\n      });\n    }\n    if (payload.file) {\n      sendMessageBlocks.push({\n        id: randomString(salt),\n        from: payload.from,\n        timestamp: Date.now() + sendMessageBlocks.length,\n        type: \"file\",\n        messageId: messageId,\n        payload: payload.file,\n      });\n    }\n    if (payload.reply) {\n      sendMessageBlocks.push({\n        id: randomString(salt),\n        from: payload.from,\n        timestamp: Date.now() + sendMessageBlocks.length,\n        type: \"reply\",\n        messageId: messageId,\n        payload: payload.reply.id,\n      });\n    }\n    if (payload.location) {\n      sendMessageBlocks.push({\n        id: randomString(salt),\n        from: payload.from,\n        timestamp: Date.now() + sendMessageBlocks.length,\n        type: \"location\",\n        messageId: messageId,\n        payload: payload.location,\n      });\n    }\n    if (payload.audio) {\n      sendMessageBlocks.push({\n        id: randomString(salt),\n        from: payload.from,\n        timestamp: Date.now() + sendMessageBlocks.length,\n        type: \"audio\",\n        messageId: messageId,\n        payload: payload.audio,\n      });\n    }\n    // if (!!payload.upvote) {\n    //     sendMessageBlocks.push({\n    //         id: randomString(salt),\n    //         from: payload.from,\n    //         timestamp: Date.now() + sendMessageBlocks.length,\n    //         type: 'upvote',\n    //         messageId: messageId,\n    //         payload: payload.upvote,\n    //     })\n    // }\n\n    return sendMessageBlocks;\n  },\n  createPod: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"setPodId\",\n      payload: payload.id,\n    },\n    ...payload.members.map((userId) => ({\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"addUser\",\n      payload: userId,\n    })),\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"setPodName\",\n      payload: payload.name,\n    },\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"setClone\",\n      payload: !!payload.clone,\n    },\n  ],\n  deleteMessage: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"delete\",\n      messageId: payload.id,\n    },\n  ],\n  upvoteMessage: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"upvote\",\n      messageId: payload.messageId,\n    },\n  ],\n});\n","import { randomString } from \"../../cryptography/Cryptography\";\n\n// userProfile = {\n//     id: 'abc',\n//     connectionId: 'def',\n//     pastConnections: ['def', 'ghi'],\n//     displayName: 'jkl',\n//     avatar: 'https://source.unsplash.com/random/400x200?avatar',\n//     agreedToTerms: ['2.0.0'],\n//     settings: {\n//         inAppNotification: true,\n//         browserNotification: false\n//     }\n// }\n\nconst mutations = {\n  updateId: \"UPDATE_ID\",\n  updateConnectionId: \"UPDATE_CONNECTION_ID\",\n  updateDisplayName: \"UPDATE_DISPLAY_NAME\",\n  updateAvatar: \"image\", // there is an explicit rule for this value to be fetched from storage as an object see blockchain.js\n  updateAgreedToTerms: \"UPDATE_AGREED_TO_TERMS\",\n  updateInAppNotification: \"UPDATE_IN_APP_NOTIFICATION\",\n  updateBrowserNotification: \"UPDATE_BROWSER_NOTIFICATION\",\n  updatePeerjsServer: \"UPDATE_PEERJS_SERVER\",\n  updateEncryptionSignature: \"UPDATE_ENCRYPTION_SIGNATURE\",\n};\n\nexport const compiler = (block, state) => {\n  if (!block) return state;\n\n  const { type, payload } = block;\n\n  switch (type) {\n    case mutations.updateId:\n      return { ...state, id: payload };\n    case mutations.updateConnectionId:\n      return {\n        ...state,\n        connectionId: payload,\n        pastConnections: state.connectionId\n          ? [...(state.pastConnections ?? []), state.connectionId]\n          : [],\n      };\n    case mutations.updateDisplayName:\n      return { ...state, displayName: payload };\n    case mutations.updateAvatar:\n      return { ...state, avatar: payload };\n    case mutations.updateAgreedToTerms:\n      return {\n        ...state,\n        agreedToTerms: [...(state.agreedToTerms || []), payload],\n      };\n    case mutations.updateInAppNotification:\n      return {\n        ...state,\n        settings: { ...state.settings, inAppNotification: payload },\n      };\n    case mutations.updateBrowserNotification:\n      return {\n        ...state,\n        settings: { ...state.settings, browserNotification: payload },\n      };\n    case mutations.updatePeerjsServer:\n      return { ...state, peerjsServer: payload };\n    case mutations.updateEncryptionSignature:\n      return { ...state, encryptionSignature: payload };\n    default:\n      return state;\n  }\n};\n\nexport const blockBuilders = (salt = \"\") => ({\n  updateId: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"UPDATE_ID\",\n      payload: payload.id,\n    },\n  ],\n  updateConnectionId: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"UPDATE_CONNECTION_ID\",\n      payload: payload.connectionId,\n    },\n  ],\n  updateDisplayName: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"UPDATE_DISPLAY_NAME\",\n      payload: payload.displayName,\n    },\n  ],\n  updateAvatar: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"image\",\n      payload: payload.avatar,\n    },\n  ],\n  updateAgreedToTerms: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"UPDATE_AGREED_TO_TERMS\",\n      payload: payload.agreedToTerms,\n    },\n  ],\n  updateInAppNotification: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"UPDATE_IN_APP_NOTIFICATION\",\n      payload: payload.inAppNotification,\n    },\n  ],\n  updateBrowserNotification: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"UPDATE_BROWSER_NOTIFICATION\",\n      payload: payload.browserNotification,\n    },\n  ],\n  updatePeerjsServer: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"UPDATE_PEERJS_SERVER\",\n      payload: payload.peerjsServer,\n    },\n  ],\n  updateEncryptionSignature: (payload) => [\n    {\n      id: randomString(salt),\n      from: payload.from,\n      timestamp: Date.now(),\n      type: \"UPDATE_ENCRYPTION_SIGNATURE\",\n      payload: payload.encryptionSignature,\n    },\n  ],\n});\n","// create me a Cryptography class for creatting things like rsa keys and methods for encrypting and decrypting messages.\n\n// it should also have cryptogrphically random String generator for creating random strings for things like salt and iv\n\n// it should also have a method for hashing a string with sha256 and sha512\n\n/*\nconst entropy = 'some user input pf random string';\n<CryptographgyProvider entropy={entropy}>\n</CryptographyProvider>\n\n\n// in some component\n\nconst { random, md5Hash, sha256Hash, sha3_512Hash, chance } = useCryptography('some salt');\nconst randomString = random('some more salt');\nconst md5Hash = md5Hash('some string'); \nconst sha256Hash = sha256Hash('some string');\nconst sha3_512Hash = sha3_512Hash('some string');\n*/\n\n/* \n\nmy methods for createing rsa keys and encrypting and decrypting messages\n\n// public key encryption\nexport const generateKeyPair = async () => {\n  const keyPair = await window.crypto.subtle.generateKey(\n    {\n      name: 'RSA-OAEP',\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([1, 0, 1]),\n      hash: 'SHA-256',\n    },\n    true,\n    ['encrypt', 'decrypt']\n  );\n\n  return { publicKey: keyPair.publicKey, privateKey: keyPair.privateKey };\n};\n\nfunction setClassPropsFromJson(json, instance) {\n  for (let prop in json) {\n    if (json.hasOwnProperty(prop)) {\n      instance[prop] = json[prop];\n    }\n  }\n  return instance;\n}\n\nexport const deserializePublicKey = async (key) => {\n  const deSerializedublicKey = await window.crypto.subtle.importKey(\n    'jwk',\n    {\n      ...key,\n      kty: 'RSA'\n    },\n    {\n      name: 'RSA-OAEP',\n      hash: 'SHA-256',\n    },\n    true,\n    ['encrypt']\n  );\n\n  return setClassPropsFromJson(key, deSerializedublicKey)\n}\n\nexport const deserializePrivateKey = async (key) => {\n  const deSerializedPrivateKey = await window.crypto.subtle.importKey(\n    'jwk',\n    {\n\n      ...key,\n      kty: 'RSA'\n    },\n    {\n      name: 'RSA-OAEP',\n      hash: 'SHA-256',\n    },\n    true,\n    ['decrypt']\n  );\n\n  return setClassPropsFromJson(key, deSerializedPrivateKey)\n\n}\n\nexport const encrypt = async (message, publicKey) => {\n  const encodedMessage = new TextEncoder().encode(message);\n  const encrypted = await window.crypto.subtle.encrypt(\n    {\n      name: 'RSA-OAEP',\n      hash: 'SHA-256',\n    },\n    publicKey,\n    encodedMessage\n  ).catch((error) => {\n    console.log('error', error);\n  });\n\n  return btoa(String.fromCharCode(...new Uint8Array(encrypted)));\n};\n\nexport const decrypt = async (encryptedMessage, privateKey, passphrase) => {\n  const buffer = Uint8Array.from(atob(encryptedMessage), c => c.charCodeAt(0));\n  try {\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: 'RSA-OAEP',\n        hash: 'SHA-256',\n      },\n      privateKey,\n      buffer\n    );\n    const message = new TextDecoder().decode(decrypted);\n    return message;\n  } catch (error) {\n    console.log('error', error);\n    throw new Error('Unable to decrypt message. Incorrect passphrase.', error);\n  }\n};\n\nconst getEncryptionMethods = async (userId, salt) => {\n  const keyPair = await generateKeyPair(userId, salt);\n\n  return {\n    encrypt: async (message) => {\n      return await encrypt(message, keyPair.publicKey);\n    },\n    decrypt: async (encryptedMessage) => {\n      return await decrypt(encryptedMessage, keyPair.privateKey, salt);\n    },\n  };\n};\n\n// Symmetric key encryption\n\nexport const generateSymmetricKey = async () => {\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: 'AES-GCM',\n      length: 256, // can be  128, 192, or 256\n    },\n    true, // whether the key is extractable (i.e. can be used in exportKey)\n    ['encrypt', 'decrypt']\n  );\n\n  return key;\n};\n\nexport const deserializeSymmetricKey = async (key) => {\n  const deSerializedSymmetricKey = await window.crypto.subtle.importKey(\n    'jwk',\n    {\n      ...key,\n      kty: 'oct'\n    },\n    {\n      name: 'AES-GCM',\n    },\n    true,\n    ['encrypt', 'decrypt']\n  );\n\n  return setClassPropsFromJson(key, deSerializedSymmetricKey)\n}\n\nexport const encryptWithSymmetricKey = async (message, key) => {\n  const encodedMessage = new TextEncoder().encode(message);\n  const iv = window.crypto.getRandomValues(new Uint8Array(12)); // must be 12 bytes\n\n  const encrypted = await window.crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv: iv,\n    },\n    key,\n    encodedMessage\n  ).catch((error) => {\n    console.log('error', error);\n  });\n\n  return {\n    ciphertext: btoa(String.fromCharCode(...new Uint8Array(encrypted))),\n    iv: btoa(String.fromCharCode(...new Uint8Array(iv))),\n  };\n};\n\nexport const decryptWithSymmetricKey = async (encryptedData, key) => {\n  const { ciphertext, iv } = encryptedData;\n  const buffer = Uint8Array.from(atob(ciphertext), c => c.charCodeAt(0));\n  const ivBuffer = Uint8Array.from(atob(iv), c => c.charCodeAt(0));\n\n  try {\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: 'AES-GCM',\n        iv: ivBuffer,\n      },\n      key,\n      buffer\n    );\n    const message = new TextDecoder().decode(decrypted);\n    return message;\n  } catch (error) {\n    throw new Error('Unable to decrypt message. Incorrect key.');\n  }\n};\n\nconst getSymmetricKeyEncryptionMethods = async () => {\n  const key = await generateSymmetricKey();\n\n  return {\n    encrypt: async (message) => {\n      return await encryptWithSymmetricKey(message, key);\n    },\n    decrypt: async (encryptedMessage) => {\n      return await decryptWithSymmetricKey(encryptedMessage, key);\n    },\n  };\n};\n\nexport { getEncryptionMethods, getSymmetricKeyEncryptionMethods };\nto export an initialised instance of chance to get things like animal()\n\n\n\n\n\ni want you to start by creating me the skeleton of the component and we will further define the further method definitions after.\nthe methods for the encryption should be able to take in serialized encryptions keys like you see in the way its created.\n*/\n\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { sha3_512 } from \"js-sha3\";\nimport Chance from \"chance\";\n\nimport cryptography from \"cryptography/Cryptography\";\n\n// Create Context\nconst CryptographyContext = createContext(null);\n\n// Cryptographically Random String Generator\nexport const randomString = (additionalSalt = \"\") => {\n  // Define the length of the random string\n  const randomStringLength = 16; // You can change this value to generate a longer or shorter string\n\n  // Generate a random array of uint8 values\n  const randomValues = crypto.getRandomValues(\n    new Uint8Array(randomStringLength),\n  );\n\n  // Convert random values to hexadecimal string\n  const randomHex = Array.from(randomValues)\n    .map((byte) => byte.toString(16).padStart(2, \"0\"))\n    .join(\"\");\n\n  // If additional salt is provided, concatenate it with the random string\n  const randomString = additionalSalt ? additionalSalt + randomHex : randomHex;\n\n  return randomString;\n};\n\n// // Usage:\n// const randomString = random('some more salt');\n// console.log(randomString);\n\n// CryptographyProvider Component\nexport const CryptographyProvider = cryptography.CryptographyProvider;\n// export const CryptographyProvider = ({ entropy = \"\", children }) => {\n//   const [salt, setSalt] = useState(\"\");\n//   const [chance, setChance] = useState(new Chance(salt));\n\n//   useEffect(() => {\n//     const updateSates = async () => {\n//       const newSalt = await sha256Hash(entropy);\n//       setSalt(newSalt);\n//       setChance(new Chance(newSalt));\n//     };\n//     updateSates();\n//   }, [entropy]);\n\n//   const random = (additionalSalt = \"\") => randomString(additionalSalt + salt);\n\n//   // Hashing Methods\n//   const sha256Hash = async (input) => {\n//     // // Ensure the input is a string\n//     // if (typeof inputString !== 'string') throw new Error('Input must be a string');\n\n//     const inputString = JSON.stringify(input);\n\n//     // Convert the string to an ArrayBuffer\n//     const encoder = new TextEncoder();\n//     const data = encoder.encode(inputString);\n\n//     // Hash the data\n//     const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n\n//     // Convert the result to a hexadecimal string\n//     const hashArray = Array.from(new Uint8Array(hashBuffer));\n//     const hashHex = hashArray\n//       .map((byte) => byte.toString(16).padStart(2, \"0\"))\n//       .join(\"\");\n\n//     return hashHex;\n//   };\n\n//   // // Usage:\n//   // sha256Hash('some string')\n//   //     .then(hash => console.log(hash))\n//   //     .catch(error => console.error(error));\n\n//   const sha512Hash = async (input) => {\n//     // // Ensure the input is a string\n//     // if (typeof inputString !== 'string') throw new Error('Input must be a string');\n//     const inputString = JSON.stringify(input);\n\n//     // Convert the string to an ArrayBuffer\n//     const encoder = new TextEncoder();\n//     const data = encoder.encode(inputString);\n\n//     // Hash the data\n//     const hashBuffer = await crypto.subtle.digest(\"SHA-512\", data);\n\n//     // Convert the result to a hexadecimal string\n//     const hashArray = Array.from(new Uint8Array(hashBuffer));\n//     const hashHex = hashArray\n//       .map((byte) => byte.toString(16).padStart(2, \"0\"))\n//       .join(\"\");\n\n//     return hashHex;\n//   };\n\n//   // // Usage:\n//   // sha512Hash('some string')\n//   //     .then(hash => console.log(hash))\n//   //     .catch(error => console.error(error));\n\n//   const sha3_512Hash = async (input) => {\n//     // // Ensure the input is a string\n//     // if (typeof inputString !== 'string') throw new Error('Input must be a string');\n//     const inputString = JSON.stringify(input);\n\n//     // Hash the data\n//     const hashHex = sha3_512(inputString);\n\n//     return hashHex;\n//   };\n\n//   // // Usage:\n//   // sha3_512Hash('some string')\n//   //     .then(hash => console.log(hash))\n//   //     .catch(error => console.error(error));\n\n//   // RSA Key Generation and Encryption/Decryption Methods\n//   const generateKeyPair = async () => {\n//     try {\n//       const keyPair = await crypto.subtle.generateKey(\n//         {\n//           name: \"RSA-OAEP\",\n//           modulusLength: 4096, // Can be 1024, 2048, or 4096\n//           publicExponent: new Uint8Array([1, 0, 1]), // 65537 in bytes\n//           hash: \"SHA-256\", // Can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n//         },\n//         true, // Whether the key is extractable\n//         [\"encrypt\", \"decrypt\"], // Key usages\n//       );\n\n//       return {\n//         publicKey: keyPair.publicKey,\n//         privateKey: keyPair.privateKey,\n//       };\n//     } catch (error) {\n//       console.error(\"Error generating key pair:\", error);\n//       throw error;\n//     }\n//   };\n\n//   // // Usage:\n//   // generateKeyPair('some salt')\n//   //     .then(keyPair => {\n//   //         console.log('Public Key:', keyPair.publicKey);\n//   //         console.log('Private Key:', keyPair.privateKey);\n//   //     })\n//   //     .catch(error => console.error(error));\n\n//   function setClassPropsFromJson(json, instance) {\n//     for (let prop in json) {\n//       if (json.hasOwnProperty(prop)) {\n//         instance[prop] = json[prop];\n//       }\n//     }\n//     return instance;\n//   }\n\n//   const deserializePublicKey = async (key) => {\n//     try {\n//       const publicKey = await crypto.subtle.importKey(\n//         \"jwk\", // Import format\n//         key, // The key in JWK format\n//         {\n//           name: \"RSA-OAEP\", // Algorithm name\n//           hash: \"SHA-256\", // Hash algorithm\n//         },\n//         true, // Extractable flag\n//         [\"encrypt\"], // Key usages\n//       );\n\n//       return setClassPropsFromJson(key, publicKey);\n//     } catch (error) {\n//       console.error(\"Error deserializing public key:\", error);\n//       throw error;\n//     }\n//   };\n\n//   // // Usage:\n//   // const jwk = {\n//   //     kty: 'RSA',\n//   //     // ... other JWK properties\n//   // };\n\n//   // deserializePublicKey(jwk)\n//   //     .then(publicKey => console.log('Public Key:', publicKey))\n//   //     .catch(error => console.error(error));\n\n//   const deserializePrivateKey = async (key) => {\n//     try {\n//       const privateKey = await crypto.subtle.importKey(\n//         \"jwk\", // Import format\n//         key, // The key in JWK format\n//         {\n//           name: \"RSA-OAEP\", // Algorithm name\n//           hash: \"SHA-256\", // Hash algorithm\n//         },\n//         true, // Extractable flag\n//         [\"decrypt\"], // Key usages\n//       );\n\n//       return setClassPropsFromJson(key, privateKey);\n//     } catch (error) {\n//       console.error(\"Error deserializing private key:\", error);\n//       throw error;\n//     }\n//   };\n\n//   // // Usage:\n//   // const jwk = {\n//   //     kty: 'RSA',\n//   //     // ... other JWK properties\n//   // };\n\n//   // deserializePrivateKey(jwk)\n//   //     .then(privateKey => console.log('Private Key:', privateKey))\n//   //     .catch(error => console.error(error));\n\n//   const encrypt = async (message, publicKey) => {\n//     const encodedMessage = new TextEncoder().encode(message);\n//     const encrypted = await window.crypto.subtle\n//       .encrypt(\n//         {\n//           name: \"RSA-OAEP\",\n//           hash: \"SHA-256\",\n//         },\n//         publicKey,\n//         encodedMessage,\n//       )\n//       .catch((error) => {\n//         console.log(\"error\", error);\n//       });\n\n//     return btoa(String.fromCharCode(...new Uint8Array(encrypted)));\n//   };\n\n//   //   const message = 'Hello, World!';\n//   //     const publicKey;  // Assume this is obtained from your key generation or deserialization functions\n\n//   //     encrypt(message, publicKey)\n//   //         .then(encryptedMessage => {\n//   //             console.log('Encrypted Message:', encryptedMessage);\n//   //         })\n//   //         .catch(error => {\n//   //             console.error('Encryption Error:', error);\n//   //     });\n\n//   const decrypt = async (encryptedMessage, privateKey, passphrase) => {\n//     const buffer = Uint8Array.from(atob(encryptedMessage), (c) =>\n//       c.charCodeAt(0),\n//     );\n//     try {\n//       const decrypted = await window.crypto.subtle.decrypt(\n//         {\n//           name: \"RSA-OAEP\",\n//           hash: \"SHA-256\",\n//         },\n//         privateKey,\n//         buffer,\n//       );\n//       const message = new TextDecoder().decode(decrypted);\n//       return message;\n//     } catch (error) {\n//       console.log(\"error\", error);\n//       throw new Error(\n//         \"Unable to decrypt message. Incorrect passphrase.\",\n//         error,\n//       );\n//     }\n//   };\n\n//   //       const encryptedMessage;  // Assume this is obtained from your encrypt function\n//   // const privateKey;  // Assume this is obtained from your key generation or deserialization functions\n\n//   // decrypt(encryptedMessage, privateKey)\n//   //     .then(decryptedMessage => {\n//   //         console.log('Decrypted Message:', decryptedMessage);\n//   //     })\n//   //     .catch(error => {\n//   //         console.error('Decryption Error:', error);\n//   //     });\n\n//   // Symmetric Key Generation and Encryption/Decryption Methods\n//   const generateSymmetricKey = async () => {\n//     const key = await window.crypto.subtle.generateKey(\n//       {\n//         name: \"AES-GCM\",\n//         length: 256, // can be  128, 192, or 256\n//       },\n//       true, // whether the key is extractable (i.e. can be used in exportKey)\n//       [\"encrypt\", \"decrypt\"],\n//     );\n\n//     return key;\n//   };\n\n//   const deserializeSymmetricKey = async (key) => {\n//     const deSerializedSymmetricKey = await window.crypto.subtle.importKey(\n//       \"jwk\",\n//       {\n//         ...key,\n//         kty: \"oct\",\n//       },\n//       {\n//         name: \"AES-GCM\",\n//       },\n//       true,\n//       [\"encrypt\", \"decrypt\"],\n//     );\n\n//     return setClassPropsFromJson(key, deSerializedSymmetricKey);\n//   };\n\n//   const encryptWithSymmetricKey = async (message, key) => {\n//     const encodedMessage = new TextEncoder().encode(message);\n//     const iv = window.crypto.getRandomValues(new Uint8Array(12)); // must be 12 bytes\n\n//     const encrypted = await window.crypto.subtle\n//       .encrypt(\n//         {\n//           name: \"AES-GCM\",\n//           iv: iv,\n//         },\n//         key,\n//         encodedMessage,\n//       )\n//       .catch((error) => {\n//         console.log(\"error\", error);\n//       });\n\n//     return {\n//       ciphertext: btoa(String.fromCharCode(...new Uint8Array(encrypted))),\n//       iv: btoa(String.fromCharCode(...new Uint8Array(iv))),\n//     };\n//   };\n\n//   const decryptWithSymmetricKey = async (encryptedData, key) => {\n//     const { ciphertext, iv } = encryptedData;\n//     const buffer = Uint8Array.from(atob(ciphertext), (c) => c.charCodeAt(0));\n//     const ivBuffer = Uint8Array.from(atob(iv), (c) => c.charCodeAt(0));\n\n//     try {\n//       const decrypted = await window.crypto.subtle.decrypt(\n//         {\n//           name: \"AES-GCM\",\n//           iv: ivBuffer,\n//         },\n//         key,\n//         buffer,\n//       );\n//       const message = new TextDecoder().decode(decrypted);\n//       return message;\n//     } catch (error) {\n//       throw new Error(\"Unable to decrypt message. Incorrect key.\");\n//     }\n//   };\n\n//   // Exported Methods Bundle\n//   const cryptographyMethods = {\n//     randomString,\n//     sha256Hash,\n//     sha512Hash,\n//     sha3_512Hash,\n//     generateKeyPair,\n//     deserializePublicKey,\n//     deserializePrivateKey,\n//     encrypt,\n//     decrypt,\n//     generateSymmetricKey,\n//     deserializeSymmetricKey,\n//     encryptWithSymmetricKey,\n//     decryptWithSymmetricKey,\n//     // Add more methods as needed\n//     chance,\n//   };\n\n//   return (\n//     <CryptographyContext.Provider value={cryptographyMethods}>\n//       {children}\n//     </CryptographyContext.Provider>\n//   );\n// };\n\n// Custom Hook to use Cryptography\nexport const useCryptography = () => {\n  return useContext(CryptographyContext);\n};\n\n// Usage in some component\n/*\nconst { \n  random, \n  sha256Hash, \n  sha512Hash, \n  generateKeyPair,\n  deserializePublicKey,\n  deserializePrivateKey,\n  encrypt,\n  decrypt,\n  generateSymmetricKey,\n  deserializeSymmetricKey,\n  encryptWithSymmetricKey,\n  decryptWithSymmetricKey,\n  chance\n} = useCryptography();\n*/\n","// public key encryption\nexport const generateKeyPair = async () => {\n  const keyPair = await window.crypto.subtle.generateKey(\n    {\n      name: \"RSA-OAEP\",\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([1, 0, 1]),\n      hash: \"SHA-256\",\n    },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n\n  return { publicKey: keyPair.publicKey, privateKey: keyPair.privateKey };\n};\n\nfunction setClassPropsFromJson(json, instance) {\n  for (let prop in json) {\n    if (json.hasOwnProperty(prop)) {\n      instance[prop] = json[prop];\n    }\n  }\n  return instance;\n}\n\nexport const deserializePublicKey = async (key) => {\n  const deSerializedublicKey = await window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      ...key,\n      kty: \"RSA\",\n    },\n    {\n      name: \"RSA-OAEP\",\n      hash: \"SHA-256\",\n    },\n    true,\n    [\"encrypt\"],\n  );\n\n  return setClassPropsFromJson(key, deSerializedublicKey);\n};\n\nexport const deserializePrivateKey = async (key) => {\n  const deSerializedPrivateKey = await window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      ...key,\n      kty: \"RSA\",\n    },\n    {\n      name: \"RSA-OAEP\",\n      hash: \"SHA-256\",\n    },\n    true,\n    [\"decrypt\"],\n  );\n\n  return setClassPropsFromJson(key, deSerializedPrivateKey);\n};\n\nexport const encrypt = async (message, publicKey) => {\n  const encodedMessage = new TextEncoder().encode(message);\n  const encrypted = await window.crypto.subtle\n    .encrypt(\n      {\n        name: \"RSA-OAEP\",\n        hash: \"SHA-256\",\n      },\n      publicKey,\n      encodedMessage,\n    )\n    .catch((error) => {\n      console.log(\"error\", error);\n    });\n\n  return btoa(String.fromCharCode(...new Uint8Array(encrypted)));\n};\n\nexport const decrypt = async (encryptedMessage, privateKey, passphrase) => {\n  const buffer = Uint8Array.from(atob(encryptedMessage), (c) =>\n    c.charCodeAt(0),\n  );\n  try {\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: \"RSA-OAEP\",\n        hash: \"SHA-256\",\n      },\n      privateKey,\n      buffer,\n    );\n    const message = new TextDecoder().decode(decrypted);\n    return message;\n  } catch (error) {\n    console.log(\"error\", error);\n    throw new Error(\"Unable to decrypt message. Incorrect passphrase.\", error);\n  }\n};\n\nconst getEncryptionMethods = async (userId, salt) => {\n  const keyPair = await generateKeyPair(userId, salt);\n\n  return {\n    encrypt: async (message) => {\n      return await encrypt(message, keyPair.publicKey);\n    },\n    decrypt: async (encryptedMessage) => {\n      return await decrypt(encryptedMessage, keyPair.privateKey, salt);\n    },\n  };\n};\n\n// Symmetric key encryption\n\nexport const generateSymmetricKey = async () => {\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 256, // can be  128, 192, or 256\n    },\n    true, // whether the key is extractable (i.e. can be used in exportKey)\n    [\"encrypt\", \"decrypt\"],\n  );\n\n  return key;\n};\n\nexport const deserializeSymmetricKey = async (key) => {\n  const deSerializedSymmetricKey = await window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      ...key,\n      kty: \"oct\",\n    },\n    {\n      name: \"AES-GCM\",\n    },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n\n  return setClassPropsFromJson(key, deSerializedSymmetricKey);\n};\n\nexport const encryptWithSymmetricKey = async (message, key) => {\n  const encodedMessage = new TextEncoder().encode(message);\n  const iv = window.crypto.getRandomValues(new Uint8Array(12)); // must be 12 bytes\n\n  const encrypted = await window.crypto.subtle\n    .encrypt(\n      {\n        name: \"AES-GCM\",\n        iv: iv,\n      },\n      key,\n      encodedMessage,\n    )\n    .catch((error) => {\n      console.log(\"error\", error);\n    });\n\n  return {\n    ciphertext: btoa(String.fromCharCode(...new Uint8Array(encrypted))),\n    iv: btoa(String.fromCharCode(...new Uint8Array(iv))),\n  };\n};\n\nexport const decryptWithSymmetricKey = async (encryptedData, key) => {\n  const { ciphertext, iv } = encryptedData;\n  const buffer = Uint8Array.from(atob(ciphertext), (c) => c.charCodeAt(0));\n  const ivBuffer = Uint8Array.from(atob(iv), (c) => c.charCodeAt(0));\n\n  try {\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: ivBuffer,\n      },\n      key,\n      buffer,\n    );\n    const message = new TextDecoder().decode(decrypted);\n    return message;\n  } catch (error) {\n    throw new Error(\"Unable to decrypt message. Incorrect key.\");\n  }\n};\n\nconst getSymmetricKeyEncryptionMethods = async () => {\n  const key = await generateSymmetricKey();\n\n  return {\n    encrypt: async (message) => {\n      return await encryptWithSymmetricKey(message, key);\n    },\n    decrypt: async (encryptedMessage) => {\n      return await decryptWithSymmetricKey(encryptedMessage, key);\n    },\n  };\n};\n\nexport { getEncryptionMethods, getSymmetricKeyEncryptionMethods };\n","import React from \"react\";\nimport {\n  SnackbarProvider as SnackbarProviderOriginal,\n  closeSnackbar,\n  useSnackbar,\n} from \"notistack\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useSelector } from \"react-redux\";\nimport Blockchain, { useBlockchain } from \"../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../blockchain/chains/profileChain\";\n\nexport const SnackbarProvider = ({ children }) => {\n  return (\n    <SnackbarProviderOriginal\n      maxSnack={3}\n      preventDuplicate\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      autoHideDuration={2000}\n      action={(snackbarId) => (\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => closeSnackbar(snackbarId)}\n        >\n          <CloseIcon style={{ color: \"#fff\" }} />\n        </IconButton>\n      )}\n    >\n      {children}\n    </SnackbarProviderOriginal>\n  );\n};\n\nexport const useNotification = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const storedBlockchain = useSelector((state) => state.userProfile.blockchain);\n  const { compiledBlockchain: compiledProfile } = useBlockchain({\n    compiler: profileCompiler,\n    blockchain: storedBlockchain,\n  });\n\n  const storedInAppNotification = compiledProfile?.settings?.inAppNotification;\n  const storedBrowserNotification =\n    compiledProfile?.settings?.browserNotification;\n\n  // const storedInAppNotification = useSelector(state => state.userProfile.inAppNotification);\n  // const storedBrowserNotification = useSelector(state => state.userProfile.browserNotification);\n\n  return (message, ...props) => {\n    // Check if the browser supports notifications\n    console.log({\n      storedInAppNotification,\n      storedBrowserNotification,\n      Notification: window.Notification,\n      hidden: document.hidden,\n      message,\n      props,\n    });\n    try {\n      if (\n        (storedBrowserNotification && !(\"Notification\" in window)) ||\n        typeof window.Notification === \"undefined\"\n      ) {\n        alert(\"This browser does not support desktop notification\");\n      }\n\n      // Check if permission is already granted\n      else if (window.Notification?.permission === \"granted\") {\n        if (document.hidden) {\n          // If it's okay, let's create a notification\n          if (storedBrowserNotification) {\n            let notification = new window.Notification(message);\n          }\n        }\n      }\n\n      // Check if permission is already granted\n      else if (window.Notification?.permission === \"denied\") {\n        // If it's okay, let's create a notification\n        if (storedInAppNotification) {\n          enqueueSnackbar(message, ...props);\n        }\n      }\n\n      // Otherwise, we need to ask the user for permission\n      else if (\n        storedBrowserNotification &&\n        (window.Notification?.permission !== \"denied\" ||\n          window.Notification?.permission === \"default\")\n      ) {\n        window.Notification?.requestPermission(function (permission) {\n          // If the user accepts, let's create a notification\n          if (permission === \"granted\") {\n            let notification = new window.Notification(message);\n          }\n        });\n      }\n\n      if (storedInAppNotification || props[0].insist) {\n        enqueueSnackbar(message, ...props);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport { useSnackbar };\n","import React, { useState, useEffect, createContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  updatePeerId,\n  addToBlockchain,\n} from \"../redux/slices/userProfileSlice\";\nimport Blockchain, { useBlockchain } from \"../blockchain/Blockchain\";\nimport {\n  compiler as profileCompiler,\n  blockBuilders,\n} from \"../blockchain/chains/profileChain\";\nimport {\n  decrypt,\n  encrypt,\n  encryptWithSymmetricKey,\n  decryptWithSymmetricKey,\n} from \"../encryption/Encryption\";\nimport Peer from \"peerjs\";\nimport Chance from \"chance\";\nimport { randomString } from \"../cryptography/Cryptography\";\nconst chance = new Chance();\n\nexport const PeerContext = createContext();\n\nlet peer = null;\nconst setPeer = (newState) => (peer = newState);\n\nlet pendingCallbacks = [];\nconst setPendingCallbacks = (newState) => (pendingCallbacks = newState);\n\nlet connections = {};\nconst setConnections = (newState) => (connections = newState);\n\nlet calls = [];\nconst setCalls = (newState) => (calls = newState);\n\nlet streams = [];\nconst setStreams = (newState) => (streams = newState);\n\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n  this.push = () => {};\n}\n\nexport default function PeerProvider({\n  children,\n  appiSchema,\n  onConnection,\n  managedState,\n}) {\n  // const [peer, setPeer] = useState(null);\n  const [peerHash, setPeerHash] = useState(chance.hash());\n  const [activeConnections, setActiveConnections] = useState([]);\n  const [peerEncryptionKeys, setPeerEncryptionKeys] = useState([]);\n  // const [connections, setConnections] = useState({});\n  // const [calls, setCalls] = useState([]);\n  const [callsHash, setCallsHash] = useState(chance.hash());\n  // const [streams, setStreams] = useState([]);\n\n  const storedBlockchain = useSelector((state) => state.userProfile.blockchain);\n  const dispatch = useDispatch();\n  const addToBlockchainDispatch = (podId, blocks, block, storage) =>\n    dispatch(addToBlockchain({ podId, blocks, block, storage, append: true }));\n  const { compiledBlockchain: compiledProfile, addBlocks: addBlocksToProfile } =\n    useBlockchain({\n      compiler: profileCompiler,\n      blockchain: storedBlockchain,\n      dispatch: addToBlockchainDispatch,\n    });\n  const storedPeerId = compiledProfile.connectionId;\n  const agreedToTerms = compiledProfile.agreedToTerms?.length;\n\n  // const storedPeerId = useSelector((state) => state.userProfile.connectionId);\n  // const agreedToTerms = useSelector((state) => state.userProfile.agreedToTerms?.length);\n  // const dispatch = useDispatch();\n  // const setPeerId = (peerId) => console.log('setPeerId', peerId) && dispatch(updatePeerId(peerId));\n\n  const setPeerId = (peerId) => {\n    const newBlocks = [\n      ...blockBuilders().updateConnectionId({\n        from: storedPeerId,\n        connectionId: peerId,\n      }),\n    ];\n\n    // setPeerHash(chance.hash());\n    // setTimeout(() => setPeerHash(chance.hash()), 1000);\n    addBlocksToProfile(newBlocks);\n  };\n  const encryptionKeys = useSelector((state) => state.encryption);\n\n  const peerOnDataHandler = (data, connection) =>\n    handleConnectionDataWithManagedState(connection, managedState, data);\n\n  const peerConnectionHandler = (connection) => {\n    // const newListener = data => peerOnDataHandler(data, connection);\n    // const newListener = (data) => new EE(data => peerOnDataHandler(data, connection))\n    try {\n      connection.off(\"data\");\n    } catch (err) {\n      console.log(\"error removing data listener\", err);\n    }\n    connection.on(\"data\", (data) => peerOnDataHandler(data, connection));\n\n    if (peer) {\n      try {\n        peer.off(\"connection\");\n      } catch (err) {\n        console.log(\"error peer connection data listener\", err);\n      }\n\n      try {\n        peer.off(\"call\");\n      } catch (err) {\n        console.log(\"error peer connection call listener\", err);\n      }\n\n      peer.on(\"connection\", (connection) => {\n        console.log(\"new connection\");\n\n        connection.on(\"close\", (connection) => {\n          console.log(\"peer closed\", connection);\n\n          setConnections((connections) => {\n            const newConnections = { ...connections };\n            delete newConnections[connection?.peer];\n            return newConnections;\n          });\n          setActiveConnections(\n            Object.keys(connections).filter((c) => c !== connection?.peer),\n          );\n\n          const remoteStreamId = calls.find(\n            (call) => call.peer !== connection?.peer,\n          )?._remoteStream?.id;\n\n          setCalls(calls.filter((call) => call.peer !== connection?.peer));\n          setCallsHash(chance.hash());\n          // setPeerHash(chance.hash());\n        });\n\n        onConnection(\n          connection,\n          sendMessageWithCallback,\n          managedState,\n          Object.keys(connections).filter((c) => c !== connection?.peer),\n        );\n        setConnections({\n          ...connections,\n          [connection.peer]: connection,\n        });\n        setActiveConnections([...Object.keys(connections), connection.peer]);\n        // setPeerHash(chance.hash());\n      });\n\n      peer.on(\"call\", async (call) => {\n        console.log(\"call received\", call);\n\n        call.on(\"stream\", (stream) => {\n          console.log(\"stream received from remote\", stream);\n          // setStreams((streams) => {\n          //     // do not add stream if it is already set\n          //     if (streams.find((s) => s.id === stream.id)) {\n          //         return streams;\n          //     }\n          //     return [...streams, stream];\n          // });\n        });\n        call.on(\"close\", () => {\n          endCall(call.peer);\n        });\n\n        setCalls([...calls, call]);\n        setCallsHash(chance.hash());\n      });\n    }\n  };\n\n  useEffect(() => {\n    const activeConnectionsToManage = activeConnections.map(\n      (c) => connections[c],\n    );\n\n    activeConnectionsToManage.forEach((connection) => {\n      // const newListener = new EE(data => peerOnDataHandler(data, connection))\n      // connection.close();\n      // connectToPeer(connection.peer)\n      // debugger;\n      // console.log('>>>>>> setting data handler')\n      // connection.off('data', data => peerOnDataHandler(data, connection));\n      // connection.on('data', data => peerOnDataHandler(data, connection));\n      // if (connection._events) {\n      //     connection._events.data = newListener;\n      // }\n\n      // const newListener = data => peerOnDataHandler(data, connection);\n      // connection.off('data', newListener);\n      // connection.on('data', newListener);\n      peerConnectionHandler(connection);\n    });\n    // // activeConnections.forEach(peerId => connectToPeer(peerId))\n  }, [managedState, activeConnections, callsHash, peerHash]);\n\n  useEffect(() => {\n    const deserializedEncryptionKeys = async () => {\n      const keyPairs = await Promise.all(\n        Object.keys(encryptionKeys).map(async (userId) => {\n          const { privateKey, remotePublicKey, symmetricKey, established } =\n            encryptionKeys[userId];\n          const deserializedPrivateKey =\n            privateKey &&\n            (await window.crypto.subtle.importKey(\n              \"jwk\",\n              {\n                ...privateKey,\n                kty: \"RSA\",\n              },\n              {\n                name: \"RSA-OAEP\",\n                hash: \"SHA-256\",\n              },\n              true,\n              [\"decrypt\"],\n            ));\n          const deserializedRemotePublicKey =\n            remotePublicKey &&\n            (await window.crypto.subtle.importKey(\n              \"jwk\",\n              {\n                ...remotePublicKey,\n                kty: \"RSA\",\n              },\n              {\n                name: \"RSA-OAEP\",\n                hash: \"SHA-256\",\n              },\n              true,\n              [\"encrypt\"],\n            ));\n          const deserializedSymmetricKey =\n            symmetricKey &&\n            (await window.crypto.subtle.importKey(\n              \"jwk\",\n\n              {\n                ...symmetricKey,\n                kty: \"oct\",\n              },\n              {\n                name: \"AES-GCM\",\n                length: 256,\n              },\n              true,\n              [\"encrypt\", \"decrypt\"],\n            ));\n\n          function setClassPropsFromJson(json, instance) {\n            for (let prop in json) {\n              if (json.hasOwnProperty(prop)) {\n                instance[prop] = json[prop];\n              }\n            }\n            return instance;\n          }\n\n          return {\n            userId,\n            privateKey: setClassPropsFromJson(\n              privateKey,\n              deserializedPrivateKey,\n            ), // {...deserializedPrivateKey, ...privateKey},\n            remotePublicKey: setClassPropsFromJson(\n              remotePublicKey,\n              deserializedRemotePublicKey,\n            ), // {...deserializedRemotePublicKey, ...remotePublicKey},\n            symmetricKey: setClassPropsFromJson(\n              symmetricKey,\n              deserializedSymmetricKey,\n            ), // {...deserializedSymmetricKey, ...symmetricKey},\n            established,\n          };\n        }),\n      );\n\n      setPeerEncryptionKeys(keyPairs);\n    };\n    deserializedEncryptionKeys();\n  }, [encryptionKeys]);\n\n  const handleConnectionData = async (connection, managedState, rawData) => {\n    const state = managedState;\n    const { privateKey, remotePublicKey, established, symmetricKey } =\n      peerEncryptionKeys.find(\n        (keyPair) => keyPair.userId === connection.peer,\n      ) ?? {};\n    let data = rawData;\n    if (symmetricKey) {\n      // debugger;\n      // const encrypted = (await encryptWithSymmetricKey(JSON.stringify(rawData), symmetricKey));\n      // console.log('encrypted symmetric', encrypted);\n\n      try {\n        data = JSON.parse(await decryptWithSymmetricKey(rawData, symmetricKey));\n        console.log(\"decrypted symmetric\", data);\n      } catch (err) {\n        console.log(\"error decrypting symmetric\", err, rawData);\n        data = rawData;\n      }\n    }\n    if (data.callback) {\n      const callback = pendingCallbacks.find((cb) => cb.id === data.callback);\n      if (callback) {\n        callback.recieved(data.payload);\n        setPendingCallbacks(\n          pendingCallbacks.filter((cb) => cb.id !== data.callback),\n        );\n        return;\n      }\n    }\n\n    if (\n      data.type &&\n      appiSchema[data.type] &&\n      appiSchema[data.type](state).length\n    ) {\n      const request = {\n        payload: data.payload,\n        // get sender from contacts by connectionId\n        sender: managedState.contacts.find(\n          (contact) => contact.connectionId === connection.peer,\n        )?.id,\n      };\n      const response = {\n        send: async (payload) => {\n          let payloadToSend = {\n            payload,\n            callback: data.callback,\n          };\n\n          if (symmetricKey) {\n            payloadToSend = await encryptWithSymmetricKey(\n              JSON.stringify({\n                payload,\n                callback: data.callback,\n              }),\n              symmetricKey,\n            ).catch((err) => {\n              console.log(\"error encrypting\", err);\n            });\n          }\n\n          connection.send(payloadToSend);\n        },\n      };\n      const next = (index) => {\n        if (index < appiSchema[data.type](state).length) {\n          appiSchema[data.type](state)[index](request, response, () => {\n            next(index + 1);\n          });\n        }\n      };\n      next(0);\n    }\n  };\n\n  const handleConnectionDataWithManagedState = (\n    connection,\n    managedState,\n    data,\n  ) => {\n    return handleConnectionData(connection, managedState, data);\n  };\n\n  const disconnectFromPeer = (peerId) => {\n    if (connections[peerId]) {\n      connections[peerId].close();\n      setConnections({ ...connections, [peerId]: null });\n      setActiveConnections(\n        Object.keys(connections).filter((c) => c !== peerId),\n      );\n    }\n  };\n\n  const connectToAllContacts = (peer) => {\n    // filter connected contacts and connect to the ones not connected.\n    const connectedContacts = Object.keys(connections).filter(\n      (contact) =>\n        connections[contact]?.peerConnection?.iceConnectionState ===\n        \"connected\",\n    );\n    const contactsToConnect = managedState.contacts.filter(\n      (contact) => !connectedContacts.includes(contact.connectionId),\n    );\n    contactsToConnect.forEach((contact) =>\n      connectToPeer(contact.connectionId, peer),\n    );\n\n    // filter connected contacts and disconnect from the ones not in the contacts list.\n    const contactsToDisconnect = connectedContacts\n      .filter(\n        (contact) =>\n          !managedState.contacts.find((c) => c.connectionId === contact),\n      )\n      .map((contact) => contact.connectionId);\n    const disconnectedContacts = Object.keys(connections).filter(\n      (contact) =>\n        connections[contact]?.peerConnection?.iceConnectionState ===\n        \"disconnected\",\n    );\n    [...contactsToDisconnect, ...disconnectedContacts].forEach((contact) =>\n      disconnectFromPeer(contact),\n    );\n  };\n\n  const handlePeerInitialisation = (newPeer) => {\n    try {\n      newPeer.off(\"open\");\n    } catch (err) {\n      console.log(\"error removing open listener\", err);\n    }\n    try {\n      newPeer.off(\"disconnected\");\n    } catch (err) {\n      console.log(\"error removing open listener\", err);\n    }\n    try {\n      newPeer.off(\"close\");\n    } catch (err) {\n      console.log(\"error removing open listener\", err);\n    }\n\n    newPeer.on(\"open\", (id) => {\n      console.log(\"My peer ID is: \" + id);\n      // setPeerId(id);\n      setPeer(newPeer);\n      setPeerHash(chance.hash());\n\n      // setInterval(() => {\n      //     connectToAllContacts(newPeer)\n      // }, 5000);\n      connectToAllContacts(newPeer);\n    });\n\n    newPeer.on(\"disconnected\", (...rest) => {\n      console.log(\"peer disconnected\", ...rest);\n\n      newPeer.reconnect();\n      setPeer(null);\n      setPeerHash(chance.hash());\n    });\n\n    newPeer.on(\"close\", (connection) => {\n      console.log(\"peer closed\", connection);\n      setPeer(null);\n      setPeerHash(chance.hash());\n    });\n  };\n\n  useEffect(() => {\n    if (!peer && !!storedPeerId && !!agreedToTerms) {\n      const newPeer = new Peer(storedPeerId, {\n        host: compiledProfile?.peerjsServer || \"0.peerjs.com\",\n      });\n      console.log(\"peer created\");\n\n      handlePeerInitialisation(newPeer);\n    } else {\n      if (!storedPeerId) {\n        if (peer) {\n          peer.destroy();\n        }\n        // generate a long random string\n        const newPeerId = chance.hash();\n        setPeerId(newPeerId);\n        setPeer(null);\n        setPeerHash(chance.hash());\n      }\n    }\n  }, [storedPeerId, agreedToTerms]);\n\n  useEffect(() => {\n    const newActiveConnections = Object.keys(connections).filter(\n      (c) => connections[c]?.peerConnection?.iceConnectionState === \"connected\",\n    );\n    if (\n      newActiveConnections.length !== activeConnections.length ||\n      !newActiveConnections.every((c) => activeConnections.includes(c))\n    ) {\n      console.log({ newActiveConnections, activeConnections });\n      setActiveConnections(newActiveConnections);\n      setPeerHash(chance.hash());\n    }\n\n    // setTimeout(() => setPeerHash(chance.hash()), 5000);\n  }, [peerHash]);\n\n  useEffect(() => {\n    if (peer) {\n      // peer.off('connection');\n      peer.on(\"connection\", (connection) => {\n        console.log(\"new connection\");\n        // initConnectionListender();\n        // connection.on('data', (data) => handleConnectionDataWithManagedState(connection, managedState, data));\n\n        // setInterval(() => {\n        // const newListener = data => peerOnDataHandler(data, connection);\n        // connection.off('data', newListener);\n        // connection.on('data', newListener);\n        // }, 1000);\n\n        connection.on(\"close\", (connection) => {\n          console.log(\"peer closed\", connection);\n\n          // setConnections({ ...connections, [connection?.peer]: null });\n          // useSetConnections to remove the key wuth the connection id from the connections object\n          setConnections((connections) => {\n            const newConnections = { ...connections };\n            delete newConnections[connection?.peer];\n            return newConnections;\n          });\n          setActiveConnections(\n            Object.keys(connections).filter((c) => c !== connection?.peer),\n          );\n\n          const remoteStreamId = calls.find(\n            (call) => call.peer !== connection?.peer,\n          )?._remoteStream?.id;\n\n          // const newStreams = streams.filter((stream) => stream.id !== remoteStreamId);\n\n          setCalls(calls.filter((call) => call.peer !== connection?.peer));\n          setCallsHash(chance.hash());\n\n          // setStreams(newStreams);\n        });\n\n        onConnection(\n          connection,\n          sendMessageWithCallback,\n          managedState,\n          Object.keys(connections).filter((c) => c !== connection?.peer),\n        );\n        setConnections({\n          ...connections,\n          [connection.peer]: connection,\n        });\n        setActiveConnections([...Object.keys(connections), connection.peer]);\n      });\n\n      peer.on(\"call\", async (call) => {\n        console.log(\"call received\", call);\n\n        call.on(\"stream\", (stream) => {\n          console.log(\"stream received from remote\", stream);\n          // setStreams((streams) => {\n          //     // do not add stream if it is already set\n          //     if (streams.find((s) => s.id === stream.id)) {\n          //         return streams;\n          //     }\n          //     return [...streams, stream];\n          // });\n        });\n        call.on(\"close\", () => {\n          endCall(call.peer);\n        });\n\n        setCalls([...calls, call]);\n        setCallsHash(chance.hash());\n      });\n    }\n  }, [peerHash, managedState, callsHash]);\n\n  const getManagedState = () => {\n    return managedState;\n  };\n\n  const connectToPeer = (peerId, peerOverride) => {\n    const connection = (peerOverride ?? peer)?.connect(peerId);\n    if (connection) {\n      connection.on(\"open\", () => {\n        console.log(\"connection opened\");\n        peerConnectionHandler(connection);\n        // connection.on('data', (data) => handleConnectionDataWithManagedState(connection, managedState, data));\n\n        // setInterval(() => {\n        // const newListener = data => peerOnDataHandler(data, connection);\n        // connection.off('data', newListener);\n        // connection.on('data', newListener);\n        // }, 1000);\n\n        setConnections({\n          ...connections,\n          [connection.peer]: connection,\n        });\n        setActiveConnections([...Object.keys(connections), connection.peer]);\n\n        onConnection(connection, sendMessageWithCallback, managedState, [\n          ...Object.keys(connections),\n          connection.peer,\n        ]);\n      });\n    }\n  };\n\n  const sendMessageWithCallback = async (peerId, message, connection) => {\n    const id = Math.random().toString(36).substr(2, 9);\n\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        reject(new Error(\"timeout for message:\" + JSON.stringify({ message })));\n      }, 60000);\n\n      setPendingCallbacks([\n        ...pendingCallbacks,\n        {\n          id,\n          recieved: (response) => {\n            clearTimeout(timeout);\n            console.log(\"callback recieved!\");\n            resolve(response);\n          },\n        },\n      ]);\n\n      sendMessage(\n        peerId,\n        {\n          ...message,\n          callback: id,\n        },\n        connection,\n      );\n    });\n  };\n\n  const sendMessage = async (peerId, message, connectionOverride) => {\n    const connection = connectionOverride ?? connections[peerId];\n    const { remotePublicKey, established } =\n      peerEncryptionKeys.find((keyPair) => keyPair.userId === peerId) ?? {};\n\n    if (connection) {\n      let payloadToSend = { ...message };\n\n      if (remotePublicKey && established) {\n        payloadToSend = await encrypt(JSON.stringify(message), remotePublicKey);\n      }\n      connection.send(payloadToSend);\n    }\n  };\n\n  const makeCall = async ({ peerId, video, audio, screen, cast }) => {\n    if (peerId) {\n      const stream = await navigator.mediaDevices[\n        screen ? \"getDisplayMedia\" : \"getUserMedia\"\n      ]({\n        video: cast ? { facingMode: \"environment\" } : !!video,\n        audio: audio ? true : false\n      });\n\n      const call = peer.call(peerId, stream, { metadata: { cast } });\n      call.on(\"stream\", function (stream) {\n        // B\n        // window.remoteAudio.srcObject = stream; // C\n        // window.remoteAudio.autoplay = true; // D\n        // window.peerStream = stream; //E\n        // showConnectedContent(); //F    });\n        console.log(\"stream received\", stream);\n        // setStreams((streams) => {\n        //     // do not add stream if it is already set\n        //     if (streams.find((s) => s.id === stream.id)) {\n        //         return streams;\n        //     }\n        //     return [...streams, stream];\n        // });\n      });\n\n      setCalls([...calls, call]);\n      setCallsHash(chance.hash());\n    }\n  };\n\n  const endCall = (peerId) => {\n    const call = calls.find((call) => call.peer === peerId);\n    call.close();\n    setCalls(calls.filter((call) => call.peer !== peerId));\n    setCallsHash(chance.hash());\n  };\n\n  return (\n    <PeerContext.Provider\n      value={{\n        peer,\n        activeConnections,\n        connections,\n        connectToPeer,\n        sendMessage,\n        sendMessageWithCallback,\n        calls,\n        streams,\n        callsLength: calls.length,\n        makeCall,\n        endCall,\n        peerHash,\n        callsHash,\n      }}\n    >\n      {children}\n    </PeerContext.Provider>\n  );\n}\n","// create a react hook that uses the peer context\n// it can take a peerId and provides helper methods to send and receive messages\n// it can also take a group and provides helper methods to send and receive messages to all users in the group\n\nimport { useContext, useEffect, useMemo } from \"react\";\nimport { PeerContext } from \"./PeerProvider\";\n\nexport default function usePeer(peersToConnect) {\n  const context = useContext(PeerContext);\n  // check to see if peer is connected else connect to them\n  const activeConnections = context.activeConnections;\n\n  const connectedPeers = useMemo(() => activeConnections, [activeConnections]);\n  const filteredPeersToConnect = Array.isArray(peersToConnect)\n    ? peersToConnect\n        .filter((peerId) => peerId !== context.peer?.id)\n        .filter((peerId) => !!peerId && !connectedPeers.includes(peerId))\n    : [peersToConnect];\n\n  filteredPeersToConnect.forEach((peerId) => {\n    if (peerId) {\n      context.connectToPeer(peerId);\n    }\n  });\n\n  // a method to send a message to a peer or group depending on if peerId or group is passed in\n  const sendMessage = async ({\n    type,\n    recipients,\n    payload,\n    callback = true,\n  }) => {\n    const responses = await Promise.all(\n      (recipients || peersToConnect)\n        .filter((peerId) => peerId && context.connections[peerId])\n        .map((peerId) => {\n          if (!callback) {\n            return context.sendMessage(peerId, { type, payload });\n          }\n          return context.sendMessageWithCallback(peerId, { type, payload });\n        }),\n    );\n\n    return responses;\n  };\n\n  const makeCall = async ({ recipients, ...rest } = {}) => {\n    (recipients || peersToConnect)\n      .filter((peerId) => peerId !== context.peer?.id)\n      .forEach(async (peerId) => {\n        if (!context.calls.find((call) => call.peer === peerId)) {\n          await context.makeCall({ peerId, ...rest });\n        }\n      });\n  };\n\n  const endCall = ({ recipients } = {}) => {\n    (recipients || peersToConnect)\n      .filter((peerId) => peerId !== context.peer?.id)\n      .forEach(async (peerId) => {\n        context.endCall(peerId);\n      });\n  };\n\n  // a method to make a call to a peer or a group depending on if peerId or group is passed in\n  // const makeCall = () => {\n  //     if (peerId) {\n  //         context.makeCall({peerId});\n  //     } else if (groupId) {\n  //         const group = context.groups.find((group) => group.id === groupId);\n  //         context.makeCall({groupId: group.id});\n  //     }\n  // };\n\n  // a method to end a call\n  // const endCall = () => {\n  //     if (peerId) {\n  //         context.endCall(peerId);\n  //     } else if (groupId) {\n  //         const group = context.groups.find((group) => group.id === groupId);\n  //         group.users.forEach((user) => {\n  //             context.endCall(user.id);\n  //         });\n  //     }\n  // };\n\n  // // for the peer or group specified, automatically handle incoming messages with the handler.\n  // // the handler is an array of functions like middleware function in expressjs\n  // useEffect(() => {\n  //     if (handlers) {\n\n  //     }\n  //     if (peerId) {\n  //         context.connections[peerId].on('data', (data) => {\n  //             handlers.forEach((handler) => {\n  //                 handler(data);\n  //             });\n  //         });\n  //     } else if (groupId) {\n  //         const group = context.groups.find((group) => group.id === groupId);\n  //         group.users.forEach((user) => {\n  //             context.connections[user.id].on('data', (data) => {\n  //                 handlers.forEach((handler) => {\n  //                     handler(data);\n  //                 });\n  //             });\n  //         });\n  //     }\n  // }, [peerId, groupId, handlers]);\n\n  return {\n    peer: context.peer,\n    sendMessage,\n    makeCall,\n    endCall,\n    activeConnections: context.activeConnections,\n    connections: context.connections,\n    connectToPeer: context.connectToPeer,\n    calls: context.calls,\n    // streams: context.calls.length > 0 ? context.calls.map(call => call._remoteStream) : [],\n    callsLength: context.callsLength,\n  };\n}\n","import { createSlice, current } from \"@reduxjs/toolkit\";\nimport Blockchain from \"../../blockchain/Blockchain\";\nimport { blockBuilders } from \"../../blockchain/chains/podChain\";\nimport { merge } from \"lodash\";\n\nconst initialState = [];\n\nconst chatsSlice = createSlice({\n  name: \"chats\",\n  initialState,\n  reducers: {\n    createNewPod(state, action) {\n      const {\n        id,\n        pendingBlocks: blocks,\n        pendingStorage: storage,\n      } = action.payload;\n      let chats = current(state);\n      let chat = chats.find((chat) => chat.id === id);\n\n      if (!chat) {\n        // const podBlockchain = new Blockchain({chain: action.payload.blockchain.chain});\n        // podBlockchain.addBlocks([\n        //     ...action.payload.members.map(member => blockBuilders().addMember({userId: member, from: action.payload.from})[0]),\n        //     ...blockBuilders().setPodName({name: action.payload.name, from: action.payload.from})\n        // ]);\n        // const pendingUpdates = podBlockchain.getUpdate();\n        const newChat = {\n          ...{\n            id: \"\",\n            users: [],\n            name: \"\",\n            avatar: \"\",\n            messages: [],\n          }, // some required defaults for legacy\n          ...action.payload,\n          blockchain: {\n            chain: [...blocks],\n            storage: { ...storage },\n          },\n        };\n        chats = [...chats, newChat];\n        return chats;\n      }\n\n      return chats;\n    },\n    removePod(state, action) {\n      // const index = state.findIndex(chat => chat.id === action.payload);\n      // return state.splice(index, 1);\n      const { podId } = action.payload;\n      let chats = current(state);\n      chats = chats.filter((chat) => chat.id !== podId);\n\n      return chats;\n    },\n    // =====================================================================\n    addUserToPod(state, action) {\n      const { podId, userId } = action.payload;\n      let chats = current(state);\n      let chat = chats.find((chat) => chat.id === podId);\n      // chat.messages = [...chat.messages, message];\n\n      chats = chats.map((chat) =>\n        chat.id != podId\n          ? chat\n          : {\n              ...chat,\n              members: [...chat.members.filter((m) => m !== userId), userId],\n            },\n      );\n      return chats;\n    },\n    removeUserFromConversationFromAllPods(state, action) {\n      const { userId } = action.payload;\n      let chats = current(state);\n      chats = chats.map((chat) => {\n        chat.members = chats.filter((member) => member !== userId);\n      });\n      return chats;\n    },\n    removeUserFromConversation(state, action) {\n      const { chatId, userId } = action.payload;\n      let chat = state.find((chat) => chat.id === chatId);\n      const index = chat.members.findIndex((member) => member === userId);\n      chat = {\n        ...chat,\n        members: chat.members.filter((member) => member !== userId),\n      };\n      return state;\n    },\n    addMessage(state, action) {\n      const { podId, message } = action.payload;\n      let chats = current(state);\n      // let chat = chats.find(chat => chat.id === podId);\n      // chat.messages = [...chat.messages, message];\n\n      // chats = chats\n      //     .map(chat => chat.id !== podId ? chat : { ...chat, messages: [...chat.messages, message] });\n      return chats;\n    },\n    // =====================================================================\n\n    updatePodName(state, action) {\n      const { podId, name } = action.payload;\n      let chats = current(state);\n      const chat = chats.find((chat) => chat.id === podId);\n\n      chats = chats\n        .filter((chat) => chat.id !== podId)\n        .concat({ ...chat, name });\n\n      return chats;\n    },\n    updatePodUnreadCount(state, action) {\n      const { podId, unreadCount } = action.payload;\n      let chats = current(state);\n      // chats = chats.map(chat => chat.id !== podId ? chat : { ...chat, unreadCount: unreadCount === 0 ? 0 : chat.unreadCount + unreadCount });\n      chats = chats.map((chat) =>\n        chat.id !== podId ? chat : { ...chat, unreadCount },\n      );\n      return chats;\n    },\n    setShouldHangup(state, action) {\n      const { podId, shouldHangup } = action.payload;\n      let chats = current(state);\n      chats = chats.map((chat) =>\n        chat.id !== podId ? chat : { ...chat, shouldHangup },\n      );\n      return chats;\n    },\n    setPods(state, action) {\n      return action.payload;\n    },\n    setPeerIsTyping(state, action) {\n      const { podId, peerDisplayName, isTyping } = action.payload;\n      let chats = current(state);\n      chats = chats.map((chat) =>\n        chat.id !== podId\n          ? chat\n          : {\n              ...chat,\n              peerIsTyping: {\n                ...chat.peerIsTyping,\n                [peerDisplayName]: isTyping,\n              },\n            },\n      );\n      return chats;\n    },\n    setEphemeralStorage(state, action) {\n      const { podId, ephemeralStorage } = action.payload;\n      let chats = current(state);\n      console.log(\"setting ephemeralStorage\", ephemeralStorage);\n      chats = chats.map((chat) =>\n        chat.id !== podId\n          ? chat\n          : { ...chat, ephemeralStorage: ephemeralStorage },\n      );\n      console.log({ \"new ephemera update\": chats, podId, ephemeralStorage });\n      return chats;\n    },\n    addToBlockchain(state, action) {\n      const {\n        podId,\n        blocks,\n        block,\n        storage = {},\n        append = false,\n      } = action.payload;\n      let chats = current(state);\n\n      let chat = chats.find((chat) => chat.id === podId) ?? {};\n      // const podBlockchain = new Blockchain({chain: chat.blockchain.chain, storage: chat.blockchain.storage});\n      // if (blocks?.length > 0) podBlockchain.addBlocks(blocks, append);\n      // if (block) podBlockchain.addBlock(block, append);\n      // const pendingUpdates = podBlockchain.getUpdate();\n\n      chat = {\n        ...chat,\n        blockchain: {\n          ...(chat?.blockchain || {}),\n          chain: [...(chat?.blockchain?.chain || []), ...blocks],\n          storage: {\n            ...storage,\n            ...chat?.blockchain?.storage,\n          },\n        },\n      };\n\n      chats = chats.map((c) => (c.id !== podId ? c : chat));\n      return chats;\n    },\n    removeFileFromPod: (state, action) => {\n      const { podId, fileId } = action.payload;\n      let chats = current(state);\n      let chat = chats.find((chat) => chat.id === podId) ?? {};\n      chat = {\n        ...chat,\n        blockchain: {\n          ...(chat?.blockchain || {}),\n          storage: {\n            ...chat?.blockchain?.storage,\n            [fileId]: undefined,\n          },\n        },\n      };\n      chats = chats.map((c) => (c.id !== podId ? c : chat));\n      return chats;\n    },\n  },\n});\n\nexport const {\n  createNewPod,\n  removePod,\n  addUserToPod,\n  removeUserFromConversationFromAllPods,\n  removeUserFromConversation,\n  addMessage,\n  updatePodName,\n  updatePodUnreadCount,\n  setPods,\n  setShouldHangup,\n  setPeerIsTyping,\n  setEphemeralStorage,\n  addToBlockchain,\n  removeFileFromPod,\n} = chatsSlice.actions;\n\nexport default chatsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {};\n\nconst storageSlice = createSlice({\n  name: \"storage\",\n  initialState,\n  reducers: {\n    addStorageItem(state, action) {\n      const { podId, item } = action.payload;\n\n      if (!state[podId]) {\n        state[podId] = [];\n      }\n\n      const existingItem = state[podId].find(\n        (existing) => existing?.sha === item.sha,\n      );\n\n      if (!existingItem) {\n        state[podId].push(item);\n      }\n    },\n    removeStorageItem(state, action) {\n      const { podId, itemId } = action.payload;\n\n      if (state[podId]) {\n        state[podId] = state[podId].filter((item) => item.sha !== itemId);\n\n        if (state[podId].length === 0) {\n          delete state[podId];\n        }\n      }\n    },\n    updateStorageItem(state, action) {\n      const { podId, updatedItem } = action.payload;\n\n      if (state[podId]) {\n        const index = state[podId].findIndex(\n          (item) => item.sha === updatedItem.sha,\n        );\n\n        if (index !== -1) {\n          state[podId][index] = updatedItem;\n        }\n      }\n    },\n    setStorageForPod(state, action) {\n      const { podId, storage } = action.payload;\n      state[podId] = storage;\n    },\n  },\n});\n\nexport const {\n  addStorageItem,\n  removeStorageItem,\n  updateStorageItem,\n  setStorageForPod,\n} = storageSlice.actions;\n\nexport default storageSlice.reducer;\n","import { createSlice, current } from \"@reduxjs/toolkit\";\n\nexport const userProfileSlice = createSlice({\n  name: \"userProfile\",\n  initialState: {\n    displayName: \"\",\n    id: null,\n    connectionId: null,\n    pastConnectionIds: [],\n    avatar: \"https://source.unsplash.com/random/400x200?avatar\",\n    agreedToTerms: [],\n    inAppNotification: true,\n    browserNotification: false,\n    blockchain: {\n      chain: [],\n      storage: {},\n    },\n  },\n  reducers: {\n    addToBlockchain(state, action) {\n      const {\n        blocks = [],\n        block,\n        storage = {},\n        append = false,\n      } = action.payload;\n      let profile = current(state);\n\n      profile = {\n        ...profile,\n        blockchain: {\n          ...(profile?.blockchain || {}),\n          chain: [\n            ...(profile?.blockchain?.chain || []),\n            ...blocks,\n            block,\n          ].filter((b) => !!b),\n          storage: {\n            ...storage,\n            ...profile?.blockchain?.storage,\n          },\n        },\n      };\n\n      return profile;\n    },\n    updateUsername: (state, action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.displayName = action.payload;\n    },\n    updateAvatar: (state, action) => {\n      state.avatar = action.payload;\n    },\n    updatePeerId: (state, action) => {\n      state.pastConnectionIds?.push(state.id);\n      state.id = action.payload;\n      state.connectionId = action.payload;\n    },\n    updateAgreedToTerms: (state, action) => {\n      const newState = current(state);\n      state.agreedToTerms = [...newState.agreedToTerms, action.payload];\n    },\n    setUserProfile: (state, action) => {\n      state.displayName = action.payload.displayName;\n      state.id = action.payload.id;\n      state.connectionId = action.payload.connectionId;\n      state.pastConnectionIds = action.payload.pastConnectionIds;\n      state.avatar = action.payload.avatar;\n      state.agreedToTerms = action.payload.agreedToTerms;\n    },\n    setInAppNotification: (state, action) => {\n      state.inAppNotification = action.payload;\n    },\n    setBrowserNotification: (state, action) => {\n      state.browserNotification = action.payload;\n    },\n    setEncryptionSignature: (state, action) => {\n      state.encryptionSignature = action.payload;\n    },\n    logout: () => {}, // placeholder needed to generate dispatch function\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  updateUsername,\n  updatePeerId,\n  updateAgreedToTerms,\n  setUserProfile,\n  updateAvatar,\n  logout,\n  setInAppNotification,\n  setBrowserNotification,\n  addToBlockchain,\n  setEncryptionSignature,\n} = userProfileSlice.actions;\n\nexport default userProfileSlice.reducer;\n","import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport backend from \"i18next-http-backend\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n  .use(detector)\n  .use(backend)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    fallbackLng: \"en\", // use en if detected lng is not available\n    saveMissing: true, // send not translated keys to endpoint\n    resources: {\n      en: {\n        translation: {\n          common: {\n            inAppNotification: \"In-app Notifications\",\n            browserNotification: \"Browser Notifications\",\n            more: \"More\",\n          },\n          components: {\n            cryptoSignature: \"Crypto Signature\",\n            connectToPeer: {\n              connectToPeer: \"Connect to a Peer\",\n              shareLink: \"Share link to connect\",\n              shareToConnect: \"Share to connect\",\n              enterLink: \"Enter link from peer to connect\",\n              shareQr: \"Connect by QR\",\n              scanQr: \"Scan QR code from peer to connect\",\n              stopScanning: \"Stop Scanning\",\n              shareWebRtcQr: \"Connect by WebRTC\",\n            },\n            menuItems: {\n              info: \"Info\",\n              about: \"About\",\n              docs: \"Docs\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              youtube: \"Youtube\",\n              options: \"Options\",\n              language: \"Language\",\n              lightMode: \"Light mode\",\n              darkMode: \"Dark mode\",\n              fullscreen: \"Fullscreen\",\n              exitFullscreen: \"Exit fullscreen\",\n              install: \"Install app\",\n              downloadZip: \"Download .zip\",\n              labs: \"Labs\",\n              sponsor: \"Sponsor\",\n              contact: \"Contact\",\n              requestingToInstall: \"Requesting browser to install app\",\n              installPossible:\n                \"👍 Install possible. Try from your browser settings.\",\n              installDismissed:\n                \"👎 Autoinstall dismissed. You can install through your browser.\",\n              installFailed:\n                \"👎 Autoinstall failed. You might be able to install through your browser.\",\n              installNotSupported:\n                \"👎 Autoinstall failed. You might be able to install through your browser.\",\n              profile: \"Profile\",\n              terms: \"Terms\",\n              privacy: \"Privacy\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Welcome\",\n            setProfile: \"Set Profile (optional)\",\n            setPreference: \"Set Preferences (optional)\",\n            inAppNotification: \"In-app Notifications\",\n            browserNotification: \"Browser Notifications\",\n            goToTermsAndConditions: \"Read Terms and Conditions\",\n            goToPrivacyPolicy: \"Read Privacy Policy\",\n            termsAgreement:\n              \" I agree to these Terms and Conditions and privacy policy, and I acknowledge that this app is currently in a testing phase. I understand that features and functionalities are subject to change.\",\n            connect: \"Connect\",\n            loadProfileFromFile: \"Load Profile from File\",\n            setAvatar: \"Set Avatar from file\",\n            displayName: \"Display Name\",\n            cryptoSignature: \"Crypto Signature\",\n            connectionId: \"Connection ID\",\n            decentralized: \"Decentralized - Experience true privacy with our P2P chat app. No centralized servers, no hidden data storage—just secure, direct conversations.\",\n            noInstall: \"No Install/Registration - Start communicating right away without worrying about lengthy sign-up processes. Jump in and connect instantly.\",\n            p2pCalls: \"Video Calls - More than just a chat app, our platform facilitates face-to-face conversations. Enjoy clear, efficient video calls wherever you are.\",\n            pushNotifications: \"Push Notifications - Stay informed and never miss important updates. Our push notifications ensure you're always up-to-date with your conversations.\",\n            dataImportExport: \"Data Import/Export - Control your data like never before. With our easy export and import feature, your data is always portable, always yours.\",\n            agnostic: \"OS Agnostic - Freedom to use your preferred platform. Whether you're on Windows, MacOS, Linux, or prefer a specific browser, we've got you covered.\",\n            welcome:\n              \"positive-intentions is a decentralised, browser-agnostic and no-registration-required P2P chat application providing secure messaging, video calls and data ownership with push notifications and effortless data export/import. All encapsulated within a JavaScript-based Progressive Web App.\",\n            featuresInclude:\n              \"Note: This app is a technical proof-of-concept and a work in progress. Some of the features include:\",\n            noCookies: \"No cookies\",\n            noRegistration: \"No registration\",\n            noInstalling: \"No installing\",\n            groupMessaging: \"Group messaging\",\n            textMessaging: \"Text messaging\",\n            multimediaMessaging: \"Multimedia messaging\",\n            videoCalls: \"Video calls\",\n            dataOwnership: \"Data ownership\",\n            screensharing: \"Screensharing (on desktop browsers)\",\n            fileTransfer: \"File transfer\",\n            getStarted:\n              \"Begin by creating a profile. Rest assured, your profile stays on your device—no servers involved and no personal info required.\",\n          },\n          contactsPage: {\n            pageTitle: \"Contacts\",\n          },\n          profilePage: {\n            pageTitle: \"Profile\",\n            changeAvatar: \"Change Avatar\",\n            displayName: \"Display Name\",\n            more: \"More\",\n            regenerateConnectionId: \"Regenerate Connection ID\",\n            preferences: \"Preferences\",\n            backupProfile: \"Backup Profile\",\n            logout: \"Logout\",\n          },\n          podsPage: {\n            pageTitle: \"Pods\",\n            social: \"Social\",\n            cloud: \"Cloud\",\n            network: \"Network\",\n            devices: \"Devices\",\n            storage: \"Storage\",\n            gram: \"Gram\",\n            verse: \"Verse\",\n            ai: \"AI\",\n            qr: \"QR\",\n            webrtc: \"WebRTC\",\n            hands: \"Hand\",\n            vinnc: \"Vinn-C\",\n            map: \"Map\",\n            encrypt: \"Encrypt\",\n            commingSoon: \"Coming Soon\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"Contact Display Name\",\n            goToPodWith: \"Go to Pod with {{displayName}}\",\n            createNewPodWith: \"Create new Pod with {{displayName}}\",\n            podName: \"Pod Name\",\n            createPod: \"Create Pod\",\n            peerId: \"Peer ID\",\n            connectionId: \"Connection ID\",\n            registerNewDevice: \"Register New Device\",\n            blockContact: \"Block Contact\",\n          },\n          podPage: {\n            podDetails: \"Pod Details\",\n            files: \"Files\",\n            screenshare: \"Screenshare\",\n            cast: \"Cast\",\n            videoCall: \"Video Call\",\n            call: \"Call\",\n            replyingTo: \"Replying to {{displayName}}:\",\n            cancelReply: \"Cancel Reply\",\n            goToRepliedMessage: \"Go to replied message\",\n          },\n          podDetailsPage: {\n            podName: \"Pod Name\",\n            podId: \"Pod ID\",\n            addExistingPeerToPod: \"Add Existing Peer to Pod\",\n          },\n        },\n      },\n      // gujrati fill in the language\n      gu: {\n        translation: {\n          common: {\n            inAppNotification: \"એપ્લિકેશન નોટિફિકેશન્સ\",\n            browserNotification: \"બ્રાઉઝર નોટિફિકેશન્સ\",\n            more: \"વધુ\",\n          },\n          components: {\n            cryptoSignature: \"ક્રિપ્ટો સિગ્નેચર\",\n            connectToPeer: {\n              connectToPeer: \"પીર સાથે જોડાઓ\",\n              shareLink: \"જોડવા માટે લિંક શેર કરો\",\n              shareToConnect: \"જોડવા માટે શેર કરો\",\n              enterLink: \"પીર સાથે જોડવા માટે લિંક દાખલ કરો\",\n              shareQr: \"જોડવા માટે QR કોડ શેર કરો\",\n              scanQr: \"પીર સાથે જોડવા માટે QR કોડ સ્કેન કરો\",\n              stopScanning: \"સ્કેનિંગ બંધ કરો\",\n            },\n            menuItems: {\n              info: \"માહિતી\",\n              about: \"વિશે\",\n              docs: \"ડોક્યુમેન્ટ્સ\",\n              github: \"ગિટહબ\",\n              reddit: \"રેડિટ\",\n              options: \"વિકલ્પો\",\n              language: \"ભાષા\",\n              lightMode: \"પ્રકાશ મોડ\",\n              darkMode: \"ડાર્ક મોડ\",\n              fullscreen: \"પૂર્ણ સ્ક્રીન\",\n              exitFullscreen: \"પૂર્ણ સ્ક્રીન બહાર જાઓ\",\n              install: \"એપ્લિકેશન ઇન્સ્ટોલ કરો\",\n              requestingToInstall:\n                \"બ્રાઉઝરને એપ્લિકેશન ઇન્સ્ટોલ કરવા માટે વિનંતી કરી રહ્યો છે\",\n              installPossible:\n                \"👍 ઇન્સ્ટોલેશન શક્ય છે. તમારા બ્રાઉઝર સેટિંગ્સમાંથી પ્રયાસ કરો.\",\n              installDismissed:\n                \"👎 આટોઇન્સ્ટોલેશન નકાર્યું. તમે તમારા બ્રાઉઝર દ્વારા ઇન્સ્ટોલ કરી શકો છો.\",\n              installFailed:\n                \"👎 આટોઇન્સ્ટોલેશન નિષ્ફળ રહ્યું. તમે બ્રાઉઝર દ્વારા ઇન્સ્ટોલ કરી શકો છો.\",\n              installNotSupported:\n                \"👎 આટોઇન્સ્ટોલેશન નિષ્ફળ રહ્યું. તમે બ્રાઉઝર દ્વારા ઇન્સ્ટોલ કરી શકો છો.\",\n              profile: \"પ્રોફાઇલ\",\n              terms: \"શરતો\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"પ્રોફાઇલ બનાવો\",\n            setProfile: \"પ્રોફાઇલ સેટ કરો\",\n            setPreference: \"પસંદગી સેટ કરો\",\n            inAppNotification: \"એપ્લિકેશન નોટિફિકેશન્સ\",\n            browserNotification: \"બ્રાઉઝર નોટિફિકેશન્સ\",\n            termsAgreement:\n              \" હું આ શરતો અને નિયમોને માન્ય કરું છું, અને હું માન્ય કરું છું કે આ એપ્લિકેશન હાલમાં ટેસ્ટિંગ ફેઝમાં છે. હું સમજું છું કે ફિચર્સ અને કાર્યક્ષમતાઓ બદલાઈ શકે છે.\",\n            connect: \"જોડાઓ\",\n            loadProfileFromFile: \"ફાઇલમાંથી પ્રોફાઇલ લોડ કરો\",\n            setAvatar: \"અવતાર સેટ કરો\",\n            displayName: \"ડિસ્પ્લે નામ\",\n            cryptoSignature: \"ક્રિપ્ટો સિગ્નેચર\",\n            welcome:\n              \"પોઝિટિવ-ઇન્ટેન્શન્સ એક ડિસેન્ટ્રલાઇઝ્ડ, બ્રાઉઝર-અગ્નોસ્ટિક અને કોઈ રજીસ્ટ્રેશન જરૂરી નથી P2P ચેટ એપ્લિકેશન છે જે સુરક્ષિત મેસેજિંગ, વિડિઓ કૉલ અને ડેટા માલિકીને પ્રદાન કરે છે જેથી પુશ નોટિફિકેશન અને ડેટા એક્સપોર્ટ / ઇમ્પોર્ટ સહજ છે. બધું જે જાવાસ્ક્રિપ્ટ આધારિત પ્રોગ્રેસિવ વેબ એપ્લિકેશનમાં બંધ કરવામાં આવે છે.\",\n            featuresInclude:\n              \"નોંધ: આ એપ્લિકેશન એક ટેકનિકલ પ્રુફ-ઓફ-કોન્સેપ્ટ અને કામગીરીની પ્રક્રિયા છે. કેટલાક ફિચર્સ નીચે આપેલા છે:\",\n            noCookies: \"કોઈ કુકીઝ નથી\",\n            noRegistration: \"કોઈ રજીસ્ટ્રેશન નથી\",\n            noInstalling: \"કોઈ ઇન્સ્ટોલ નથી\",\n            groupMessaging: \"ગ્રુપ મેસેજિંગ\",\n            textMessaging: \"ટેક્સ્ટ મેસેજિંગ\",\n            multimediaMessaging: \"મલ્ટીમીડિયા મેસેજિંગ\",\n            videoCalls: \"વિડિઓ કૉલ\",\n            dataOwnership: \"ડેટા માલિકી\",\n            screensharing: \"સ્ક્રીનશેરિંગ (ડેસ્કટોપ બ્રાઉઝર્સ પર)\",\n            fileTransfer: \"ફાઇલ ટ્રાન્સફર\",\n            getStarted:\n              \"પ્રોફાઇલ બનાવીને શરૂ કરો. આરામથી રહો, તમારી પ્રોફાઇલ તમારા ડિવાઇસ પર રહે છે - કોઈ સર્વરો શામેલ નથી અને કોઈ વ્યક્તિગત માહિતી જરૂરી નથી.\",\n          },\n          contactsPage: {\n            pageTitle: \"સંપર્કો\",\n          },\n          profilePage: {\n            pageTitle: \"પ્રોફાઇલ\",\n            changeAvatar: \"અવતાર બદલો\",\n            displayName: \"ડિસ્પ્લે નામ\",\n            more: \"વધુ\",\n            regenerateConnectionId: \"કનેક્શન ID ફરીથી ઉત્પન્ન કરો\",\n            preferences: \"પસંદગીઓ\",\n            backupProfile: \"બેકઅપ પ્રોફાઇલ\",\n            logout: \"લોગ આઉટ\",\n          },\n          podsPage: {\n            pageTitle: \"પોડ્સ\",\n            social: \"સમાજિક\",\n            cloud: \"મેઘ\",\n            network: \"નેટવર્ક\",\n            devices: \"ઉપકરણો\",\n            storage: \"સ્ટોરેજ\",\n            commingSoon: \"ટકે આવશે\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"સંપર્ક ડિસ્પ્લે નામ\",\n            goToPodWith: \"{{displayName}} સાથે પોડ પર જાઓ\",\n            createNewPodWith: \"{{displayName}} સાથે નવો પોડ બનાવો\",\n            podName: \"પોડ નામ\",\n            createPod: \"પોડ બનાવો\",\n            peerId: \"પીર ID\",\n            connectionId: \"કનેક્શન ID\",\n            registerNewDevice: \"નવું ઉપકરણ નોંધાવો\",\n            blockContact: \"સંપર્ક બ્લોક કરો\",\n          },\n          podPage: {\n            podDetails: \"પોડ વિગતો\",\n            files: \"ફાઇલો\",\n            screenshare: \"સ્ક્રીનશેર\",\n            videoCall: \"વિડિઓ કૉલ\",\n            call: \"કૉલ\",\n          },\n          podDetailsPage: {\n            podName: \"પોડ નામ\",\n            podId: \"પોડ ID\",\n            addExistingPeerToPod: \"પોડમાં હાજર પીર ઉમેરો\",\n          },\n        },\n      },\n      // spanish\n      es: {\n        translation: {\n          common: {\n            inAppNotification: \"Notificaciones de la aplicación\",\n            browserNotification: \"Notificaciones del navegador\",\n            more: \"Más\",\n          },\n          components: {\n            cryptoSignature: \"Firma criptográfica\",\n            connectToPeer: {\n              connectToPeer: \"Conéctate a un par\",\n              shareLink: \"Compartir enlace para conectar\",\n              shareToConnect: \"Compartir para conectar\",\n              enterLink: \"Ingrese el enlace del par para conectarse\",\n              shareQr: \"Compartir código QR para conectar\",\n              scanQr: \"Escanee el código QR del par para conectarse\",\n              stopScanning: \"Detener el escaneo\",\n            },\n            menuItems: {\n              info: \"Información\",\n              about: \"Acerca de\",\n              docs: \"Documentos\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Opciones\",\n              language: \"Idioma\",\n              lightMode: \"Modo claro\",\n              darkMode: \"Modo oscuro\",\n              fullscreen: \"Pantalla completa\",\n              exitFullscreen: \"Salir de pantalla completa\",\n              install: \"Instalar aplicación\",\n              requestingToInstall:\n                \"Solicitando al navegador que instale la aplicación\",\n              installPossible:\n                \"👍 Instalación posible. Intente desde la configuración de su navegador.\",\n              installDismissed:\n                \"👎 Instalación automática descartada. Puede instalar a través de su navegador.\",\n              installFailed:\n                \"👎 Instalación automática fallida. Es posible que pueda instalar a través de su navegador.\",\n              installNotSupported:\n                \"👎 Instalación automática fallida. Es posible que pueda instalar a través de su navegador.\",\n              profile: \"Perfil\",\n              terms: \"Condiciones\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Crear perfil\",\n            setProfile: \"Establecer perfil\",\n            setPreference: \"Establecer preferencias\",\n            inAppNotification: \"Notificaciones de la aplicación\",\n            browserNotification: \"Notificaciones del navegador\",\n            termsAgreement:\n              \"Acepto estos Términos y condiciones, y reconozco que esta aplicación se encuentra actualmente en una fase de prueba. Entiendo que las características y funcional\",\n            connect: \"Conectar\",\n            loadProfileFromFile: \"Cargar perfil desde archivo\",\n            setAvatar: \"Establecer avatar\",\n            displayName: \"Nombre para mostrar\",\n            cryptoSignature: \"Firma criptográfica\",\n            welcome:\n              \"positive-intentions es una aplicación de chat P2P descentralizada, independiente del navegador y sin registro que proporciona mensajería segura, videollamadas y propiedad de datos con notificaciones push y exportación / importación de datos sin esfuerzo. Todo encapsulado dentro de una aplicación web progresiva basada en JavaScript.\",\n            featuresInclude:\n              \"Nota: esta aplicación es una prueba de concepto técnico y un trabajo en progreso. Algunas de las características incluyen:\",\n            noCookies: \"Sin cookies\",\n            noRegistration: \"Sin registro\",\n            noInstalling: \"Sin instalación\",\n            groupMessaging: \"Mensajería de grupo\",\n            textMessaging: \"Mensajería de texto\",\n            multimediaMessaging: \"Mensajería multimedia\",\n            videoCalls: \"Videollamadas\",\n            dataOwnership: \"Propiedad de datos\",\n            screensharing: \"Compartir pantalla (en navegadores de escritorio)\",\n            fileTransfer: \"Transferencia de archivos\",\n            getStarted:\n              \"Comience creando un perfil. Tenga la seguridad de que su perfil permanece en su dispositivo, sin servidores involucrados y sin información personal requerida.\",\n          },\n          contactsPage: {\n            pageTitle: \"Contactos\",\n          },\n          profilePage: {\n            pageTitle: \"Perfil\",\n            changeAvatar: \"Cambiar avatar\",\n            displayName: \"Nombre para mostrar\",\n            more: \"Más\",\n            regenerateConnectionId: \"Regenerar ID de conexión\",\n            preferences: \"Preferencias\",\n            backupProfile: \"Copia de seguridad del perfil\",\n            logout: \"Cerrar sesión\",\n          },\n          podsPage: {\n            pageTitle: \"Vainas\",\n            social: \"Social\",\n            cloud: \"Nube\",\n            network: \"Red\",\n            devices: \"Dispositivos\",\n            storage: \"Almacenamiento\",\n            commingSoon: \"Próximamente\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"Nombre para mostrar del contacto\",\n            goToPodWith: \"Ir al Pod con {{displayName}}\",\n            createNewPodWith: \"Crear nuevo Pod con {{displayName}}\",\n            podName: \"Nombre del Pod\",\n            createPod: \"Crear Pod\",\n            peerId: \"ID de par\",\n            connectionId: \"ID de conexión\",\n            registerNewDevice: \"Registrar nuevo dispositivo\",\n            blockContact: \"Bloquear contacto\",\n          },\n          podPage: {\n            podDetails: \"Detalles del pod\",\n            files: \"Archivos\",\n            screenshare: \"Compartir pantalla\",\n            videoCall: \"Video llamada\",\n            call: \"Llamar\",\n          },\n          podDetailsPage: {\n            podName: \"Nombre del Pod\",\n            podId: \"ID de Pod\",\n            addExistingPeerToPod: \"Agregar par existente al Pod\",\n          },\n        },\n      },\n      // mandarin\n      zh: {\n        translation: {\n          common: {\n            inAppNotification: \"应用程序通知\",\n            browserNotification: \"浏览器通知\",\n            more: \"更多\",\n          },\n          components: {\n            cryptoSignature: \"加密签名\",\n            connectToPeer: {\n              connectToPeer: \"连接到对等\",\n              shareLink: \"分享链接以连接\",\n              shareToConnect: \"分享以连接\",\n              enterLink: \"输入对等连接的链接\",\n              shareQr: \"分享QR码以连接\",\n              scanQr: \"扫描对等连接的QR码\",\n              stopScanning: \"停止扫描\",\n            },\n            menuItems: {\n              info: \"信息\",\n              about: \"关于\",\n              docs: \"文档\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"选项\",\n              language: \"语言\",\n              lightMode: \"亮色模式\",\n              darkMode: \"暗色模式\",\n              fullscreen: \"全屏\",\n              exitFullscreen: \"退出全屏\",\n              install: \"安装应用\",\n              requestingToInstall: \"请求浏览器安装应用\",\n              installPossible: \"👍 可以安装。请从浏览器设置尝试。\",\n              installDismissed: \"👎 自动安装已取消。您可以通过浏览器安装。\",\n              installFailed: \"👎 自动安装失败。您可能可以通过浏览器安装。\",\n              installNotSupported:\n                \"👎 自动安装失败。您可能可以通过浏览器安装。\",\n              profile: \"个人资料\",\n              terms: \"条款\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"创建个人资料\",\n            setProfile: \"设置个人资料\",\n            setPreference: \"设置偏好\",\n            inAppNotification: \"应用程序通知\",\n            browserNotification: \"浏览器通知\",\n            termsAgreement:\n              \"我同意这些条款和条件，并承认该应用程序目前处于测试阶段。我了解功能和功能可能会发生变化。\",\n            connect: \"连接\",\n            loadProfileFromFile: \"从文件加载个人资料\",\n            setAvatar: \"设置头像\",\n            displayName: \"显示名称\",\n            cryptoSignature: \"加密签名\",\n            welcome:\n              \"positive-intentions是一个独立的、独立的、无注册的P2P聊天应用程序，提供安全的消息传递、视频通话和数据所有权，具有推送通知和轻松的数据导出/导入。所有这些都包含在基于JavaScript的渐进式Web应用程序中。\",\n            featuresInclude:\n              \"注意：此应用程序是技术概念验证和正在进行的工作。一些功能包括：\",\n            noCookies: \"没有cookies\",\n            noRegistration: \"没有注册\",\n            noInstalling: \"没有安装\",\n            groupMessaging: \"群组消息\",\n            textMessaging: \"文字消息\",\n            multimediaMessaging: \"多媒体消息\",\n            videoCalls: \"视频通话\",\n            dataOwnership: \"数据所有权\",\n            screensharing: \"屏幕共享（在桌面浏览器上）\",\n            fileTransfer: \"文件传输\",\n            getStarted:\n              \"通过创建个人资料开始。放心，您的个人资料保留在设备上，没有服务器参与，也不需要个人信息。\",\n          },\n          contactsPage: {\n            pageTitle: \"联系人\",\n          },\n          profilePage: {\n            pageTitle: \"个人资料\",\n            changeAvatar: \"更改头像\",\n            displayName: \"显示名称\",\n            more: \"更多\",\n            regenerateConnectionId: \"重新生成连接ID\",\n            preferences: \"偏好\",\n            backupProfile: \"备份个人资料\",\n            logout: \"登出\",\n          },\n          podsPage: {\n            // i want it phonetically \"pods\" nut in mandarin\n            pageTitle: \"豆荚\",\n            social: \"社会\",\n            cloud: \"云\",\n            network: \"网络\",\n            devices: \"设备\",\n            storage: \"存储\",\n            commingSoon: \"即将推出\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"联系人显示名称\",\n            goToPodWith: \"转到{{displayName}}的豆荚\",\n            createNewPodWith: \"与{{displayName}}创建新豆荚\",\n            podName: \"豆荚名称\",\n            createPod: \"创建豆荚\",\n            peerId: \"对等ID\",\n            connectionId: \"连接ID\",\n            registerNewDevice: \"注册新设备\",\n            blockContact: \"阻止联系人\",\n          },\n          peerId: \"对等ID\",\n          connectionId: \"连接ID\",\n          registerNewDevice: \"注册新设备\",\n          blockContact: \"阻止联系人\",\n        },\n        podPage: {\n          podDetails: \"豆荚详情\",\n          files: \"档案\",\n          screenshare: \"屏幕共享\",\n          videoCall: \"视频通话\",\n          call: \"电话\",\n        },\n        podDetailsPage: {\n          podName: \"豆荚名称\",\n          addExistingPeerToPod: \"将现有对等添加到Pod\",\n        },\n      },\n      // hindi\n      hi: {\n        translation: {\n          common: {\n            inAppNotification: \"ऐप अधिसूचना\",\n            browserNotification: \"ब्राउज़र अधिसूचना\",\n            more: \"अधिक\",\n          },\n          components: {\n            cryptoSignature: \"क्रिप्टो हस्ताक्षर\",\n            connectToPeer: {\n              connectToPeer: \"पीर से कनेक्ट करें\",\n              shareLink: \"कनेक्ट करने के लिए लिंक साझा करें\",\n              shareToConnect: \"कनेक्ट करने के लिए साझा करें\",\n              enterLink: \"कनेक्ट करने के लिए पीर से लिंक दर्ज करें\",\n              shareQr: \"कनेक्ट करने के लिए QR कोड साझा करें\",\n              scanQr: \"पीर से कनेक्ट करने के लिए QR कोड स्कैन करें\",\n              stopScanning: \"स्कैनिंग रोकें\",\n            },\n            menuItems: {\n              info: \"जानकारी\",\n              about: \"के बारे में\",\n              docs: \"दस्तावेज़\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"विकल्प\",\n              language: \"भाषा\",\n              lightMode: \"प्रकाश मोड\",\n              darkMode: \"डार्क मोड\",\n              fullscreen: \"पूर्ण स्क्रीन\",\n              exitFullscreen: \"पूर्ण स्क्रीन से बाहर निक लें\",\n              install: \"ऐप स्थापित करें\",\n              requestingToInstall:\n                \"ऐप स्थापित करने के लिए ब्राउज़र को अनुरोध कर रहा है\",\n              installPossible:\n                \"👍 स्थापना संभव है। अपने ब्राउज़र सेटिंग्स से प्रयास करें।\",\n              installDismissed:\n                \"👎 ऑटोस्थापन खारिज कर दिया गया है। आप अपने ब्राउज़र के माध्यम से स्थापित कर सकते हैं।\",\n              installFailed:\n                \"👎 ऑटोस्थापन विफल हो गया। आप अपने ब्राउज़र के माध्यम से स्थापित कर सकते हैं।\",\n              installNotSupported:\n                \"👎 ऑटोस्थापन विफल हो गया। आप अपने ब्राउज़र के माध्यम से स्थापित कर सकते हैं।\",\n              profile: \"प्रोफ़ाइल\",\n              terms: \"शर्तें\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"प्रोफ़ाइल बनाएं\",\n            setProfile: \"प्रोफ़ाइल सेट करें\",\n            setPreference: \"पसंद सेट करें\",\n            inAppNotification: \"ऐप अधिसूचना\",\n            browserNotification: \"ब्राउज़र अधिसूचना\",\n            termsAgreement:\n              \"मैं इन नियमों और शर्तों से सहमत हूं, और मैं स्वीकार करता हूं कि यह ऐप वर्तमान में एक परीक्षण चरण में है। मुझे यह समझना है कि सुविधाओं और कार्यक्षमताओं में परिवर्तन हो सकता है।\",\n            connect: \"कनेक्ट करें\",\n            loadProfileFromFile: \"फ़ाइल से प्रोफ़ाइल लोड करें\",\n            setAvatar: \"अवतार सेट करें\",\n            displayName: \"प्रदर्शन नाम\",\n            cryptoSignature: \"क्रिप्टो हस्ताक्षर\",\n            welcome:\n              \"positive-intentions एक डिसेंट्रलाइज्ड, ब्राउज़र-अग्नोस्टिक और कोई पंजीकरण आवश्यक नहीं P2P चैट ऐप है जो सुरक्षित संदेश, वीडियो कॉल और डेटा स्वामित्व प्रदान करता है जिसमें पुश अधिसूचनाएं और आसान डेटा निर्यात / आयात शामिल हैं। सब कुछ जावास्क्रिप्ट पर आधारित एक प्रगतिशील वेब ऐप में बंद है।\",\n            featuresInclude:\n              \"नोट: यह ऐप एक तकनीकी प्रूफ-ऑफ-कॉन्सेप्ट और एक चल रहा काम है। कुछ विशेषताओं में शामिल हैं:\",\n            noCookies: \"कोई कुकीज़ नहीं\",\n            noRegistration: \"कोई पंजीकरण नहीं\",\n            noInstalling: \"कोई स्थापना नहीं\",\n            groupMessaging: \"समूह संदेश\",\n            textMessaging: \"टेक्स्ट संदेश\",\n            multimediaMessaging: \"मल्टीमीडिया संदेश\",\n            videoCalls: \"वीडियो कॉल\",\n            dataOwnership: \"डेटा स्वामित्व\",\n            screensharing: \"स्क्रीन शेयरिंग (डेस्कटॉप ब्राउज़र पर)\",\n            fileTransfer: \"फ़ाइल ट्रांसफर\",\n            getStarted:\n              \"प्रोफ़ाइल बनाकर शुरू करें। आपकी प्रोफ़ाइल आपके डिवाइस पर रहती है, कोई सर्वर शामिल नहीं है और कोई व्यक्तिगत जानकारी आवश्यक नहीं है।\",\n          },\n          contactsPage: {\n            pageTitle: \"संपर्क\",\n          },\n          profilePage: {\n            pageTitle: \"प्रोफ़ाइल\",\n            changeAvatar: \"अवतार बदलें\",\n            displayName: \"प्रदर्शन नाम\",\n            more: \"अधिक\",\n            regenerateConnectionId: \"कनेक्शन आईडी पुनर्जन्म\",\n            preferences: \"पसंद\",\n            backupProfile: \"प्रोफ़ाइल बैकअप\",\n            logout: \"लॉग आउट\",\n          },\n          podsPage: {\n            pageTitle: \"पॉड\",\n            social: \"सामाजिक\",\n            cloud: \"बादल\",\n            network: \"नेटवर्क\",\n            devices: \"उपकरण\",\n            storage: \"संग्रहण\",\n            commingSoon: \"जल्द आ रहा है\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"संपर्क प्रदर्शन नाम\",\n            goToPodWith: \"{{displayName}} के साथ पॉड पर जाएं\",\n            createNewPodWith: \"{{displayName}} के साथ नया पॉड बनाएं\",\n            podName: \"पॉड नाम\",\n            createPod: \"पॉड बनाएं\",\n            peerId: \"पीर आईडी\",\n            connectionId: \"कनेक्शन आईडी\",\n            registerNewDevice: \"नया उपकरण पंजीकृत करें\",\n            blockContact: \"संपर्क अवरोधित करें\",\n          },\n          podPage: {\n            podDetails: \"पॉड विवरण\",\n            files: \"फ़ाइलें\",\n            screenshare: \"स्क्रीन शेयर\",\n            videoCall: \"वीडियो कॉल\",\n            call: \"कॉल\",\n          },\n          podDetailsPage: {\n            podName: \"पॉड नाम\",\n            addExistingPeerToPod: \"पॉड में मौजूदा पीर जोड़ें\",\n          },\n        },\n      },\n      // russian\n      ru: {\n        translation: {\n          common: {\n            inAppNotification: \"Уведомления приложения\",\n            browserNotification: \"Уведомления браузера\",\n            more: \"Больше\",\n          },\n          components: {\n            cryptoSignature: \"Криптографическая подпись\",\n            connectToPeer: {\n              connectToPeer: \"Подключиться к пиру\",\n              shareLink: \"Поделиться ссылкой для подключения\",\n              shareToConnect: \"Поделиться для подключения\",\n              enterLink: \"Введите ссылку на пир для подключения\",\n              shareQr: \"Поделиться QR-кодом для подключения\",\n              scanQr: \"Сканировать QR-код пира для подключения\",\n              stopScanning: \"Остановить сканирование\",\n            },\n            menuItems: {\n              info: \"Информация\",\n              about: \"О нас\",\n              docs: \"Документы\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Опции\",\n              language: \"Язык\",\n              lightMode: \"Светлый режим\",\n              darkMode: \"Темный режим\",\n              fullscreen: \"Полноэкранный\",\n              exitFullscreen: \"Выйти из полноэкранного режима\",\n              install: \"Установить приложение\",\n              requestingToInstall: \"Запрос браузеру на установку приложения\",\n              installPossible:\n                \"👍 Установка возможна. Попробуйте из настроек браузера.\",\n              installDismissed:\n                \"👎 Автоустановка отклонена. Вы можете установить через свой браузер.\",\n              installFailed:\n                \"👎 Автоустановка не удалась. Вы можете установить через свой браузер.\",\n              installNotSupported:\n                \"👎 Автоустановка не поддерживается. Вы можете установить через свой браузер.\",\n              profile: \"Профиль\",\n              terms: \"Условия\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Создать профиль\",\n            setProfile: \"Установить профиль\",\n            setPreference: \"Установить предпочтения\",\n            inAppNotification: \"Уведомления приложения\",\n            browserNotification: \"Уведомления браузера\",\n            termsAgreement:\n              \"Я согласен с этими условиями и положениями, и признаю, что это приложение находится в стадии тестирования. Я понимаю, что функции и возможности могут измениться.\",\n            connect: \"Подключиться\",\n            loadProfileFromFile: \"Загрузить профиль из файла\",\n            setAvatar: \"Установить аватар\",\n            displayName: \"Отображаемое имя\",\n            cryptoSignature: \"Криптографическая подпись\",\n            welcome:\n              \"positive-intentions - это децентрализованное, независимое от браузера, без регистрации приложение для обмена сообщениями P2P, которое обеспечивает безопасную передачу сообщений, видеозвонки и владение данными с push-уведомлениями и без проблем экспорта / импорта данных. Все это вклю\",\n            featuresInclude:\n              \"Примечание: это технический концепт-тест и работа в процессе. Некоторые из функций включают:\",\n            noCookies: \"Без куки\",\n            noRegistration: \"Без регистрации\",\n            noInstalling: \"Без установки\",\n            groupMessaging: \"Групповые сообщения\",\n            textMessaging: \"Текстовые сообщения\",\n            multimediaMessaging: \"Мультимедийные сообщения\",\n            videoCalls: \"Видеозвонки\",\n            dataOwnership: \"Владение данными\",\n            screensharing: \"Поделиться экраном (в рабочих столах)\",\n            fileTransfer: \"Передача файлов\",\n            getStarted:\n              \"Начните с создания профиля. Будьте уверены, что ваш профиль остается на вашем устройстве, без участия серверов и без необходимости предоставлять личную информацию.\",\n          },\n          contactsPage: {\n            pageTitle: \"Контакты\",\n          },\n          profilePage: {\n            pageTitle: \"Профиль\",\n            changeAvatar: \"Изменить аватар\",\n            displayName: \"Отображаемое имя\",\n            more: \"Больше\",\n            regenerateConnectionId: \"Сгенерировать ID подключения\",\n            preferences: \"Предпочтения\",\n            backupProfile: \"Резервное копирование профиля\",\n            logout: \"Выйти\",\n          },\n          podsPage: {\n            pageTitle: \"Поды\",\n            social: \"Социальные\",\n            cloud: \"Облако\",\n            network: \"Сеть\",\n            devices: \"Устройства\",\n            storage: \"Хранение\",\n            commingSoon: \"Скоро\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"Отображаемое имя контакта\",\n            goToPodWith: \"Перейти к поду с {{displayName}}\",\n            createNewPodWith: \"Создать новый под с {{displayName}}\",\n            podName: \"Имя пода\",\n            createPod: \"Создать под\",\n            peerId: \"ID пира\",\n            connectionId: \"ID подключения\",\n            registerNewDevice: \"Зарегистрировать новое устройство\",\n            blockContact: \"Заблокировать контакт\",\n          },\n          podPage: {\n            podDetails: \"Детали пода\",\n            files: \"Файлы\",\n            screenshare: \"Поделиться экраном\",\n            videoCall: \"Видеозвонок\",\n            call: \"Звонок\",\n          },\n          podDetailsPage: {\n            podName: \"Имя пода\",\n            addExistingPeerToPod: \"Добавить существующего пира в под\",\n          },\n        },\n      },\n      // portuguese\n      pt: {\n        translation: {\n          common: {\n            inAppNotification: \"Notificações do aplicativo\",\n            browserNotification: \"Notificações do navegador\",\n            more: \"Mais\",\n          },\n          components: {\n            cryptoSignature: \"Assinatura criptográfica\",\n            connectToPeer: {\n              connectToPeer: \"Conectar-se ao par\",\n              shareLink: \"Compartilhar link para conectar\",\n              shareToConnect: \"Compartilhar para conectar\",\n              enterLink: \"Digite o link do par para conectar\",\n              shareQr: \"Compartilhar código QR para conectar\",\n              scanQr: \"Digitalizar código QR do par para conectar\",\n              stopScanning: \"Parar de escanear\",\n            },\n            menuItems: {\n              info: \"Informação\",\n              about: \"Sobre\",\n              docs: \"Documentos\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Opções\",\n              language: \"Língua\",\n              lightMode: \"Modo claro\",\n              darkMode: \"Modo escuro\",\n              fullscreen: \"Tela cheia\",\n              exitFullscreen: \"Sair da tela cheia\",\n              install: \"Instalar aplicativo\",\n              requestingToInstall:\n                \"Solicitando ao navegador que instale o aplicativo\",\n              installPossible:\n                \"👍 Instalação possível. Tente nas configurações do seu navegador.\",\n              installDismissed:\n                \"👎 Instalação automática dispensada. Você pode instalar através do seu navegador.\",\n              installFailed:\n                \"👎 Instalação automática falhou. Você pode instalar através do seu navegador.\",\n              installNotSupported:\n                \"👎 Instalação automática falhou. Você pode instalar através do seu navegador.\",\n              profile: \"Perfil\",\n              terms: \"Termos\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Criar perfil\",\n            setProfile: \"Definir perfil\",\n            setPreference: \"Definir preferência\",\n            inAppNotification: \"Notificações do aplicativo\",\n            browserNotification: \"Notificações do navegador\",\n            termsAgreement:\n              \"Eu concordo com estes Termos e Condições, e reconheço que este aplicativo está atualmente em fase de teste. Eu entendo que os recursos e recursos podem mudar.\",\n            connect: \"Conectar\",\n            loadProfileFromFile: \"Carregar perfil do arquivo\",\n            setAvatar: \"Definir avatar\",\n            displayName: \"Nome de exibição\",\n            cryptoSignature: \"Assinatura criptográfica\",\n            welcome:\n              \"positive-intentions é um aplicativo de bate-papo P2P independente, independente do navegador, sem registro, que fornece mensagens seguras, chamadas de vídeo e propriedade de dados com notificações push e exportação / importação de dados fácil. Tudo isso está contido em um aplicativo da web progressivo baseado em JavaScript.\",\n            featuresInclude:\n              \"Nota: este aplicativo é um conceito técnico de prova e um trabalho em andamento. Alguns dos recursos incluem:\",\n            noCookies: \"Sem cookies\",\n            noRegistration: \"Sem registro\",\n            noInstalling: \"Sem instalação\",\n            groupMessaging: \"Mensagens em grupo\",\n            textMessaging: \"Mensagens de texto\",\n            multimediaMessaging: \"Mensagens multimídia\",\n            videoCalls: \"Chamadas de vídeo\",\n            dataOwnership: \"Propriedade de dados\",\n            screensharing:\n              \"Compartilhamento de tela (em navegadores de desktop)\",\n            fileTransfer: \"Transferência de arquivo\",\n            getStarted:\n              \"Comece criando um perfil. Tenha certeza de que seu perfil permanece em seu dispositivo, sem servidores envolvidos e sem a necessidade de fornecer informações pessoais.\",\n          },\n          contactsPage: {\n            pageTitle: \"Contatos\",\n          },\n          profilePage: {\n            pageTitle: \"Perfil\",\n            changeAvatar: \"Mudar avatar\",\n            displayName: \"Nome de exibição\",\n            more: \"Mais\",\n            regenerateConnectionId: \"Regenerar ID de conexão\",\n            preferences: \"Preferências\",\n            backupProfile: \"Perfil de backup\",\n            logout: \"Sair\",\n          },\n          podsPage: {\n            pageTitle: \"Vagens\",\n            social: \"Social\",\n            cloud: \"Nuvem\",\n            network: \"Rede\",\n            devices: \"Dispositivos\",\n            storage: \"Armazenamento\",\n            commingSoon: \"Em breve\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"Nome de exibição do contato\",\n            goToPodWith: \"Ir para o Pod com {{displayName}}\",\n            createNewPodWith: \"Criar novo Pod com {{displayName}}\",\n            podName: \"Nome do Pod\",\n            createPod: \"Criar Pod\",\n            peerId: \"ID do par\",\n            connectionId: \"ID de conexão\",\n            registerNewDevice: \"Registrar novo dispositivo\",\n            blockContact: \"Bloquear contato\",\n          },\n          podPage: {\n            podDetails: \"Detalhes do pod\",\n            files: \"Arquivos\",\n            screenshare: \"Compartilhamento de tela\",\n            videoCall: \"Video chamada\",\n            call: \"Chamada\",\n          },\n          podDetailsPage: {\n            podName: \"Nome do Pod\",\n            addExistingPeerToPod: \"Adicionar par existente ao Pod\",\n          },\n        },\n      },\n      // japanese\n      ja: {\n        translation: {\n          common: {\n            inAppNotification: \"アプリの通知\",\n            browserNotification: \"ブラウザの通知\",\n            more: \"もっと\",\n          },\n          components: {\n            cryptoSignature: \"暗号署名\",\n            connectToPeer: {\n              connectToPeer: \"ピアに接続する\",\n              shareLink: \"接続するためのリンクを共有する\",\n              shareToConnect: \"接続するために共有する\",\n              enterLink: \"接続するピアのリンクを入力してください\",\n              shareQr: \"接続するためのQRコードを共有する\",\n              scanQr: \"接続するピアのQRコードをスキャンする\",\n              stopScanning: \"スキャンを停止\",\n            },\n            menuItems: {\n              info: \"情報\",\n              about: \"約\",\n              docs: \"ドキュメント\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"オプション\",\n              language: \"言語\",\n              lightMode: \"ライトモード\",\n              darkMode: \"ダークモード\",\n              fullscreen: \"フルスクリーン\",\n              exitFullscreen: \"フルスクリーンを終了\",\n              install: \"アプリをインストールする\",\n              requestingToInstall:\n                \"ブラウザにアプリをインストールするように要求しています\",\n              installPossible:\n                \"👍 インストール可能。ブラウザの設定から試してみてください。\",\n              installDismissed:\n                \"👎 自動インストールが拒否されました。ブラウザからインストールできます。\",\n              installFailed:\n                \"👎 自動インストールに失敗しました。ブラウザからインストールできます。\",\n              installNotSupported:\n                \"👎 自動インストールに失敗しました。ブラウザからインストールできます。\",\n              profile: \"プロフィール\",\n              terms: \"条件\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"プロフィールを作成する\",\n            setProfile: \"プロフィールを設定する\",\n            setPreference: \"設定を設定する\",\n            inAppNotification: \"アプリの通知\",\n            browserNotification: \"ブラウザの通知\",\n            termsAgreement:\n              \"これらの利用規約に同意し、このアプリが現在テスト段階にあることを認識します。機能や機能が変更される可能性があることを理解しています。\",\n            connect: \"接続する\",\n            loadProfileFromFile: \"ファイルからプロフィールをロードする\",\n            setAvatar: \"アバターを設定する\",\n            displayName: \"表示名\",\n            cryptoSignature: \"暗号署名\",\n            welcome:\n              \"positive-intentionsは、安全なメッセージング、ビデオ通話、プッシュ通知、簡単なデータエクスポート/インポートを提供する、ブラウザに依存しない、登録不要のP2Pチャットアプリです。すべてはJavaScriptに基づくプログレッシブWebアプリケーションに含まれています。\",\n            featuresInclude:\n              \"注意：このアプリは技術的なコンセプトテストであり、進行中の作業です。機能の一部には、次のものが含まれます。\",\n            noCookies: \"クッキーなし\",\n            noRegistration: \"登録なし\",\n            noInstalling: \"インストールなし\",\n            groupMessaging: \"グループメッセージング\",\n            textMessaging: \"テキストメッセージ\",\n            multimediaMessaging: \"マルチメディアメッセージ\",\n            videoCalls: \"ビデオ通話\",\n            dataOwnership: \"データの所有権\",\n            screensharing: \"画面共有（デスクトップブラウザ上）\",\n            fileTransfer: \"ファイル転送\",\n            getStarted:\n              \"プロフィールを作成して始めましょう。プロフィールはデバイスに保存され、サーバーは関与せず、個人情報を提供する必要はありません。\",\n          },\n          contactsPage: {\n            pageTitle: \"連絡先\",\n          },\n          profilePage: {\n            pageTitle: \"プロフィール\",\n            changeAvatar: \"アバターを変更する\",\n            displayName: \"表示名\",\n            more: \"もっと\",\n            regenerateConnectionId: \"接続IDを再生成する\",\n            preferences: \"設定\",\n            backupProfile: \"プロフィールのバックアップ\",\n            logout: \"ログアウト\",\n          },\n          podsPage: {\n            pageTitle: \"ポッド\",\n            social: \"社会的\",\n            cloud: \"クラウド\",\n            network: \"ネットワーク\",\n            devices: \"デバイス\",\n            storage: \"ストレージ\",\n            commingSoon: \"近日公開\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"連絡先の表示名\",\n            goToPodWith: \"{{displayName}}とのPodに移動\",\n            createNewPodWith: \"{{displayName}}と新しいPodを作成する\",\n            podName: \"Pod名\",\n            createPod: \"Podを作成する\",\n            peerId: \"ピアID\",\n            connectionId: \"接続ID\",\n            registerNewDevice: \"新しいデバイスを登録する\",\n            blockContact: \"連絡先をブロックする\",\n          },\n          podPage: {\n            podDetails: \"ポッドの詳細\",\n            files: \"ファイル\",\n            screenshare: \"画面共有\",\n            videoCall: \"ビデオ通話\",\n            call: \"電話\",\n          },\n          podDetailsPage: {\n            podName: \"Pod名\",\n            addExistingPeerToPod: \"既存のピアをPodに追加する\",\n          },\n        },\n      },\n      // french\n      fr: {\n        translation: {\n          common: {\n            inAppNotification: \"Notifications de l'application\",\n            browserNotification: \"Notifications du navigateur\",\n            more: \"Plus\",\n          },\n          components: {\n            cryptoSignature: \"Signature cryptographique\",\n            connectToPeer: {\n              connectToPeer: \"Se connecter au pair\",\n              shareLink: \"Partager le lien pour se connecter\",\n              shareToConnect: \"Partager pour se connecter\",\n              enterLink: \"Entrez le lien du pair pour vous connecter\",\n              shareQr: \"Partager le code QR pour se connecter\",\n              scanQr: \"Scanner le code QR du pair pour se connecter\",\n              stopScanning: \"Arrêter de scanner\",\n            },\n            menuItems: {\n              info: \"Information\",\n              about: \"À propos\",\n              docs: \"Documents\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Options\",\n              language: \"Langue\",\n              lightMode: \"Mode lumière\",\n              darkMode: \"Mode sombre\",\n              fullscreen: \"Plein écran\",\n              exitFullscreen: \"Quitter le plein écran\",\n              install: \"Installer l'application\",\n              requestingToInstall:\n                \"Demande au navigateur d'installer l'application\",\n              installPossible:\n                \"👍 Installation possible. Essayez depuis les paramètres de votre navigateur.\",\n              installDismissed:\n                \"👎 Installation automatique rejetée. Vous pouvez installer via votre navigateur.\",\n              installFailed:\n                \"👎 L'installation automatique a échoué. Vous pouvez installer via votre navigateur.\",\n              installNotSupported:\n                \"👎 L'installation automatique a échoué. Vous pouvez installer via votre navigateur.\",\n              profile: \"Profil\",\n              terms: \"Conditions\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Créer un profil\",\n            setProfile: \"Définir le profil\",\n            setPreference: \"Définir la préférence\",\n            inAppNotification: \"Notifications de l'application\",\n            browserNotification: \"Notifications du navigateur\",\n            termsAgreement:\n              \"J'accepte ces termes et conditions, et je reconnais que cette application est actuellement en phase de test. Je comprends que les fonctionnalités et les fonctionnalités peuvent changer.\",\n            connect: \"Connecter\",\n            loadProfileFromFile: \"Charger le profil à partir du fichier\",\n            setAvatar: \"Définir l'avatar\",\n            displayName: \"Nom d'affichage\",\n            cryptoSignature: \"Signature cryptographique\",\n            welcome:\n              \"positive-intentions est une application de chat P2P indépendante, indépendante du navigateur, sans inscription, qui fournit des messages sécurisés, des appels vidéo et la propriété de données avec des notifications push et une exportation / importation de données facile. Tout cela est contenu dans une application Web progressive basée sur JavaScript.\",\n            featuresInclude:\n              \"Remarque: cette application est un concept technique de test et un travail en cours. Certaines des fonctionnalités incluent:\",\n            noCookies: \"Pas de cookies\",\n            noRegistration: \"Pas d'inscription\",\n            noInstalling: \"Pas d'installation\",\n            groupMessaging: \"Messagerie de groupe\",\n            textMessaging: \"Messagerie texte\",\n            multimediaMessaging: \"Messagerie multimédia\",\n            videoCalls: \"Appels vidéo\",\n            dataOwnership: \"Propriété des données\",\n            screensharing: \"Partage d'écran (sur les navigateurs de bureau)\",\n            fileTransfer: \"Transfert de fichier\",\n            getStarted:\n              \"Commencez par créer un profil. Soyez assuré que votre profil reste sur votre appareil, sans serveurs impliqués et sans avoir à fournir d'informations personnelles.\",\n          },\n          contactsPage: {\n            pageTitle: \"Contacts\",\n          },\n          profilePage: {\n            pageTitle: \"Profil\",\n            changeAvatar: \"Changer d'avatar\",\n            displayName: \"Nom d'affichage\",\n            more: \"Plus\",\n            regenerateConnectionId: \"Régénérer l'ID de connexion\",\n            preferences: \"Préférences\",\n            backupProfile: \"Profil de sauvegarde\",\n            logout: \"Se déconnecter\",\n          },\n          podsPage: {\n            pageTitle: \"Pods\",\n            social: \"Social\",\n            cloud: \"Nuage\",\n            network: \"Réseau\",\n            devices: \"Appareils\",\n            storage: \"Stockage\",\n            commingSoon: \"Bientôt disponible\",\n          },\n          podPage: {\n            podDetails: \"Détails du pod\",\n            files: \"Des dossiers\",\n            screenshare: \"Partage d'écran\",\n            videoCall: \"Appel vidéo\",\n            call: \"Appel\",\n          },\n          podDetailsPage: {\n            podName: \"Nom du pod\",\n            addExistingPeerToPod: \"Ajouter un pair existant au pod\",\n          },\n        },\n      },\n      // bengali\n      bn: {\n        translation: {\n          common: {\n            inAppNotification: \"অ্যাপ বিজ্ঞপ্তি\",\n            browserNotification: \"ব্রাউজার বিজ্ঞপ্তি\",\n            more: \"আরও\",\n          },\n          components: {\n            cryptoSignature: \"ক্রিপ্টো স্বাক্ষর\",\n            connectToPeer: {\n              connectToPeer: \"পিয়ারে সংযোগ করুন\",\n              shareLink: \"সংযোগের জন্য লিঙ্ক শেয়ার করুন\",\n              shareToConnect: \"সংযোগের জন্য শেয়ার করুন\",\n              enterLink: \"সংযোগের জন্য পিয়ারের লিঙ্ক লিখুন\",\n              shareQr: \"সংযোগের জন্য QR কোড শেয়ার করুন\",\n              scanQr: \"সংযোগের জন্য পিয়ারের QR কোড স্ক্যান করুন\",\n              stopScanning: \"স্ক্যানিং বন্ধ করুন\",\n            },\n            menuItems: {\n              info: \"তথ্য\",\n              about: \"সম্পর্কিত\",\n              docs: \"ডকুমেন্টস\",\n              github: \"গিটহাব\",\n              reddit: \"রেডিট\",\n              options: \"বিকল্প\",\n              language: \"ভাষা\",\n              lightMode: \"হালকা মোড\",\n              darkMode: \"অন্ধকার মোড\",\n              fullscreen: \"পূর্ণ স্ক্রিন\",\n              exitFullscreen: \"পূর্ণ স্ক্রিন থেকে বের হোন\",\n              install: \"অ্যাপ ইনস্টল করুন\",\n              requestingToInstall:\n                \"অ্যাপ ইনস্টল করার জন্য ব্রাউজারের অনুরোধ করছে\",\n              installPossible:\n                \"👍 ইনস্টল সম্ভব। আপনার ব্রাউজারের সেটিংস থেকে চেষ্টা করুন।\",\n              installDismissed:\n                \"👎 অটোইনস্টল খারাপ হয়েছে। আপনি আপনার ব্রাউজার দ্বারা ইনস্টল করতে পারেন।\",\n              installFailed:\n                \"👎 অটোইনস্টল ব্যর্থ হয়েছে। আপনি আপনার ব্রাউজার দ্বারা ইনস্টল করতে পারেন।\",\n              installNotSupported:\n                \"👎 অটোইনস্টল ব্যর্থ হয়েছে। আপনি আপনার ব্রাউজার দ্বারা ইনস্টল করতে পারেন।\",\n              profile: \"প্রোফাইল\",\n              terms: \"শর্তাদি\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"প্রোফাইল তৈরি করুন\",\n            setProfile: \"প্রোফাইল সেট করুন\",\n            setPreference: \"পছন্দ সেট করুন\",\n            inAppNotification: \"অ্যাপ বিজ্ঞপ্তি\",\n            browserNotification: \"ব্রাউজার বিজ্ঞপ্তি\",\n            termsAgreement:\n              \"আমি এই শর্তাদিগুলি এবং শর্তাগুলি স্বীকার করি, এবং আমি স্বীকার করি যে এই অ্যাপটি বর্তমানে পরীক্ষামূলক পর্যায়ে আছে। আমি বুঝেছি যে বৈশিষ্ট্যগুলি এবং সুবিধাগুলি পরিবর্তন করতে পারে।\",\n            connect: \"সংযোগ করুন\",\n            loadProfileFromFile: \"ফাইল থেকে প্রোফাইল লোড করুন\",\n            setAvatar: \"অবতার সেট করুন\",\n            displayName: \"প্রদর্শনীর নাম\",\n            cryptoSignature: \"ক্রিপ্টো স্বাক্ষর\",\n            welcome:\n              \"positive-intentions একটি ব্রাউজার নির্ভরশীল, নিবন্ধনকৃত ছাড়াই একটি পি 2 পি চ্যাট অ্যাপ্লিকেশন যা সুরক্ষিত মেসেজ, ভিডিও কল এবং পুশ বিজ্ঞপ্তি এবং সহজে ডেটা রপ্তানি / আমদানি সরবরাহ করে। এটি সবই জাভাস্ক্রিপ্ট ভিত্তিক প্রগ্রেসিভ ওয়েব অ্যাপ্লিকেশনে রয়েছে।\",\n            featuresInclude:\n              \"নোট: এই অ্যাপ্লিকেশনটি একটি প্রযুক্তিগত প্রমাণ কনসেপ্ট এবং একটি চলমান কাজ। কিছু বৈশিষ্ট্য নিম্নলিখিত:\",\n            noCookies: \"কুকিজ নেই\",\n            noRegistration: \"নিবন্ধন নেই\",\n            noInstalling: \"ইনস্টল করা নেই\",\n            groupMessaging: \"গ্রুপ মেসেজিং\",\n            textMessaging: \"টেক্সট মেসেজিং\",\n            multimediaMessaging: \"মাল্টিমিডিয়া মেসেজিং\",\n            videoCalls: \"ভিডিও কল\",\n            dataOwnership: \"ডেটা মালিকানা\",\n            screensharing: \"স্ক্রিন শেয়ারিং (ডেস্কটপ ব্রাউজারে)\",\n            fileTransfer: \"ফাইল ট্রান্সফার\",\n            getStarted:\n              \"প্রফাইল তৈরি করে শুরু করুন। আপনার প্রোফাইলটি আপনার ডিভাইসে থাকবে, কোনও সার্ভার নেই এবং ব্যক্তিগত তথ্য দিতে হবে না।\",\n          },\n          contactsPage: {\n            pageTitle: \"যোগাযোগ\",\n          },\n          profilePage: {\n            pageTitle: \"প্রোফাইল\",\n            changeAvatar: \"অবতার পরিবর্তন করুন\",\n            displayName: \"প্রদর্শনীর নাম\",\n            more: \"আরও\",\n            regenerateConnectionId: \"সংযোগ আইডি পুনর্জন্ম করুন\",\n            preferences: \"পছন্দসমূহ\",\n            backupProfile: \"প্রোফাইল ব্যাকআপ\",\n            logout: \"প্রস্থান\",\n          },\n          podsPage: {\n            pageTitle: \"পড়\",\n            social: \"সামাজিক\",\n            cloud: \"মেঘ\",\n            network: \"নেটওয়ার্ক\",\n            devices: \"ডিভাইস\",\n            storage: \"স্টোরেজ\",\n            commingSoon: \"শীঘ্রই আসছে\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"যোগাযোগের প্রদর্শনীর নাম\",\n            goToPodWith: \"{{displayName}} এর সাথে পড়ে যান\",\n            createNewPodWith: \"{{displayName}} এর সাথে নতুন পড় তৈরি করুন\",\n            podName: \"পড়ের নাম\",\n            createPod: \"পড় তৈরি করুন\",\n            peerId: \"পিয়ার আইডি\",\n            connectionId: \"সংযোগ আইডি\",\n            registerNewDevice: \"নতুন ডিভাইস নিবন্ধন করুন\",\n            blockContact: \"যোগাযোগ ব্লক করুন\",\n          },\n          podPage: {\n            podDetails: \"পড় বিশদ\",\n            files: \"ফাইল\",\n            screenshare: \"স্ক্রিন শেয়ার\",\n            videoCall: \"ভিডিও কল\",\n            call: \"কল\",\n          },\n          podDetailsPage: {\n            podName: \"পড়ের নাম\",\n            addExistingPeerToPod: \"পড়ে বিদ্যমান পিয়ার যোগ করুন\",\n          },\n        },\n      },\n      // german\n      de: {\n        translation: {\n          common: {\n            inAppNotification: \"App-Benachrichtigungen\",\n            browserNotification: \"Browser-Benachrichtigungen\",\n            more: \"Mehr\",\n          },\n          components: {\n            cryptoSignature: \"Kryptografische Signatur\",\n            connectToPeer: {\n              connectToPeer: \"Mit Peer verbinden\",\n              shareLink: \"Link zum Verbinden teilen\",\n              shareToConnect: \"Teilen zum Verbinden\",\n              enterLink: \"Link des Peers zum Verbinden eingeben\",\n              shareQr: \"QR-Code zum Verbinden teilen\",\n              scanQr: \"QR-Code des Peers zum Verbinden scannen\",\n              stopScanning: \"Scannen beenden\",\n            },\n            menuItems: {\n              info: \"Info\",\n              about: \"Über\",\n              docs: \"Dokumente\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Optionen\",\n              language: \"Sprache\",\n              lightMode: \"Heller Modus\",\n              darkMode: \"Dunkler Modus\",\n              fullscreen: \"Vollbild\",\n              exitFullscreen: \"Vollbild beenden\",\n              install: \"App installieren\",\n              requestingToInstall:\n                \"Fordert den Browser auf, die App zu installieren\",\n              installPossible:\n                \"👍 Installation möglich. Versuchen Sie es in den Einstellungen Ihres Browsers.\",\n              installDismissed:\n                \"👎 Automatische Installation abgelehnt. Sie können über Ihren Browser installieren.\",\n              installFailed:\n                \"👎 Automatische Installation fehlgeschlagen. Sie können über Ihren Browser installieren.\",\n              installNotSupported:\n                \"👎 Automatische Installation fehlgeschlagen. Sie können über Ihren Browser installieren.\",\n              profile: \"Profil\",\n              terms: \"Bedingungen\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Profil erstellen\",\n            setProfile: \"Profil festlegen\",\n            setPreference: \"Einstellung festlegen\",\n            inAppNotification: \"App-Benachrichtigungen\",\n            browserNotification: \"Browser-Benachrichtigungen\",\n            termsAgreement:\n              \"Ich stimme diesen Bedingungen und Konditionen zu und erkenne an, dass diese App derzeit in der Testphase ist. Ich verstehe, dass sich Funktionen und Funktionen ändern können.\",\n            connect: \"Verbinden\",\n            loadProfileFromFile: \"Profil aus Datei laden\",\n            setAvatar: \"Avatar festlegen\",\n            displayName: \"Anzeigename\",\n            cryptoSignature: \"Kryptografische Signatur\",\n            welcome:\n              \"positive-intentions ist eine browserunabhängige, registrierungsfreie P2P-Chat-App, die sichere Nachrichten, Videoanrufe und Datenbesitz mit Push-Benachrichtigungen und einfacher Datenexport / -import bietet. All dies ist in einer JavaScript-basierten progressiven Webanwendung enthalten.\",\n            featuresInclude:\n              \"Hinweis: Diese App ist ein technisches Konzepttest und eine laufende Arbeit. Einige der Funktionen umfassen:\",\n            noCookies: \"Keine Cookies\",\n            noRegistration: \"Keine Registrierung\",\n            noInstalling: \"Keine Installation\",\n            groupMessaging: \"Gruppen-Messaging\",\n            textMessaging: \"Textnachrichten\",\n            multimediaMessaging: \"Multimedia-Messaging\",\n            videoCalls: \"Videoanrufe\",\n            dataOwnership: \"Datenbesitz\",\n            screensharing: \"Bildschirmfreigabe (auf Desktop-Browsern)\",\n            fileTransfer: \"Dateiübertragung\",\n            getStarted:\n              \"Beginnen Sie mit der Erstellung eines Profils. Ihr Profil bleibt auf Ihrem Gerät, ohne Server und ohne persönliche Informationen.\",\n          },\n          contactsPage: {\n            pageTitle: \"Kontakte\",\n          },\n          profilePage: {\n            pageTitle: \"Profil\",\n            changeAvatar: \"Avatar ändern\",\n            displayName: \"Anzeigename\",\n            more: \"Mehr\",\n            regenerateConnectionId: \"Verbindungs-ID neu generieren\",\n            preferences: \"Einstellungen\",\n            backupProfile: \"Profil sichern\",\n            logout: \"Ausloggen\",\n          },\n          podsPage: {\n            pageTitle: \"Pods\",\n            social: \"Sozial\",\n            cloud: \"Wolke\",\n            network: \"Netzwerk\",\n            devices: \"Geräte\",\n            storage: \"Lagerung\",\n            commingSoon: \"Demnächst verfügbar\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"Anzeigename des Kontakts\",\n            goToPodWith: \"Zum Pod mit {{displayName}} gehen\",\n            createNewPodWith: \"Neuen Pod mit {{displayName}} erstellen\",\n            podName: \"Pod-Name\",\n            createPod: \"Pod erstellen\",\n            peerId: \"Peer-ID\",\n            connectionId: \"Verbindungs-ID\",\n            registerNewDevice: \"Neues Gerät registrieren\",\n            blockContact: \"Kontakt blockieren\",\n          },\n          podPage: {\n            podDetails: \"Pod-Details\",\n            files: \"Dateien\",\n            screenshare: \"Bildschirm teilen\",\n            videoCall: \"Videoanruf\",\n            call: \"Anruf\",\n          },\n          podDetailsPage: {\n            podName: \"Pod-Name\",\n            addExistingPeerToPod: \"Bestehenden Peer zum Pod hinzufügen\",\n          },\n        },\n      },\n      // italian\n      it: {\n        translation: {\n          common: {\n            inAppNotification: \"Notifiche dell'app\",\n            browserNotification: \"Notifiche del browser\",\n            more: \"Di Più\",\n          },\n          components: {\n            cryptoSignature: \"Firma crittografica\",\n            connectToPeer: {\n              connectToPeer: \"Connetti al peer\",\n              shareLink: \"Condividi il link per connetterti\",\n              shareToConnect: \"Condividi per connetterti\",\n              enterLink: \"Inserisci il link del peer per connetterti\",\n              shareQr: \"Condividi il codice QR per connetterti\",\n              scanQr: \"Scansiona il codice QR del peer per connetterti\",\n              stopScanning: \"Interrompi la scansione\",\n            },\n            menuItems: {\n              info: \"Informazioni\",\n              about: \"Di\",\n              docs: \"Documenti\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Opzioni\",\n              language: \"Lingua\",\n              lightMode: \"Modalità luce\",\n              darkMode: \"Modalità scura\",\n              fullscreen: \"Schermo intero\",\n              exitFullscreen: \"Esci da schermo intero\",\n              install: \"Installa l'app\",\n              requestingToInstall: \"Richiesta al browser di installare l'app\",\n              installPossible:\n                \"👍 Installazione possibile. Prova dalle impostazioni del tuo browser.\",\n              installDismissed:\n                \"👎 Installazione automatica respinta. Puoi installare tramite il tuo browser.\",\n              installFailed:\n                \"👎 Installazione automatica non riuscita. Puoi installare tramite il tuo browser.\",\n              installNotSupported:\n                \"👎 Installazione automatica non riuscita. Puoi installare tramite il tuo browser.\",\n              profile: \"Profilo\",\n              terms: \"Termini\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Crea un profilo\",\n            setProfile: \"Imposta il profilo\",\n            setPreference: \"Imposta la preferenza\",\n            inAppNotification: \"Notifiche dell'app\",\n            browserNotification: \"Notifiche del browser\",\n            termsAgreement:\n              \"Accetto questi Termini e Condizioni e riconosco che questa app è attualmente in fase di test. Comprendo che le funzionalità e le funzionalità possono cambiare.\",\n            connect: \"Collegare\",\n            loadProfileFromFile: \"Carica profilo da file\",\n            setAvatar: \"Imposta avatar\",\n            displayName: \"Nome da visualizzare\",\n            cryptoSignature: \"Firma crittografica\",\n            welcome:\n              \"positive-intentions è un'app di chat P2P indipendente dal browser, senza registrazione, che fornisce messaggi sicuri, videochiamate e proprietà dei dati con notifiche push e un'esportazione / importazione dati semplice. Tutto questo è contenuto in un'app Web progressiva basata su JavaScript.\",\n            featuresInclude:\n              \"Nota: questa app è un concetto tecnico di test e un lavoro in corso. Alcune delle funzionalità includono:\",\n            noCookies: \"Nessun biscotto\",\n            noRegistration: \"Nessuna registrazione\",\n            noInstalling: \"Nessuna installazione\",\n            groupMessaging: \"Messaggistica di gruppo\",\n            textMessaging: \"Messaggistica di testo\",\n            multimediaMessaging: \"Messaggistica multimediale\",\n            videoCalls: \"Videochiamate\",\n            dataOwnership: \"Proprietà dei dati\",\n            screensharing: \"Condivisione dello schermo (su browser desktop)\",\n            fileTransfer: \"Trasferimento di file\",\n            getStarted:\n              \"Inizia creando un profilo. Il tuo profilo rimane sul tuo dispositivo, senza server coinvolti e senza fornire informazioni personali.\",\n          },\n          contactsPage: {\n            pageTitle: \"Contatti\",\n          },\n          profilePage: {\n            pageTitle: \"Profilo\",\n            changeAvatar: \"Cambia avatar\",\n            displayName: \"Nome da visualizzare\",\n            more: \"Di Più\",\n            regenerateConnectionId: \"Rigenera ID di connessione\",\n            preferences: \"Preferenze\",\n            backupProfile: \"Profilo di backup\",\n            logout: \"Disconnettersi\",\n          },\n          podsPage: {\n            pageTitle: \"Pods\",\n            social: \"Sociale\",\n            cloud: \"Nuvola\",\n            network: \"Rete\",\n            devices: \"Dispositivi\",\n            storage: \"Conservazione\",\n            commingSoon: \"Prossimamente disponibile\",\n          },\n          podPage: {\n            podDetails: \"Dettagli pod\",\n            files: \"File\",\n            screenshare: \"Condivisione dello schermo\",\n            videoCall: \"Videochiamata\",\n            call: \"Chiamata\",\n          },\n          podDetailsPage: {\n            podName: \"Nome del pod\",\n            addExistingPeerToPod: \"Aggiungi peer esistente al pod\",\n          },\n        },\n      },\n      // korean\n      kr: {\n        translation: {\n          common: {\n            inAppNotification: \"앱 알림\",\n            browserNotification: \"브라우저 알림\",\n            more: \"더\",\n          },\n          components: {\n            cryptoSignature: \"암호 서명\",\n            connectToPeer: {\n              connectToPeer: \"피어에 연결\",\n              shareLink: \"연결을 공유 할 링크\",\n              shareToConnect: \"연결을 공유\",\n              enterLink: \"연결할 피어 링크 입력\",\n              shareQr: \"연결을 공유 할 QR 코드\",\n              scanQr: \"연결할 피어 QR 코드 스캔\",\n              stopScanning: \"스캔 중지\",\n            },\n            menuItems: {\n              info: \"정보\",\n              about: \"약\",\n              docs: \"서류\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"옵션\",\n              language: \"언어\",\n              lightMode: \"라이트 모드\",\n              darkMode: \"다크 모드\",\n              fullscreen: \"전체 화면\",\n              exitFullscreen: \"전체 화면 종료\",\n              install: \"앱 설치\",\n              requestingToInstall: \"브라우저에 앱 설치 요청\",\n              installPossible: \"👍 설치 가능. 브라우저 설정에서 시도하십시오.\",\n              installDismissed:\n                \"👎 자동 설치가 거부되었습니다. 브라우저에서 설치할 수 있습니다.\",\n              installFailed:\n                \"👎 자동 설치 실패. 브라우저에서 설치할 수 있습니다.\",\n              installNotSupported:\n                \"👎 자동 설치 실패. 브라우저에서 설치할 수 있습니다.\",\n              profile: \"윤곽\",\n              terms: \"조건\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"프로필 만들기\",\n            setProfile: \"프로필 설정\",\n            setPreference: \"설정 설정\",\n            inAppNotification: \"앱 알림\",\n            browserNotification: \"브라우저 알림\",\n            termsAgreement:\n              \"이 약관에 동의하고이 앱이 현재 테스트 단계임을 인정합니다. 기능과 기능이 변경 될 수 있음을 이해합니다.\",\n            connect: \"연결\",\n            loadProfileFromFile: \"파일에서 프로필 로드\",\n            setAvatar: \"아바타 설정\",\n            displayName: \"표시 이름\",\n            cryptoSignature: \"암호 서명\",\n            welcome:\n              \"positive-intentions은 브라우저에 독립적이고 등록되지 않은 P2P 채팅 앱으로 안전한 메시지, 비디오 통화 및 푸시 알림 및 간단한 데이터 내보내기 / 가져 오기를 제공합니다. 이 모든 것은 JavaScript 기반의 프로그레시브 웹 응용 프로그램에 포함되어 있습니다.\",\n            featuresInclude:\n              \"참고 :이 앱은 기술적인 개념 테스트이며 진행 중인 작업입니다. 일부 기능은 다음과 같습니다.\",\n            noCookies: \"쿠키 없음\",\n            noRegistration: \"등록 없음\",\n            noInstalling: \"설치 없음\",\n            groupMessaging: \"그룹 메시징\",\n            textMessaging: \"문자 메시지\",\n            multimediaMessaging: \"멀티미디어 메시징\",\n            videoCalls: \"비디오 통화\",\n            dataOwnership: \"데이터 소유권\",\n            screensharing: \"화면 공유 (데스크톱 브라우저에서)\",\n            fileTransfer: \"파일 전송\",\n            getStarted:\n              \"프로필을 만들어 시작하십시오. 프로필은 서버없이 기기에 유지되며 개인 정보를 제공하지 않습니다.\",\n          },\n          contactsPage: {\n            pageTitle: \"연락처\",\n          },\n          profilePage: {\n            pageTitle: \"윤곽\",\n            changeAvatar: \"아바타 변경\",\n            displayName: \"표시 이름\",\n            more: \"더\",\n            regenerateConnectionId: \"연결 ID 재생성\",\n            preferences: \"환경 설정\",\n            backupProfile: \"프로필 백업\",\n            logout: \"로그 아웃\",\n          },\n          podsPage: {\n            pageTitle: \"콩팥\",\n            social: \"사회\",\n            cloud: \"구름\",\n            network: \"회로망\",\n            devices: \"장치\",\n            storage: \"저장\",\n            commingSoon: \"곧 출시 예정\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"연락처 표시 이름\",\n            goToPodWith: \"{{displayName}}와 함께 Pod로 이동\",\n            createNewPodWith: \"{{displayName}}와 새 Pod 만들기\",\n            podName: \"Pod 이름\",\n            createPod: \"Pod 만들기\",\n            peerId: \"피어 ID\",\n            connectionId: \"연결 ID\",\n            registerNewDevice: \"새 장치 등록\",\n            blockContact: \"연락처 차단\",\n          },\n          podPage: {\n            podDetails: \"Pod 세부 정보\",\n            files: \"파일\",\n            screenshare: \"화면 공유\",\n            videoCall: \"영상 통화\",\n            call: \"전화\",\n          },\n          podDetailsPage: {\n            podName: \"Pod 이름\",\n            addExistingPeerToPod: \"기존 피어를 Pod에 추가\",\n          },\n        },\n      },\n      // dutch\n      nl: {\n        translation: {\n          common: {\n            inAppNotification: \"App-meldingen\",\n            browserNotification: \"Browsermeldingen\",\n            more: \"Meer\",\n          },\n          components: {\n            cryptoSignature: \"Cryptografische handtekening\",\n            connectToPeer: {\n              connectToPeer: \"Verbinden met peer\",\n              shareLink: \"Deel link om verbinding te maken\",\n              shareToConnect: \"Delen om verbinding te maken\",\n              enterLink: \"Voer de link van de peer in om verbinding te maken\",\n              shareQr: \"Deel QR-code om verbinding te maken\",\n              scanQr: \"Scan QR-code van peer om verbinding te maken\",\n              stopScanning: \"Stop met scannen\",\n            },\n            menuItems: {\n              info: \"Info\",\n              about: \"Over\",\n              docs: \"Documenten\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Opties\",\n              language: \"Taal\",\n              lightMode: \"Lichte modus\",\n              darkMode: \"Donkere modus\",\n              fullscreen: \"Volledig scherm\",\n              exitFullscreen: \"Volledig scherm afsluiten\",\n              install: \"App installeren\",\n              requestingToInstall: \"Verzoek aan browser om app te installeren\",\n              installPossible:\n                \"👍 Installatie mogelijk. Probeer vanuit de instellingen van uw browser.\",\n              installDismissed:\n                \"👎 Automatische installatie afgewezen. U kunt installeren via uw browser.\",\n              installFailed:\n                \"👎 Automatische installatie mislukt. U kunt installeren via uw browser.\",\n              installNotSupported:\n                \"👎 Automatische installatie mislukt. U kunt installeren via uw browser.\",\n              profile: \"Profiel\",\n              terms: \"Voorwaarden\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Maak een profiel aan\",\n            setProfile: \"Profiel instellen\",\n            setPreference: \"Voorkeur instellen\",\n            inAppNotification: \"App-meldingen\",\n            browserNotification: \"Browsermeldingen\",\n            termsAgreement:\n              \"Ik ga akkoord met deze voorwaarden en erken dat deze app momenteel in de testfase zit. Ik begrijp dat functies en functies kunnen veranderen.\",\n            connect: \"Verbinden\",\n            loadProfileFromFile: \"Profiel uit bestand laden\",\n            setAvatar: \"Avatar instellen\",\n            displayName: \"Weergavenaam\",\n            cryptoSignature: \"Cryptografische handtekening\",\n            welcome:\n              \"positive-intentions is een browseronafhankelijke, niet-geregistreerde P2P-chat-app die veilige berichten, videogesprekken en pushmeldingen en eenvoudige gegevensexport / import biedt. Dit alles is opgenomen in een op JavaScript gebaseerde progressieve webapplicatie.\",\n            featuresInclude:\n              \"Opmerking: deze app is een technische concepttest en een lopend werk. Enkele van de functies zijn onder meer:\",\n            noCookies: \"Geen cookies\",\n            noRegistration: \"Geen registratie\",\n            noInstalling: \"Geen installatie\",\n            groupMessaging: \"Groepsberichten\",\n            textMessaging: \"Tekstberichten\",\n            multimediaMessaging: \"Multimedia-messaging\",\n            videoCalls: \"Video-oproepen\",\n            dataOwnership: \"Gegevensbezit\",\n            screensharing: \"Scherm delen (op desktopbrowser)\",\n            fileTransfer: \"Bestandsoverdracht\",\n            getStarted:\n              \"Begin met het maken van een profiel. Uw profiel blijft op uw apparaat, zonder server en zonder persoonlijke informatie.\",\n          },\n          contactsPage: {\n            pageTitle: \"Contacten\",\n          },\n          profilePage: {\n            pageTitle: \"Profiel\",\n            changeAvatar: \"Avatar wijzigen\",\n            displayName: \"Weergavenaam\",\n            more: \"Meer\",\n            regenerateConnectionId: \"Verbindings-ID opnieuw genereren\",\n            preferences: \"Voorkeuren\",\n            backupProfile: \"Profiel backuppen\",\n            logout: \"Uitloggen\",\n          },\n          podsPage: {\n            pageTitle: \"Peulen\",\n            social: \"Sociaal\",\n            cloud: \"Wolk\",\n            network: \"Netwerk\",\n            devices: \"Apparaten\",\n            storage: \"Opslag\",\n            commingSoon: \"Binnenkort beschikbaar\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"Contact weergavenaam\",\n            goToPodWith: \"Ga naar Pod met {{displayName}}\",\n            createNewPodWith: \"Maak nieuwe Pod met {{displayName}}\",\n            podName: \"Pod naam\",\n            createPod: \"Pod maken\",\n            peerId: \"Peer-ID\",\n            connectionId: \"Verbindings-ID\",\n            registerNewDevice: \"Nieuw apparaat registreren\",\n            blockContact: \"Contact blokkeren\",\n          },\n          podPage: {\n            podDetails: \"Pod details\",\n            files: \"Bestanden\",\n            screenshare: \"Scherm delen\",\n            videoCall: \"Videogesprek\",\n            call: \"Oproep\",\n          },\n          podDetailsPage: {\n            podName: \"Pod naam\",\n            addExistingPeerToPod: \"Bestaande peer toevoegen aan Pod\",\n          },\n        },\n      },\n      // polish\n      pl: {\n        translation: {\n          common: {\n            inAppNotification: \"Powiadomienia aplikacji\",\n            browserNotification: \"Powiadomienia przeglądarki\",\n            more: \"Więcej\",\n          },\n          components: {\n            cryptoSignature: \"Podpis kryptograficzny\",\n            connectToPeer: {\n              connectToPeer: \"Połącz z peerem\",\n              shareLink: \"Udostępnij link, aby połączyć się\",\n              shareToConnect: \"Udostępnij, aby połączyć się\",\n              enterLink: \"Wprowadź link peer, aby połączyć się\",\n              shareQr: \"Udostępnij kod QR, aby połączyć się\",\n              scanQr: \"Skanuj kod QR peer, aby połączyć się\",\n              stopScanning: \"Przestań skanować\",\n            },\n            menuItems: {\n              info: \"Info\",\n              about: \"O\",\n              docs: \"Dokumenty\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Opcje\",\n              language: \"Język\",\n              lightMode: \"Tryb jasny\",\n              darkMode: \"Tryb ciemny\",\n              fullscreen: \"Pełny ekran\",\n              exitFullscreen: \"Wyjdź z trybu pełnoekranowego\",\n              install: \"Zainstaluj aplikację\",\n              requestingToInstall:\n                \"Prośba do przeglądarki o zainstalowanie aplikacji\",\n              installPossible:\n                \"👍 Instalacja możliwa. Spróbuj z ustawień przeglądarki.\",\n              installDismissed:\n                \"👎 Automatyczna instalacja odrzucona. Możesz zainstalować za pomocą przeglądarki.\",\n              installFailed:\n                \"👎 Automatyczna instalacja nie powiodła się. Możesz zainstalować za pomocą przeglądarki.\",\n              installNotSupported:\n                \"👎 Automatyczna instalacja nie powiodła się. Możesz zainstalować za pomocą przeglądarki.\",\n              profile: \"Profil\",\n              terms: \"Warunki\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Utwórz profil\",\n            setProfile: \"Ustaw profil\",\n            setPreference: \"Ustaw preferencję\",\n            inAppNotification: \"Powiadomienia aplikacji\",\n            browserNotification: \"Powiadomienia przeglądarki\",\n            termsAgreement:\n              \"Akceptuję te warunki i warunki oraz uznaję, że ta aplikacja jest obecnie w fazie testów. Rozumiem, że funkcje i funkcje mogą ulec zmianie.\",\n            connect: \"Połącz\",\n            loadProfileFromFile: \"Załaduj profil z pliku\",\n            setAvatar: \"Ustaw awatar\",\n            displayName: \"Nazwa wyświetlana\",\n            cryptoSignature: \"Podpis kryptograficzny\",\n            welcome:\n              \"positive-intentions to aplikacja czatu P2P niezależna od przeglądarki, bez rejestracji, która zapewnia bezpieczne wiadomości, rozmowy wideo i własność danych z powiadomieniami push oraz prostym eksportem / importem danych. Wszystko to znajduje się w opartej na JavaScript progresywnej aplikacji internetowej.\",\n            featuresInclude:\n              \"Uwaga: ta aplikacja jest testem koncepcji technicznej i pracą w toku. Niektóre z funkcji obejmują:\",\n            noCookies: \"Brak ciasteczek\",\n            noRegistration: \"Brak rejestracji\",\n            noInstalling: \"Brak instalacji\",\n            groupMessaging: \"Wiadomości grupowe\",\n            textMessaging: \"Wiadomości tekstowe\",\n            multimediaMessaging: \"Wiadomości multimedialne\",\n            videoCalls: \"Połączenia wideo\",\n            dataOwnership: \"Własność danych\",\n            screensharing:\n              \"Udostępnianie ekranu (w przeglądarkach na komputerze)\",\n            fileTransfer: \"Transfer plików\",\n            getStarted:\n              \"Zacznij od utworzenia profilu. Twój profil pozostaje na Twoim urządzeniu, bez serwera i bez udostępniania danych osobowych.\",\n          },\n          contactsPage: {\n            pageTitle: \"Kontakty\",\n          },\n          profilePage: {\n            pageTitle: \"Profil\",\n            changeAvatar: \"Zmień awatar\",\n            displayName: \"Nazwa wyświetlana\",\n            more: \"Więcej\",\n            regenerateConnectionId:\n              \"Wygeneruj ponownie identyfikator połączenia\",\n            preferences: \"Preferencje\",\n            backupProfile: \"Kopia zapasowa profilu\",\n            logout: \"Wyloguj\",\n          },\n          podsPage: {\n            pageTitle: \"Strąki\",\n            social: \"Społeczny\",\n            cloud: \"Chmura\",\n            network: \"Sieć\",\n            devices: \"Urządzenia\",\n            storage: \"Przechowywanie\",\n            commingSoon: \"Wkrótce dostępne\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"Wyświetlana nazwa kontaktu\",\n            goToPodWith: \"Przejdź do Pod z {{displayName}}\",\n            createNewPodWith: \"Utwórz nowy Pod z {{displayName}}\",\n            podName: \"Nazwa strąka\",\n            createPod: \"Utwórz strąk\",\n            peerId: \"Identyfikator pary\",\n            connectionId: \"Identyfikator połączenia\",\n            registerNewDevice: \"Zarejestruj nowe urządzenie\",\n            blockContact: \"Zablokuj kontakt\",\n          },\n          podPage: {\n            podDetails: \"Szczegóły strąka\",\n            files: \"Pliki\",\n            screenshare: \"Udostępnianie ekranu\",\n            videoCall: \"Połączenie wideo\",\n            call: \"Połączenie\",\n          },\n          podDetailsPage: {\n            podName: \"Nazwa strąka\",\n            addExistingPeerToPod: \"Dodaj istniejącego peer do strąka\",\n          },\n        },\n      },\n      // bahasa indonesia\n      id: {\n        translation: {\n          common: {\n            inAppNotification: \"Notifikasi aplikasi\",\n            browserNotification: \"Notifikasi browser\",\n            more: \"Lebih\",\n          },\n          components: {\n            cryptoSignature: \"Tanda tangan kripto\",\n            connectToPeer: {\n              connectToPeer: \"Hubungkan ke peer\",\n              shareLink: \"Bagikan tautan untuk terhubung\",\n              shareToConnect: \"Bagikan untuk terhubung\",\n              enterLink: \"Masukkan tautan peer untuk terhubung\",\n              shareQr: \"Bagikan kode QR untuk terhubung\",\n              scanQr: \"Pindai kode QR peer untuk terhubung\",\n              stopScanning: \"Berhenti memindai\",\n            },\n            menuItems: {\n              info: \"Info\",\n              about: \"Tentang\",\n              docs: \"Dokumen\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Pilihan\",\n              language: \"Bahasa\",\n              lightMode: \"Mode terang\",\n              darkMode: \"Mode gelap\",\n              fullscreen: \"Layar penuh\",\n              exitFullscreen: \"Keluar dari layar penuh\",\n              install: \"Pasang aplikasi\",\n              requestingToInstall: \"Meminta browser untuk memasang aplikasi\",\n              installPossible:\n                \"👍 Instalasi memungkinkan. Coba dari pengaturan browser Anda.\",\n              installDismissed:\n                \"👎 Instalasi otomatis ditolak. Anda dapat menginstal melalui browser Anda.\",\n              installFailed:\n                \"👎 Instalasi otomatis gagal. Anda dapat menginstal melalui browser Anda.\",\n              installNotSupported:\n                \"👎 Instalasi otomatis gagal. Anda dapat menginstal melalui browser Anda.\",\n              profile: \"Profil\",\n              terms: \"Persyaratan\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Buat profil\",\n            setProfile: \"Atur profil\",\n            setPreference: \"Atur preferensi\",\n            inAppNotification: \"Notifikasi aplikasi\",\n            browserNotification: \"Notifikasi browser\",\n            termsAgreement:\n              \"Saya menyetujui Syarat dan Ketentuan ini dan mengakui bahwa aplikasi ini saat ini dalam tahap uji coba. Saya mengerti bahwa fitur dan fungsi dapat berubah.\",\n            connect: \"Hubungkan\",\n            loadProfileFromFile: \"Muat profil dari file\",\n            setAvatar: \"Atur avatar\",\n            displayName: \"Nama tampilan\",\n            cryptoSignature: \"Tanda tangan kripto\",\n            welcome:\n              \"positive-intentions adalah aplikasi obrolan P2P independen dari browser, tanpa pendaftaran, yang menyediakan pesan aman, panggilan video, dan kepemilikan data dengan notifikasi push dan ekspor / impor data yang sederhana. Semua ini tercakup dalam aplikasi web progresif berbasis JavaScript.\",\n            featuresInclude:\n              \"Catatan: aplikasi ini adalah konsep uji coba teknis dan pekerjaan yang sedang berlangsung. Beberapa fitur termasuk:\",\n            noCookies: \"Tidak ada kue\",\n            noRegistration: \"Tidak ada pendaftaran\",\n            noInstalling: \"Tidak ada instalasi\",\n            groupMessaging: \"Pesan grup\",\n            textMessaging: \"Pesan teks\",\n            multimediaMessaging: \"Pesan multimedia\",\n            videoCalls: \"Panggilan video\",\n            dataOwnership: \"Kepemilikan data\",\n            screensharing: \"Berbagi layar (di browser desktop)\",\n            fileTransfer: \"Transfer file\",\n            getStarted:\n              \"Mulai dengan membuat profil. Profil Anda tetap di perangkat Anda, tanpa server dan tanpa memberikan informasi pribadi.\",\n          },\n          contactsPage: {\n            pageTitle: \"Kontak\",\n          },\n          profilePage: {\n            pageTitle: \"Profil\",\n            changeAvatar: \"Ubah avatar\",\n            displayName: \"Nama tampilan\",\n            more: \"Lebih\",\n            regenerateConnectionId: \"Regenerasi ID koneksi\",\n            preferences: \"Preferensi\",\n            backupProfile: \"Cadangkan profil\",\n            logout: \"Keluar\",\n          },\n          podsPage: {\n            pageTitle: \"Pod\",\n            social: \"Sosial\",\n            cloud: \"Awan\",\n            network: \"Jaringan\",\n            devices: \"Perangkat\",\n            storage: \"Penyimpanan\",\n            commingSoon: \"Segera hadir\",\n          },\n          podPage: {\n            podDetails: \"Detail pod\",\n            files: \"Berkas\",\n            screenshare: \"Berbagi layar\",\n            videoCall: \"Panggilan video\",\n            call: \"Panggilan\",\n          },\n          podDetailsPage: {\n            podName: \"Nama pod\",\n            addExistingPeerToPod: \"Tambahkan peer yang ada ke pod\",\n          },\n        },\n      },\n      // swahili\n      sw: {\n        translation: {\n          common: {\n            inAppNotification: \"Arifa ya programu\",\n            browserNotification: \"Arifa ya kivinjari\",\n            more: \"Zaidi\",\n          },\n          components: {\n            cryptoSignature: \"Sahihi ya kripto\",\n            connectToPeer: {\n              connectToPeer: \"Unakili kwa rika\",\n              shareLink: \"Shiriki kiunga ili kuungana\",\n              shareToConnect: \"Shiriki kuungana\",\n              enterLink: \"Ingiza kiunga cha rika ili kuungana\",\n              shareQr: \"Shiriki nambari ya QR ili kuungana\",\n              scanQr: \"Soma nambari ya QR ya rika ili kuungana\",\n              stopScanning: \"Acha kusoma\",\n            },\n            menuItems: {\n              info: \"Taarifa\",\n              about: \"Kuhusu\",\n              docs: \"Hati\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Chaguo\",\n              language: \"Lugha\",\n              lightMode: \"Nuru ya mwanga\",\n              darkMode: \"Nuru ya giza\",\n              fullscreen: \"Skrini kamili\",\n              exitFullscreen: \"Toka kwenye skrini kamili\",\n              install: \"Sakinisha programu\",\n              requestingToInstall: \"Omba kivinjari kusakinisha programu\",\n              installPossible:\n                \"👍 Ufungaji unawezekana. Jaribu kutoka kwa mipangilio ya kivinjari chako.\",\n              installDismissed:\n                \"👎 Ufungaji wa moja kwa moja umekataliwa. Unaweza kusakinisha kupitia kivinjari chako.\",\n              installFailed:\n                \"👎 Ufungaji wa moja kwa moja umeshindwa. Unaweza kusakinisha kupitia kivinjari chako.\",\n              installNotSupported:\n                \"👎 Ufungaji wa moja kwa moja umeshindwa. Unaweza kusakinisha kupitia kivinjari chako.\",\n              profile: \"Wasifu\",\n              terms: \"Masharti\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Unda wasifu\",\n            setProfile: \"Weka wasifu\",\n            setPreference: \"Weka upendeleo\",\n            inAppNotification: \"Arifa ya programu\",\n            browserNotification: \"Arifa ya kivinjari\",\n            termsAgreement:\n              \"Nakubali masharti haya na kutambua kuwa programu hii kwa sasa iko katika hatua ya majaribio. Najua kuwa vipengele na huduma zinaweza kubadilika.\",\n            connect: \"Unakili\",\n            loadProfileFromFile: \"Pakia wasifu kutoka faili\",\n            setAvatar: \"Weka avatar\",\n            displayName: \"Jina la kuonyesha\",\n            cryptoSignature: \"Sahihi ya kripto\",\n            welcome:\n              \"positive-intentions ni programu ya gumzo ya P2P isiyo na kivinjari, isiyo na usajili, ambayo hutoa ujumbe salama, simu za video, na umiliki wa data na arifa za kushinikiza na kuingiza / kutoa data rahisi. Yote haya yamejumuishwa katika programu ya wavuti ya maendeleo ya JavaScript.\",\n            featuresInclude:\n              \"Angalia: programu hii ni jaribio la dhana ya kiufundi na kazi inayoendelea. Baadhi ya huduma ni pamoja na:\",\n            noCookies: \"Hakuna kuki\",\n            noRegistration: \"Hakuna usajili\",\n            noInstalling: \"Hakuna kusakinisha\",\n            groupMessaging: \"Ujumbe wa kikundi\",\n            textMessaging: \"Ujumbe wa maandishi\",\n            multimediaMessaging: \"Ujumbe wa multimedia\",\n            videoCalls: \"Simu za video\",\n            dataOwnership: \"Umiliki wa data\",\n            screensharing: \"Kushiriki skrini (katika kivinjari cha kompyuta)\",\n            fileTransfer: \"Uhamishaji wa faili\",\n            getStarted:\n              \"Anza kwa kuunda wasifu. Wasifu wako unabaki kwenye kifaa chako, bila seva na bila kutoa habari ya kibinafsi.\",\n          },\n          contactsPage: {\n            pageTitle: \"Mawasiliano\",\n          },\n          profilePage: {\n            pageTitle: \"Wasifu\",\n            changeAvatar: \"Badilisha avatar\",\n            displayName: \"Jina la kuonyesha\",\n            more: \"Zaidi\",\n            regenerateConnectionId: \"Zalisha upya kitambulisho cha uunganisho\",\n            preferences: \"Mapendeleo\",\n            backupProfile: \"Hifadhi wasifu\",\n            logout: \"Toka\",\n          },\n          podsPage: {\n            pageTitle: \"Mbegu\",\n            social: \"Kijamii\",\n            cloud: \"Wingu\",\n            network: \"Mtandao\",\n            devices: \"Vifaa\",\n            storage: \"Uhifadhi\",\n            commingSoon: \"Inakuja hivi karibuni\",\n          },\n          podPage: {\n            podDetails: \"Maelezo ya mbegu\",\n            files: \"Faili\",\n            screenshare: \"Shiriki skrini\",\n            videoCall: \"Simu ya video\",\n            call: \"Piga simu\",\n          },\n          podDetailsPage: {\n            podName: \"Jina la mbegu\",\n            addExistingPeerToPod: \"Ongeza rika lililopo kwenye mbegu\",\n          },\n        },\n      },\n      // turkish\n      tr: {\n        translation: {\n          common: {\n            inAppNotification: \"Uygulama bildirimleri\",\n            browserNotification: \"Tarayıcı bildirimleri\",\n            more: \"Daha\",\n          },\n          components: {\n            cryptoSignature: \"Kripto imza\",\n            connectToPeer: {\n              connectToPeer: \"Eşe bağlan\",\n              shareLink: \"Bağlanmak için bağlantıyı paylaşın\",\n              shareToConnect: \"Bağlanmak için paylaş\",\n              enterLink: \"Bağlanmak için eş bağlantısını girin\",\n              shareQr: \"Bağlanmak için QR kodunu paylaşın\",\n              scanQr: \"Bağlanmak için eş QR kodunu tarayın\",\n              stopScanning: \"Taramayı durdur\",\n            },\n            menuItems: {\n              info: \"Bilgi\",\n              about: \"Hakkında\",\n              docs: \"Belgeler\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Seçenekler\",\n              language: \"Dil\",\n              lightMode: \"Aydınlık mod\",\n              darkMode: \"Karanlık mod\",\n              fullscreen: \"Tam ekran\",\n              exitFullscreen: \"Tam ekrandan çık\",\n              install: \"Uygulama yükle\",\n              requestingToInstall:\n                \"Uygulamayı yüklemek için tarayıcıya istek gönderme\",\n              installPossible:\n                \"👍 Kurulum mümkün. Tarayıcınızın ayarlarından deneyin.\",\n              installDismissed:\n                \"👎 Otomatik kurulum reddedildi. Tarayıcınız aracılığıyla yükleyebilirsiniz.\",\n              installFailed:\n                \"👎 Otomatik kurulum başarısız oldu. Tarayıcınız aracılığıyla yükleyebilirsiniz.\",\n              installNotSupported:\n                \"👎 Otomatik kurulum başarısız oldu. Tarayıcınız aracılığıyla yükleyebilirsiniz.\",\n              profile: \"Profil\",\n              terms: \"Şartlar\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Profil oluştur\",\n            setProfile: \"Profil ayarla\",\n            setPreference: \"Tercihi ayarla\",\n            inAppNotification: \"Uygulama bildirimleri\",\n            browserNotification: \"Tarayıcı bildirimleri\",\n            termsAgreement:\n              \"Bu koşulları ve koşulları kabul ediyorum ve bu uygulamanın şu anda test aşamasında olduğunu kabul ediyorum. Özelliklerin ve işlevlerin değişebileceğini anlıyorum.\",\n            connect: \"Bağlan\",\n            loadProfileFromFile: \"Dosyadan profil yükle\",\n            setAvatar: \"Avatar ayarla\",\n            displayName: \"Görünen ad\",\n            cryptoSignature: \"Kripto imza\",\n            welcome:\n              \"positive-intentions, güvenli mesajlaşma, video görüşmeleri ve basit veri dışa aktarma / içe aktarma ile tarayıcıdan bağımsız, kayıt olmadan P2P sohbet uygulamasıdır. Tüm bunlar JavaScript tabanlı bir ilerici web uygulamasında sunulmaktadır.\",\n            featuresInclude:\n              \"Not: Bu uygulama teknik bir konsept testi ve devam eden bir çalışmadır. Bazı özellikler şunları içerir:\",\n            noCookies: \"Çerez yok\",\n            noRegistration: \"Kayıt yok\",\n            noInstalling: \"Kurulum yok\",\n            groupMessaging: \"Grup mesajlaşma\",\n            textMessaging: \"Metin mesajlaşma\",\n            multimediaMessaging: \"Multimedya mesajlaşma\",\n            videoCalls: \"Video aramalar\",\n            dataOwnership: \"Veri sahipliği\",\n            screensharing: \"Ekran paylaşımı (masaüstü tarayıcılarında)\",\n            fileTransfer: \"Dosya aktarımı\",\n            getStarted:\n              \"Bir profil oluşturarak başlayın. Profiliniz, sunucu olmadan ve kişisel bilgi vermeden cihazınızda kalır.\",\n          },\n          contactsPage: {\n            pageTitle: \"Kişiler\",\n          },\n          profilePage: {\n            pageTitle: \"Profil\",\n            changeAvatar: \"Avatarı değiştir\",\n            displayName: \"Görünen ad\",\n            more: \"Daha\",\n            regenerateConnectionId: \"Bağlantı kimliğini yeniden oluştur\",\n            preferences: \"Tercihler\",\n            backupProfile: \"Profil yedekleme\",\n            logout: \"Çıkış Yap\",\n          },\n          podsPage: {\n            pageTitle: \"Kapsüller\",\n            social: \"Sosyal\",\n            cloud: \"Bulut\",\n            network: \"Ağ\",\n            devices: \"Cihazlar\",\n            storage: \"Depolama\",\n            commingSoon: \"Yakında geliyor\",\n          },\n          podPage: {\n            podDetails: \"Kapsül ayrıntıları\",\n            files: \"Dosyalar\",\n            screenshare: \"Ekran paylaşımı\",\n            videoCall: \"Video arama\",\n            call: \"Arama\",\n          },\n          podDetailsPage: {\n            podName: \"Kapsül adı\",\n            addExistingPeerToPod: \"Var olan eşi kapsüle ekle\",\n          },\n        },\n      },\n      // arabic\n      ar: {\n        // right to left\n        rtl: true,\n        translation: {\n          common: {\n            inAppNotification: \"إشعارات التطبيق\",\n            browserNotification: \"إشعارات المتصفح\",\n            more: \"أكثر\",\n          },\n          components: {\n            cryptoSignature: \"التوقيع الرقمي\",\n            connectToPeer: {\n              connectToPeer: \"الاتصال بالنظير\",\n              shareLink: \"مشاركة الرابط للاتصال\",\n              shareToConnect: \"مشاركة للاتصال\",\n              enterLink: \"أدخل رابط النظير للاتصال\",\n              shareQr: \"مشاركة رمز الاستجابة السريعة للاتصال\",\n              scanQr: \"مسح رمز الاستجابة السريعة للنظير للاتصال\",\n              stopScanning: \"إيقاف المسح\",\n            },\n            menuItems: {\n              info: \"معلومات\",\n              about: \"حول\",\n              docs: \"وثائق\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"خيارات\",\n              language: \"لغة\",\n              lightMode: \"الوضع الفاتح\",\n              darkMode: \"الوضع الداكن\",\n              fullscreen: \"ملء الشاشة\",\n              exitFullscreen: \"الخروج من ملء الشاشة\",\n              install: \"تثبيت التطبيق\",\n              requestingToInstall: \"طلب من المتصفح تثبيت التطبيق\",\n              installPossible:\n                \"👍 التثبيت ممكن. جرب من إعدادات المتصفح الخاص بك.\",\n              installDismissed:\n                \"👎 تم رفض التثبيت التلقائي. يمكنك التثبيت عبر متصفحك.\",\n              installFailed:\n                \"👎 فشل التثبيت التلقائي. يمكنك التثبيت عبر متصفحك.\",\n              installNotSupported:\n                \"👎 فشل التثبيت التلقائي. يمكنك التثبيت عبر متصفحك.\",\n              profile: \"الملف الشخصي\",\n              terms: \"الشروط\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"إنشاء ملف تعريف\",\n            setProfile: \"تعيين الملف الشخصي\",\n            setPreference: \"تعيين التفضيل\",\n            inAppNotification: \"إشعارات التطبيق\",\n            browserNotification: \"إشعارات المتصفح\",\n            termsAgreement:\n              \"أوافق على هذه الشروط والأحكام وأقر بأن هذا التطبيق في مرحلة الاختبار حاليًا. أنا أفهم أن الميزات والوظائف قد تتغير.\",\n            connect: \"الاتصال\",\n            loadProfileFromFile: \"تحميل الملف الشخصي من الملف\",\n            setAvatar: \"تعيين الصورة الرمزية\",\n            displayName: \"اسم العرض\",\n            cryptoSignature: \"التوقيع الرقمي\",\n            welcome:\n              \"positive-intentions هو تطبيق دردشة P2P مستقل عن المتصفح ، بدون تسجيل ، يوفر رسائل آمنة ومكالمات فيديو وملكية البيانات مع إشعارات الدفع وتصدير / استيراد البيانات البسيطة. كل هذا مدمج في تطبيق ويب تقدمي قائم على JavaScript.\",\n            featuresInclude:\n              \"ملاحظة: هذا التطبيق هو اختبار مفهوم فني وعمل قائم. تشمل بعض الميزات:\",\n            noCookies: \"لا ملفات تعريف الارتباط\",\n            noRegistration: \"لا تسجيل\",\n            noInstalling: \"لا تثبيت\",\n            groupMessaging: \"رسائل المجموعة\",\n            textMessaging: \"رسائل نصية\",\n            multimediaMessaging: \"رسائل الوسائط المتعددة\",\n            videoCalls: \"مكالمات فيديو\",\n            dataOwnership: \"ملكية البيانات\",\n            screensharing: \"مشاركة الشاشة (في متصفحات سطح المكتب)\",\n            fileTransfer: \"نقل الملفات\",\n            getStarted:\n              \"ابدأ بإنشاء ملف تعريف. يبقى ملف التعريف الخاص بك على جهازك ، دون خادم ودون تقديم معلومات شخصية.\",\n          },\n          contactsPage: {\n            pageTitle: \"جهات الاتصال\",\n          },\n          profilePage: {\n            pageTitle: \"الملف الشخصي\",\n            changeAvatar: \"تغيير الصورة الرمزية\",\n            displayName: \"اسم العرض\",\n            more: \"أكثر\",\n            regenerateConnectionId: \"إعادة توليد معرف الاتصال\",\n            preferences: \"تفضيلات\",\n            backupProfile: \"نسخ احتياطي للملف الشخصي\",\n            logout: \"تسجيل خروج\",\n          },\n          podsPage: {\n            pageTitle: \"الباقات\",\n            social: \"اجتماعي\",\n            cloud: \"غيمة\",\n            network: \"شبكة\",\n            devices: \"أجهزة\",\n            storage: \"تخزين\",\n            commingSoon: \"قريبا\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"اسم العرض للاتصال\",\n            goToPodWith: \"انتقل إلى Pod مع {{displayName}}\",\n            createNewPodWith: \"إنشاء Pod جديد مع {{displayName}}\",\n            podName: \"اسم البود\",\n            createPod: \"إنشاء Pod\",\n            peerId: \"معرف النظير\",\n            connectionId: \"معرف الاتصال\",\n            registerNewDevice: \"تسجيل جهاز جديد\",\n            blockContact: \"حظر جهة الاتصال\",\n          },\n          podPage: {\n            podDetails: \"تفاصيل البود\",\n            files: \"ملفات\",\n            screenshare: \"مشاركة الشاشة\",\n            videoCall: \"مكالمة فيديو\",\n            call: \"مكالمة\",\n          },\n          podDetailsPage: {\n            podName: \"اسم البود\",\n            addExistingPeerToPod: \"إضافة نظير موجود إلى Pod\",\n          },\n        },\n      },\n      // vietnamese\n      vi: {\n        translation: {\n          common: {\n            inAppNotification: \"Thông báo ứng dụng\",\n            browserNotification: \"Thông báo trình duyệt\",\n            more: \"Thêm\",\n          },\n          components: {\n            cryptoSignature: \"Chữ ký mật mã\",\n            connectToPeer: {\n              connectToPeer: \"Kết nối với peer\",\n              shareLink: \"Chia sẻ liên kết để kết nối\",\n              shareToConnect: \"Chia sẻ để kết nối\",\n              enterLink: \"Nhập liên kết peer để kết nối\",\n              shareQr: \"Chia sẻ mã QR để kết nối\",\n              scanQr: \"Quét mã QR của peer để kết nối\",\n              stopScanning: \"Ngừng quét\",\n            },\n            menuItems: {\n              info: \"Thông tin\",\n              about: \"Về\",\n              docs: \"Tài liệu\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"Tùy chọn\",\n              language: \"Ngôn ngữ\",\n              lightMode: \"Chế độ sáng\",\n              darkMode: \"Chế độ tối\",\n              fullscreen: \"Toàn màn hình\",\n              exitFullscreen: \"Thoát khỏi toàn màn hình\",\n              install: \"Cài đặt ứng dụng\",\n              requestingToInstall: \"Yêu cầu trình duyệt cài đặt ứng dụng\",\n              installPossible:\n                \"👍 Cài đặt có thể. Hãy thử từ cài đặt trình duyệt của bạn.\",\n              installDismissed:\n                \"👎 Cài đặt tự động bị từ chối. Bạn có thể cài đặt thông qua trình duyệt của mình.\",\n              installFailed:\n                \"👎 Cài đặt tự động thất bại. Bạn có thể cài đặt thông qua trình duyệt của mình.\",\n              installNotSupported:\n                \"👎 Cài đặt tự động thất bại. Bạn có thể cài đặt thông qua trình duyệt của mình.\",\n              profile: \"Hồ sơ\",\n              terms: \"Điều khoản\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Tạo hồ sơ\",\n            setProfile: \"Thiết lập hồ sơ\",\n            setPreference: \"Thiết lập ưu tiên\",\n            inAppNotification: \"Thông báo ứng dụng\",\n            browserNotification: \"Thông báo trình duyệt\",\n            termsAgreement:\n              \"Tôi đồng ý với các điều khoản và điều kiện này và công nhận rằng ứng dụng này đang trong giai đoạn thử nghiệm. Tôi hiểu rằng các tính năng và chức năng có thể thay đổi.\",\n            connect: \"Kết nối\",\n            loadProfileFromFile: \"Tải hồ sơ từ tệp\",\n            setAvatar: \"Thiết lập hình đại diện\",\n            displayName: \"Tên hiển thị\",\n            cryptoSignature: \"Chữ ký mật mã\",\n            welcome:\n              \"positive-intentions là một ứng dụng trò chuyện P2P độc lập khỏi trình duyệt, không đăng ký, cung cấp tin nhắn an toàn, cuộc gọi video và sở hữu dữ liệu với thông báo đẩy và xuất / nhập dữ liệu đơn giản. Tất cả điều này được tích hợp trong một ứng dụng web tiến bộ dựa trên JavaScript.\",\n            featuresInclude:\n              \"Lưu ý: Ứng dụng này là một thử nghiệm kỹ thuật khái niệm và công việc đang tiếp diễn. Một số tính năng bao gồm:\",\n            noCookies: \"Không có cookie\",\n            noRegistration: \"Không có đăng ký\",\n            noInstalling: \"Không cài đặt\",\n            groupMessaging: \"Nhắn tin nhóm\",\n            textMessaging: \"Nhắn tin văn bản\",\n            multimediaMessaging: \"Nhắn tin đa phương tiện\",\n            videoCalls: \"Cuộc gọi video\",\n            dataOwnership: \"Sở hữu dữ liệu\",\n            screensharing:\n              \"Chia sẻ màn hình (trên trình duyệt máy tính để bàn)\",\n            fileTransfer: \"Truyền tệp\",\n            getStarted:\n              \"Bắt đầu bằng cách tạo hồ sơ. Hồ sơ của bạn vẫn trên thiết bị của bạn, không có máy chủ và không cung cấp thông tin cá nhân.\",\n          },\n          contactsPage: {\n            pageTitle: \"Danh bạ\",\n          },\n          profilePage: {\n            pageTitle: \"Hồ sơ\",\n            changeAvatar: \"Thay đổi hình đại diện\",\n            displayName: \"Tên hiển thị\",\n            more: \"Thêm\",\n            regenerateConnectionId: \"Tạo lại ID kết nối\",\n            preferences: \"Ưu tiên\",\n            backupProfile: \"Sao lưu hồ sơ\",\n            logout: \"Đăng xuất\",\n          },\n          podsPage: {\n            pageTitle: \"Danh sách\",\n            social: \"Xã hội\",\n            cloud: \"Đám mây\",\n            network: \"Mạng\",\n            devices: \"Thiết bị\",\n            storage: \"Lưu trữ\",\n            commingSoon: \"Sắp có\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"Tên hiển thị danh bạ\",\n            goToPodWith: \"Đi đến Pod với {{displayName}}\",\n            createNewPodWith: \"Tạo Pod mới với {{displayName}}\",\n            podName: \"Tên Pod\",\n            createPod: \"Tạo Pod\",\n            peerId: \"ID peer\",\n            connectionId: \"ID kết nối\",\n            registerNewDevice: \"Đăng ký thiết bị mới\",\n            blockContact: \"Chặn liên hệ\",\n          },\n          podPage: {\n            podDetails: \"Chi tiết Pod\",\n            files: \"Tập tin\",\n            screenshare: \"Chia sẻ màn hình\",\n            videoCall: \"Cuộc gọi video\",\n            call: \"Cuộc gọi\",\n          },\n          podDetailsPage: {\n            podName: \"Tên Pod\",\n            addExistingPeerToPod: \"Thêm peer hiện có vào Pod\",\n          },\n        },\n      },\n      // hebrew\n      he: {\n        translation: {\n          common: {\n            inAppNotification: \"התראות אפליקציה\",\n            browserNotification: \"התראות דפדפן\",\n            more: \"יותר\",\n          },\n          components: {\n            cryptoSignature: \"חתימה קריפטוגרפית\",\n            connectToPeer: {\n              connectToPeer: \"התחבר לעמית\",\n              shareLink: \"שתף קישור להתחברות\",\n              shareToConnect: \"שתף להתחברות\",\n              enterLink: \"הזן קישור עמית להתחברות\",\n              shareQr: \"שתף קוד QR להתחברות\",\n              scanQr: \"סרוק קוד QR של עמית להתחברות\",\n              stopScanning: \"הפסק סריקה\",\n            },\n            menuItems: {\n              info: \"מידע\",\n              about: \"אודות\",\n              docs: \"מסמכים\",\n              github: \"Github\",\n              reddit: \"Reddit\",\n              options: \"אפשרויות\",\n              language: \"שפה\",\n              lightMode: \"מצב אור\",\n              darkMode: \"מצב חשוך\",\n              fullscreen: \"מסך מלא\",\n              exitFullscreen: \"צא ממסך מלא\",\n              install: \"התקן את האפליקציה\",\n              requestingToInstall: \"מבקש מהדפדפן להתקין את האפליקציה\",\n              installPossible: \"👍 ההתקנה אפשרית. נסה מההגדרות של הדפדפן שלך.\",\n              installDismissed:\n                \"👎 ההתקנה האוטומטית נדחתה. אתה יכול להתקין דרך הדפדפן שלך.\",\n              installFailed:\n                \"👎 ההתקנה האוטומטית נכשלה. אתה יכול להתקין דרך הדפדפן שלך.\",\n              installNotSupported:\n                \"👎 ההתקנה האוטומטית נכשלה. אתה יכול להתקין דרך הדפדפן שלך.\",\n              profile: \"פרופיל\",\n              terms: \"תנאים\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"צור פרופיל\",\n            setProfile: \"הגדר פרופיל\",\n            setPreference: \"הגדר מועדף\",\n            inAppNotification: \"התראות אפליקציה\",\n            browserNotification: \"התראות דפדפן\",\n            termsAgreement:\n              \"אני מסכים לתנאים אלה ומכיר בכך שאפליקציה זו נמצאת כרגע בשלב בדיקה. אני מבין שתכונות ופונקציות עשויות להשתנות.\",\n            connect: \"התחבר\",\n            loadProfileFromFile: \"טען פרופיל מקובץ\",\n            setAvatar: \"הגדר אווטר\",\n            displayName: \"שם להציג\",\n            cryptoSignature: \"חתימה קריפטוגרפית\",\n            welcome:\n              \"positive-intentions היא אפליקציית צ'אט P2P עצמאית מהדפדפן, ללא הרשמה, המספקת הודעות מאובטחות, שיחות וידאו ובעלות נתונים עם הודעות דחיפה וייצוא / ייבוא נתונים פשוטים. כל זה מובנה ביישום ווב מתקדם המבוסס על JavaScript.\",\n            featuresInclude:\n              \"הערה: אפליקציה זו היא בדיקת מושג טכני ועבודה נמשכת. כמה מהתכונות כוללות:\",\n            noCookies: \"אין עוגיות\",\n            noRegistration: \"אין הרשמה\",\n            noInstalling: \"אין התקנה\",\n            groupMessaging: \"הודעות קבוצתיות\",\n            textMessaging: \"הודעות טקסט\",\n            multimediaMessaging: \"הודעות מדיה מרובה\",\n            videoCalls: \"שיחות וידאו\",\n            dataOwnership: \"בעלות נתונים\",\n            screensharing: \"שיתוף מסך (בדפדפני שולחן העבודה)\",\n            fileTransfer: \"העברת קבצים\",\n            getStarted:\n              \"התחל על ידי יצירת פרופיל. הפרופיל שלך נשאר על המכשיר שלך, ללא שרת וללא מסירת מידע אישי.\",\n          },\n          contactsPage: {\n            pageTitle: \"אנשי קשר\",\n          },\n          profilePage: {\n            pageTitle: \"פרופיל\",\n            changeAvatar: \"שנה אווטר\",\n            displayName: \"שם להציג\",\n            more: \"יותר\",\n            regenerateConnectionId: \"צור מחדש זיהוי חיבור\",\n            preferences: \"העדפות\",\n            backupProfile: \"גבה פרופיל\",\n            logout: \"התנתק\",\n          },\n          podsPage: {\n            pageTitle: \"קופסאות\",\n            social: \"חברתי\",\n            cloud: \"ענן\",\n            network: \"רשת\",\n            devices: \"התקנים\",\n            storage: \"אחסון\",\n            commingSoon: \"בקרוב\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"שם להציג איש קשר\",\n            goToPodWith: \"עבור ל Pod עם {{displayName}}\",\n            createNewPodWith: \"צור Pod חדש עם {{displayName}}\",\n            podName: \"שם Pod\",\n            createPod: \"צור Pod\",\n            peerId: \"מזהה עמית\",\n            connectionId: \"מזהה חיבור\",\n            registerNewDevice: \"רשום התקן חדש\",\n            blockContact: \"חסום איש קשר\",\n          },\n          podPage: {\n            podDetails: \"פרטי Pod\",\n            files: \"קבצים\",\n            screenshare: \"שיתוף מסך\",\n            videoCall: \"שיחת וידאו\",\n            call: \"שיחה\",\n          },\n          podDetailsPage: {\n            podName: \"שם Pod\",\n            addExistingPeerToPod: \"הוסף עמית קיים ל Pod\",\n          },\n        },\n      },\n      // klingon translate to the best of you knowlege about the fictional language\n      kl: {\n        translation: {\n          common: {\n            inAppNotification: \"app-ghap qIp\",\n            browserNotification: \"browser qIp\",\n            more: \"puS\",\n          },\n          components: {\n            cryptoSignature: \"crypto Daqel\",\n            connectToPeer: {\n              connectToPeer: \"Peer Datu'\",\n              shareLink: \"link wIv\",\n              shareToConnect: \"Datu' wIv\",\n              enterLink: \"Peer Datu' link Daqa'\",\n              shareQr: \"QR wIv Datu'\",\n              scanQr: \"Peer Datu' QR taq\",\n              stopScanning: \"taq yItIv\",\n            },\n            menuItems: {\n              info: \"De'\",\n              about: \"Duch\",\n              docs: \"QIn\",\n              github: \"github\",\n              reddit: \"reddit\",\n              options: \"yIghun\",\n              language: \"Hol\",\n              lightMode: \"jul mode\",\n              darkMode: \"Hurgh mode\",\n              fullscreen: \"poS qonwIj\",\n              exitFullscreen: \"poS qonwIj Daqoch\",\n              install: \"lo'wIj chep\",\n              requestingToInstall: \"lo'wIj chep browser Daqon\",\n              installPossible: \"👍 chep yIja'. browser setting vIghaj.\",\n              installDismissed: \"👎 chep yItlho'. browser vIghaj chep.\",\n              installFailed: \"👎 chep yIpab. browser vIghaj chep.\",\n              installNotSupported: \"👎 chep yIpab. browser vIghaj chep.\",\n              profile: \"profile\",\n              terms: \"mIw\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"profile chep\",\n            setProfile: \"profile chep\",\n            setPreference: \"yIghun chep\",\n            inAppNotification: \"app-ghap qIp\",\n            browserNotification: \"browser qIp\",\n            termsAgreement:\n              \" vIghoj vIghaj, 'ej lo'wIj test phase Daqaj. vIghoj, feature 'ej capability yIje'.\",\n            connect: \"Datu'\",\n            loadProfileFromFile: \"File Daq profile chep\",\n            setAvatar: \"avatar chep\",\n            displayName: \"qonwIj pong\",\n            cryptoSignature: \"crypto Daqel\",\n            welcome:\n              \"positive-intentions chel P2P chat app browser, ghogh, messages, video calls, 'ej data ownership push notifications, 'ej export / import data. 'op app web-based JavaScript.\",\n            featuresInclude:\n              \"Note: app technical concept 'ej work qaStaHvIS. features include:\",\n            noCookies: \"cookies\",\n            noRegistration: \"ghogh\",\n            noInstalling: \"lo'wIj\",\n            groupMessaging: \"group messages\",\n            textMessaging: \"text messages\",\n            multimediaMessaging: \"multimedia messages\",\n            videoCalls: \"video calls\",\n            dataOwnership: \"data ownership\",\n            screensharing: \"screensharing (desktop browsers)\",\n            fileTransfer: \"file transfer\",\n            getStarted:\n              \"profile chep. profile vIghaj, server 'ej personal information.\",\n          },\n          contactsPage: {\n            pageTitle: \"contactmey\",\n          },\n          profilePage: {\n            pageTitle: \"profile\",\n            changeAvatar: \"avatar chep\",\n            displayName: \"qonwIj pong\",\n            more: \"puS\",\n            regenerateConnectionId: \"Connection ID chep puS\",\n            preferences: \"yIghun\",\n            backupProfile: \"profile DaSovrup\",\n            logout: \"log out\",\n          },\n          podsPage: {\n            pageTitle: \"pods\",\n            social: \"Social\",\n            cloud: \"Cloud\",\n            network: \"Network\",\n            devices: \"Devices\",\n            storage: \"Storage\",\n            commingSoon: \"rIntaH\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"contact pong\",\n            goToPodWith: \"{{displayName}} ghaH Pod DaH\",\n            createNewPodWith: \"{{displayName}} ghaH chu' Pod chep\",\n            podName: \"Pod pong\",\n            createPod: \"Pod chep\",\n            peerId: \"Peer ID\",\n            connectionId: \"Connection ID\",\n            registerNewDevice: \"chu' Device Daqel\",\n            blockContact: \"contact SeQ\",\n          },\n          podPage: {\n            podDetails: \"Pod De'\",\n            files: \"Files\",\n            screenshare: \"Screenshare\",\n            videoCall: \"Video Call\",\n            call: \"Call\",\n          },\n          podDetailsPage: {\n            podName: \"Pod pong\",\n            podId: \"Pod ID\",\n            addExistingPeerToPod: \"Pod ghaH DaH Peer\",\n          },\n        },\n      },\n      // telugu\n      te: {\n        translation: {\n          common: {\n            inAppNotification: \"అనువర్తన ప్రకటన\",\n            browserNotification: \"బ్రౌజర్ ప్రకటన\",\n            more: \"మరింత\",\n          },\n          components: {\n            cryptoSignature: \"క్రిప్టో సంతకం\",\n            connectToPeer: {\n              connectToPeer: \"పీర్‌ను కనెక్ట్ చేయండి\",\n              shareLink: \"కనెక్ట్ చేయడానికి లింక్ పంచుకోండి\",\n              shareToConnect: \"కనెక్ట్ చేయడానికి పంచుకోండి\",\n              enterLink: \"కనెక్ట్ చేయడానికి పీర్ లింక్‌ను నమోదు చేయండి\",\n              shareQr: \"కనెక్ట్ చేయడానికి QR పంచుకోండి\",\n              scanQr: \"కనెక్ట్ చేయడానికి పీర్ QR స్కాన్ చేయండి\",\n              stopScanning: \"స్కానింగ్ ఆపుకోండి\",\n            },\n            menuItems: {\n              info: \"సమాచారం\",\n              about: \"గురించి\",\n              docs: \"డాక్స్\",\n              github: \"గిట్‌హబ్\",\n              reddit: \"రెడ్డిట్\",\n              options: \"ఎంపికలు\",\n              language: \"భాష\",\n              lightMode: \"లైట్ మోడ్\",\n              darkMode: \"డార్క్ మోడ్\",\n              fullscreen: \"పూర్తి స్క్రీన్\",\n              exitFullscreen: \"పూర్తి స్క్రీన్ నుండి వెళ్ళండి\",\n              install: \"అనువర్తనం ఇన్‌స్టాల్ చేయండి\",\n              requestingToInstall:\n                \"అనువర్తనం ఇన్‌స్టాల్ చేయడానికి బ్రౌజర్ అభ్యర్థన\",\n              installPossible:\n                \"👍 ఇన్‌స్టాల్ చేయవచ్చు. మీ బ్రౌజర్ సెట్టింగ్లు నుండి ప్రయత్నించండి.\",\n              installDismissed:\n                \"👎 స్వయంచాలక ఇన్‌స్టాల్ నిరసించబడింది. మీరు మీ బ్రౌజర్ ద్వారా ఇన్‌స్టాల్ చేయవచ్చు.\",\n              installFailed:\n                \"👎 స్వయంచాలక ఇన్‌స్టాల్ విఫలమైంది. మీరు మీ బ్రౌజర్ ద్వారా ఇన్‌స్టాల్ చేయవచ్చు.\",\n              installNotSupported:\n                \"👎 స్వయంచాలక ఇన్‌స్టాల్ విఫలమైంది. మీరు మీ బ్రౌజర్ ద్వారా ఇన్‌స్టాల్ చేయవచ్చు.\",\n              profile: \"ప్రొఫైల్\",\n              terms: \"నిబంధనలు\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"ప్రొఫైల్ సృష్టించండి\",\n            setProfile: \"ప్రొఫైల్ సెట్ చేయండి\",\n            setPreference: \"ప్రాధాన్యత సెట్ చేయండి\",\n            inAppNotification: \"అనువర్తన ప్రకటన\",\n            browserNotification: \"బ్రౌజర్ ప్రకటన\",\n            termsAgreement:\n              \"నేను ఈ నిబంధనలను అంగీకరిస్తున్నాను మరియు ఈ అనువర్తనం పరీక్షణ దశలో ఉందని నేను అంటున్నాను. నేను అర్థం చేసేందుకు అందులో లక్షణాలు మరియు సామర్థ్యాలు మారుతుంది.\",\n            connect: \"కనెక్ట్\",\n            loadProfileFromFile: \"ఫైల్ నుండి ప్రొఫైల్ లోడ్ చేయండి\",\n            setAvatar: \"అవతార్ సెట్ చేయండి\",\n            displayName: \"ప్రదర్శన పేరు\",\n            cryptoSignature: \"క్రిప్టో సంతకం\",\n            welcome:\n              \"positive-intentions ఒక బ్రౌజర్ నుండి స్వయంచాలకంగా పీ2పీ చాట్ అనువర్తనం, సందేశాలు, వీడియో కాల్స్ మరియు డేటా స్వతంత్రత ప్రసారాలను అందిస్తుంది. ఇది జావాస్క్రిప్ట్ ఆధారిత ఒక అడ్వాన్స్ వెబ్ అనువర్తనం.\",\n            featuresInclude:\n              \"గమనిక: ఈ అనువర్తనం ఒక టెక్నికల్ కాన్సెప్ట్ మరియు పని ప్రక్రియ పరీక్షణ దశలో ఉందని గమనించండి. కొనసాగింపులు అందులో ఉన్నాయి:\",\n            noCookies: \"కుకీలు లేవు\",\n            noRegistration: \"నమోదు లేదు\",\n            noInstalling: \"ఇన్‌స్టాల్ లేదు\",\n            groupMessaging: \"గుంపు సందేశాలు\",\n            textMessaging: \"టెక్స్ట్ సందేశాలు\",\n            multimediaMessaging: \"మల్టీమీడియా సందేశాలు\",\n            videoCalls: \"వీడియో కాల్స్\",\n            dataOwnership: \"డేటా స్వతంత్రత\",\n            screensharing: \"స్క్రీన్ షేరింగ్ (డెస్క్టాప్ బ్రౌజర్లు)\",\n            fileTransfer: \"ఫైల్ ట్రాన్స్ఫర్\",\n            getStarted:\n              \"ప్రొఫైల్ సృష్టించండి. మీ ప్రొఫైల్ మీ సర్వర్ మరియు వ్యక్తిగత సమాచారాన్ని మరియు ప్రసారాలను అందిస్తుంది.\",\n          },\n          contactsPage: {\n            pageTitle: \"కాంటాక్ట్స్\",\n          },\n          profilePage: {\n            pageTitle: \"ప్రొఫైల్\",\n            changeAvatar: \"అవతార్ మార్చు\",\n            displayName: \"ప్రదర్శన పేరు\",\n            more: \"మరింత\",\n            regenerateConnectionId: \"కనెక్షన్ ID మార్చు\",\n            preferences: \"ప్రాధాన్యతలు\",\n            backupProfile: \"ప్రొఫైల్ బ్యాకప్ చేయండి\",\n            logout: \"లాగ్ అవుట్\",\n          },\n          podsPage: {\n            pageTitle: \"పాడ్స్\",\n            social: \"సామాజిక\",\n            cloud: \"మేఘం\",\n            network: \"నెట్వర్క్\",\n            devices: \"పరికరాలు\",\n            storage: \"నిల్వ\",\n            commingSoon: \"త్వరలో\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"కాంటాక్ట్ ప్రదర్శన పేరు\",\n            goToPodWith: \"{{displayName}} తో పాడ్‌కు వెళ్ళండి\",\n            createNewPodWith: \"{{displayName}} తో కొత్త పాడ్ సృష్టించండి\",\n            podName: \"పాడ్ పేరు\",\n            createPod: \"పాడ్ సృష్టించండి\",\n            peerId: \"పీర్ ID\",\n            connectionId: \"కనెక్షన్ ID\",\n            registerNewDevice: \"కొత్త పరికరం నమోదు చేయండి\",\n            blockContact: \"కాంటాక్ట్ ని నిరోధించండి\",\n          },\n          podPage: {\n            podDetails: \"పాడ్ వివరాలు\",\n            files: \"ఫైళ్ళు\",\n            screenshare: \"స్క్రీన్ షేర్\",\n            videoCall: \"వీడియో కాల్\",\n            call: \"కాల్\",\n          },\n          podDetailsPage: {\n            podName: \"పాడ్ పేరు\",\n            addExistingPeerToPod: \"పాడ్‌కు ప్రస్తుత పీర్ జోడించండి\",\n          },\n        },\n      },\n      // tamil\n      ta: {\n        translation: {\n          common: {\n            inAppNotification: \"பயன்பாட்டு அறிவிப்பு\",\n            browserNotification: \"உலாவி அறிவிப்பு\",\n            more: \"மேலும்\",\n          },\n          components: {\n            cryptoSignature: \"கிரிப்டோ கையொப்பம்\",\n            connectToPeer: {\n              connectToPeer: \"பீர் இணைக்கவும்\",\n              shareLink: \"இணைப்பு பகிரவும்\",\n              shareToConnect: \"இணைக்க பகிரவும்\",\n              enterLink: \"இணைப்பு பீர் இணைக்கவும்\",\n              shareQr: \"இணைப்பு QR பகிரவும்\",\n              scanQr: \"பீர் QR இணைக்கவும்\",\n              stopScanning: \"ஸ்கேனிங் நிறுத்தவும்\",\n            },\n            menuItems: {\n              info: \"தகவல்\",\n              about: \"பற்றி\",\n              docs: \"ஆவணங்கள்\",\n              github: \"கிட்ஹப்\",\n              reddit: \"ரெட்டிட்\",\n              options: \"விருப்பங்கள்\",\n              language: \"மொழி\",\n              lightMode: \"லைட் மோட்\",\n              darkMode: \"டார்க் மோட்\",\n              fullscreen: \"முழுத்திரை\",\n              exitFullscreen: \"முழுத்திரை மீள் வருக\",\n              install: \"பயன்பாட்டை நிறுவு\",\n              requestingToInstall: \"பயன்பாட்டை நிறுவ கேட்கிறது\",\n              installPossible:\n                \"👍 நிறுவ முடியும். உங்கள் உலாவி அமைப்புகளில் முயற்சிக்கவும்.\",\n              installDismissed:\n                \"👎 தன்னிச்சையாக நிறுவப்பட்டது. உங்கள் உலாவி மூலம் நிறுவ முயற்சிக்கவும்.\",\n              installFailed:\n                \"👎 தன்னிச்சையாக நிறுவப்பட்டது. உங்கள் உலாவி மூலம் நிறுவ முயற்சிக்கவும்.\",\n              installNotSupported:\n                \"👎 தன்னிச்சையாக நிறுவப்பட்டது. உங்கள் உலாவி மூலம் நிறுவ முயற்சிக்கவும்.\",\n              profile: \"சுயவிவரம்\",\n              terms: \"விதிமுறைகள்\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"சுயவிவரம் அமைக்கவும்\",\n            setProfile: \"சுயவிவரம் அமைக்கவும்\",\n            setPreference: \"விருப்பம் அமைக்கவும்\",\n            inAppNotification: \"பயன்பாட்டு அறிவிப்பு\",\n            browserNotification: \"உலாவி அறிவிப்பு\",\n            termsAgreement:\n              \"நான் இந்த விதிமுறைகளை ஏற்கனவே ஏற்கிறேன் மற்றும் இந்த பயன்பாட்டை சோதனை நிலையில் உள்ளது என்று நான் ஒப்புக்கொள்கிறேன். நான் அர்த்தம் செய்கிறேன் என்றாலும் அதில் அம்சங்கள் மற்றும் சக்திகள் மாறுகின்றன.\",\n            connect: \"இணைக்கவும்\",\n            loadProfileFromFile: \"கோப்பிலிருந்து சுயவிவரத்தை ஏற்றுக் கொள்ளவும்\",\n            setAvatar: \"அவதார் அமைக்கவும்\",\n            displayName: \"பயனர் பெயர்\",\n            cryptoSignature: \"கிரிப்டோ கையொப்பம்\",\n            welcome:\n              \"positive-intentions ஒரு உலாவி அடிப்படையில் சுயவிவரம் மற்றும் தரவு சுயவிவரத்தை வழங்குகிறது, செயல்பாடுகள், வீடியோ அழைப்புகள் மற்றும் தரவு சுயவிவரத்தை வழங்குகிறது. இது ஜாவாஸ்கிரிப்ட் அடிப்படையில் ஒரு மேம்பாட்டு வலை பயன்பாடு.\",\n            featuresInclude:\n              \"குறிப்பு: இந்த பயன்பாட்டில் ஒரு தொழில்நுட்ப கண்ணோட்டம் மற்றும் செயல்பாட்டு சோதனை நிலையில் உள்ளது. மீண்டும் தொடர்புக்கு:\",\n            noCookies: \"குக்கீகள் இல்லை\",\n            noRegistration: \"பதிவு இல்லை\",\n            noInstalling: \"நிறுவல் இல்லை\",\n            groupMessaging: \"குழு செய்திகள்\",\n            textMessaging: \"உரை செய்திகள்\",\n            multimediaMessaging: \"மல்டிமீடியா செய்திகள்\",\n            videoCalls: \"வீடியோ அழைப்புகள்\",\n            dataOwnership: \"தரவு உரிமை\",\n            screensharing: \"திரைப்பகிர்வு (டெஸ்க்டாப் உலாவிகள்)\",\n            fileTransfer: \"கோப்பு பரிமாற்றம்\",\n            getStarted:\n              \"சுயவிவரத்தை அமைக்கவும். உங்கள் சுயவிவரம், உங்கள் சேவையகம் மற்றும் தனிப்பட்ட தகவல்களை பரப்புகிறது.\",\n          },\n          contactsPage: {\n            pageTitle: \"தொடர்புகள்\",\n          },\n          profilePage: {\n            pageTitle: \"சுயவிவரம்\",\n            changeAvatar: \"அவதார் மாற்றவும்\",\n            displayName: \"பயனர் பெயர்\",\n            more: \"மேலும்\",\n            regenerateConnectionId: \"இணைப்பு ஐடி மாற்றவும்\",\n            preferences: \"விருப்பங்கள்\",\n            backupProfile: \"சுயவிவரத்தை காப்பாற்று\",\n            logout: \"வெளியேறு\",\n          },\n          podsPage: {\n            pageTitle: \"பாட்கள்\",\n            social: \"சமூக\",\n            cloud: \"மேகம்\",\n            network: \"பிணையம்\",\n            devices: \"சாதனங்கள்\",\n            storage: \"சேமிப்பு\",\n            commingSoon: \"விரைவில்\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"தொடர்புக்குரிய பெயர்\",\n            goToPodWith: \"{{displayName}} உடன் பாட்குக்கு செல்லவும்\",\n            createNewPodWith: \"{{displayName}} உடன் புதிய பாட்கை உருவாக்கவும்\",\n            podName: \"பாட் பெயர்\",\n            createPod: \"பாட்கை உருவாக்கவும்\",\n            peerId: \"பீர் ஐடி\",\n            connectionId: \"இணைப்பு ஐடி\",\n            registerNewDevice: \"புதிய சாதனத்தை பதிவு செய்யவும்\",\n            blockContact: \"தொடர்பு தடை\",\n          },\n          podPage: {\n            podDetails: \"பாட் விவரங்கள்\",\n            files: \"கோப்புகள்\",\n            screenshare: \"திரைப்பகிர்வு\",\n            videoCall: \"வீடியோ அழைப்பு\",\n            call: \"அழைப்பு\",\n          },\n          podDetailsPage: {\n            podName: \"பாட் பெயர்\",\n            addExistingPeerToPod: \"பாட்குக்கு தற்போதைய பீர் சேர்க்கவும்\",\n          },\n        },\n      },\n      // urdu\n      ur: {\n        translation: {\n          common: {\n            inAppNotification: \"ان ایپ کی اطلاع\",\n            browserNotification: \"براؤزر کی اطلاع\",\n            more: \"مزید\",\n          },\n          components: {\n            cryptoSignature: \"کرپٹو سائنیچر\",\n            connectToPeer: {\n              connectToPeer: \"پیر سے رابطہ کریں\",\n              shareLink: \"لنک شیئر کریں\",\n              shareToConnect: \"رابطہ کرنے کے لئے شیئر کریں\",\n              enterLink: \"پیر لنک درج کریں\",\n              shareQr: \"لنک QR شیئر کریں\",\n              scanQr: \"پیر QR اسکین کریں\",\n              stopScanning: \"اسکیننگ روکیں\",\n            },\n            menuItems: {\n              info: \"معلومات\",\n              about: \"کے بارے میں\",\n              docs: \"دستاویزات\",\n              github: \"گٹ ہب\",\n              reddit: \"ریڈٹ\",\n              options: \"اختیارات\",\n              language: \"زبان\",\n              lightMode: \"لائٹ موڈ\",\n              darkMode: \"ڈارک موڈ\",\n              fullscreen: \"پوری اسکرین\",\n              exitFullscreen: \"پوری اسکرین سے باہر نکلیں\",\n              install: \"انسٹال کریں\",\n              requestingToInstall: \"انسٹال کرنے کی درخواست کر رہا ہے\",\n              installPossible:\n                \"👍 انسٹال کرنے کے قابل ہے. اپنی براؤزر کی ترتیبات میں کوشش کریں.\",\n              installDismissed:\n                \"👎 انسٹال کیا گیا. اپنی براؤزر کی ترتیبات میں کوشش کریں.\",\n              installFailed:\n                \"👎 انسٹال کیا گیا. اپنی براؤزر کی ترتیبات میں کوشش کریں.\",\n              installNotSupported:\n                \"👎 انسٹال کیا گیا. اپنی براؤزر کی ترتیبات میں کوشش کریں.\",\n              profile: \"پروفائل\",\n              terms: \"شرائط و ضوابط\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"پروفائل کو ترتیب دیں\",\n            setProfile: \"پروفائل ترتیب دیں\",\n            setPreference: \"ترجیح ترتیب دیں\",\n            inAppNotification: \"ان ایپ کی اطلاع\",\n            browserNotification: \"براؤزر کی اطلاع\",\n            termsAgreement:\n              \"میں پہلے سے ہی ان شرائط و ضوابط کو مانتا ہوں اور اس ایپ کی تصدیق کرتا ہوں کہ یہ ایک ٹیکنالوجی کا تجربہ اور پروسیسنگ پلیٹ فارم ہے. میں اسے استعمال کرتا ہوں اور اس میں موجود خصوصیات اور قوتوں کو سمجھتا ہوں.\",\n            connect: \"رابطہ کریں\",\n            loadProfileFromFile: \"فائل سے پروفائل لوڈ کریں\",\n            setAvatar: \"اوتار ترتیب دیں\",\n            displayName: \"نام\",\n            cryptoSignature: \"کرپٹو سائنیچر\",\n            welcome:\n              \"positive-intentions ایک ایپ کی بنیادی پروفائل اور ڈیٹا پلیٹ فارم ہے جو اپنے پروفائل اور خصوصی معلومات کو آپ کے سرور اور خصوصی سرورز پر محفوظ طریقے سے ذخیرہ کرتا ہے. یہ ایک جاوا اسکرپٹ پر مبنی ایک معیاری ویب ایپلی کیشن ہے.\",\n            featuresInclude:\n              \"خصوصیات: اس ایپ میں ایک ٹیکنالوجی اور پروسیسنگ پلیٹ فارم ہے. اس کے علاوہ:\",\n            noCookies: \"کوکیز نہیں\",\n            noRegistration: \"رجسٹریشن نہیں\",\n            noInstalling: \"انسٹال نہیں\",\n            groupMessaging: \"گروپ میسجنگ\",\n            textMessaging: \"متن پیغامات\",\n            multimediaMessaging: \"ملٹی میڈیا پیغامات\",\n            videoCalls: \"ویڈیو کالز\",\n            dataOwnership: \"ڈیٹا کی ملکیت\",\n            screensharing: \"اسکرین شیئرنگ (ڈیسک ٹاپ کلائنٹس)\",\n            fileTransfer: \"فائل ٹرانسفر\",\n            getStarted:\n              \"پروفائل ترتیب دیں. آپ کی پروفائل، آپ کا سرور اور آپ کی خصوصی معلومات کو ذخیرہ کرتا ہے.\",\n          },\n          contactsPage: {\n            pageTitle: \"رابطے\",\n          },\n          profilePage: {\n            pageTitle: \"پروفائل\",\n            changeAvatar: \"اوتار تبدیل کریں\",\n            displayName: \"نام\",\n            more: \"مزید\",\n            regenerateConnectionId: \"رابطہ ID دوبارہ تیار کریں\",\n            preferences: \"ترجیحات\",\n            backupProfile: \"پروفائل بیک اپ\",\n            logout: \"لاگ آوٹ\",\n          },\n          podsPage: {\n            pageTitle: \"پوڈز\",\n            social: \"سوشل\",\n            cloud: \"کلاؤڈ\",\n            network: \"نیٹ ورک\",\n            devices: \"ڈیوائسز\",\n            storage: \"ذخیرہ\",\n            commingSoon: \"جلد آ رہا ہے\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"رابطے کا نام\",\n            goToPodWith: \"{{displayName}} کے ساتھ پوڈ پر جائیں\",\n            createNewPodWith: \"{{displayName}} کے ساتھ نیا پوڈ بنائیں\",\n            podName: \"پوڈ کا نام\",\n            createPod: \"پوڈ بنائیں\",\n            peerId: \"پیر ID\",\n            connectionId: \"رابطہ ID\",\n            registerNewDevice: \"نیا آلہ رجسٹر کریں\",\n            blockContact: \"رابطہ بلاک کریں\",\n          },\n          podPage: {\n            podDetails: \"پوڈ کی تفصیلات\",\n            files: \"فائلیں\",\n            screenshare: \"اسکرین شیئرنگ\",\n            videoCall: \"ویڈیو کال\",\n            call: \"کال\",\n          },\n          podDetailsPage: {\n            podName: \"پوڈ کا نام\",\n            addExistingPeerToPod: \"موجودہ پیر کو پوڈ میں شامل کریں\",\n          },\n        },\n      },\n      // yue chinese\n      yu: {\n        translation: {\n          common: {\n            inAppNotification: \"應用程式通知\",\n            browserNotification: \"瀏覽器通知\",\n            more: \"更多\",\n          },\n          components: {\n            cryptoSignature: \"加密簽名\",\n            connectToPeer: {\n              connectToPeer: \"連接到同行\",\n              shareLink: \"分享鏈接\",\n              shareToConnect: \"分享以連接\",\n              enterLink: \"輸入同行鏈接\",\n              shareQr: \"分享QR鏈接\",\n              scanQr: \"掃描同行QR\",\n              stopScanning: \"停止掃描\",\n            },\n            menuItems: {\n              info: \"信息\",\n              about: \"關於\",\n              docs: \"文檔\",\n              github: \"GitHub\",\n              reddit: \"Reddit\",\n              options: \"選項\",\n              language: \"語言\",\n              lightMode: \"亮色模式\",\n              darkMode: \"黑暗模式\",\n              fullscreen: \"全屏\",\n              exitFullscreen: \"退出全屏\",\n              install: \"安裝\",\n              requestingToInstall: \"請求安裝\",\n              installPossible: \"👍 可以安裝。 請嘗試在您的瀏覽器中。\",\n              installDismissed: \"👎 安裝被拒絕。 請嘗試在您的瀏覽器中。\",\n              installFailed: \"👎 安裝失敗。 請嘗試在您的瀏覽器中。\",\n              installNotSupported: \"👎 安裝不受支持。 請嘗試在您的瀏覽器中。\",\n              profile: \"個人資料\",\n              terms: \"條款\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"設置個人資料\",\n            setProfile: \"設置個人資料\",\n            setPreference: \"設置偏好\",\n            inAppNotification: \"應用程式通知\",\n            browserNotification: \"瀏覽器通知\",\n            termsAgreement:\n              \"我已經同意這些條款並確認這是一個技術實驗和處理平台。 我使用它並理解其中的功能和力量。\",\n            connect: \"連接\",\n            loadProfileFromFile: \"從文件加載個人資料\",\n            setAvatar: \"設置頭像\",\n            displayName: \"顯示名稱\",\n            cryptoSignature: \"加密簽名\",\n            welcome:\n              \"positive-intentions 是一個基於瀏覽器的個人資料和數據平台，可將您的個人資料和私人信息安全地存儲在您的服務器和私人服務器上。 它是一個基於JavaScript的標準Web應用程序。\",\n            featuresInclude:\n              \"功能：此應用程序包含一個技術和處理平台。 此外，它具有以下功能：\",\n            noCookies: \"無Cookie\",\n            noRegistration: \"無需註冊\",\n            noInstalling: \"無需安裝\",\n            groupMessaging: \"群組消息\",\n            textMessaging: \"文字消息\",\n            multimediaMessaging: \"多媒體消息\",\n            videoCalls: \"視頻通話\",\n            dataOwnership: \"數據所有權\",\n            screensharing: \"屏幕共享（桌面客戶端）\",\n            fileTransfer: \"文件傳輸\",\n            getStarted:\n              \"設置個人資料。 它將保存您的個人資料，您的服務器和您的私人信息。\",\n          },\n          contactsPage: {\n            pageTitle: \"聯絡人\",\n          },\n          profilePage: {\n            pageTitle: \"個人資料\",\n            changeAvatar: \"更改頭像\",\n            displayName: \"顯示名稱\",\n            more: \"更多\",\n            regenerateConnectionId: \"重新生成連接ID\",\n            preferences: \"偏好\",\n            backupProfile: \"備份個人資料\",\n            logout: \"登出\",\n          },\n          podsPage: {\n            pageTitle: \"Pods\",\n            social: \"社交\",\n            cloud: \"雲\",\n            network: \"網絡\",\n            devices: \"設備\",\n            storage: \"存儲\",\n            commingSoon: \"即將推出\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"聯絡人名稱\",\n            goToPodWith: \"前往Pod與{{displayName}}\",\n            createNewPodWith: \"創建新Pod與{{displayName}}\",\n            podName: \"Pod名稱\",\n            createPod: \"創建Pod\",\n            peerId: \"同行ID\",\n            connectionId: \"連接ID\",\n            registerNewDevice: \"註冊新設備\",\n            blockContact: \"阻止聯絡人\",\n          },\n          podPage: {\n            podDetails: \"Pod詳細信息\",\n            files: \"文件\",\n            screenshare: \"屏幕共享\",\n            videoCall: \"視頻通話\",\n            call: \"通話\",\n          },\n          podDetailsPage: {\n            podName: \"Pod名稱\",\n            addExistingPeerToPod: \"將現有對等體添加到Pod\",\n          },\n        },\n      },\n      // ukrainian\n      uk: {\n        translation: {\n          common: {\n            inAppNotification: \"Сповіщення додатка\",\n            browserNotification: \"Сповіщення браузера\",\n            more: \"Більше\",\n          },\n          components: {\n            cryptoSignature: \"Криптографічний підпис\",\n            connectToPeer: {\n              connectToPeer: \"Підключитися до піра\",\n              shareLink: \"Поділитися посиланням\",\n              shareToConnect: \"Поділитися, щоб підключитися\",\n              enterLink: \"Введіть посилання піра\",\n              shareQr: \"Поділитися QR-посиланням\",\n              scanQr: \"Сканувати QR-посилання\",\n              stopScanning: \"Зупинити сканування\",\n            },\n            menuItems: {\n              info: \"Інформація\",\n              about: \"Про\",\n              docs: \"Документи\",\n              github: \"GitHub\",\n              reddit: \"Reddit\",\n              options: \"Опції\",\n              language: \"Мова\",\n              lightMode: \"Світлий режим\",\n              darkMode: \"Темний режим\",\n              fullscreen: \"На весь екран\",\n              exitFullscreen: \"Вийти з повноекранного режиму\",\n              install: \"Встановити\",\n              requestingToInstall: \"Запит на встановлення\",\n              installPossible:\n                \"👍 Можливо встановити. Спробуйте в своєму браузері.\",\n              installDismissed:\n                \"👎 Встановлення відхилено. Спробуйте в своєму браузері.\",\n              installFailed:\n                \"👎 Встановлення не вдалося. Спробуйте в своєму браузері.\",\n              installNotSupported:\n                \"👎 Встановлення не підтримується. Спробуйте в своєму браузері.\",\n              profile: \"Профіль\",\n              terms: \"Умови\",\n            },\n          },\n          loginPage: {\n            pageTitle: \"Налаштувати профіль\",\n            setProfile: \"Налаштувати профіль\",\n            setPreference: \"Налаштувати перевагу\",\n            inAppNotification: \"Сповіщення додатка\",\n            browserNotification: \"Сповіщення браузера\",\n            termsAgreement:\n              \"Я вже погодився з цими умовами і підтвердив, що це експериментальна технологія та платформа обробки. Я використовую його і розумію функції та потужність.\",\n            connect: \"Підключитися\",\n            loadProfileFromFile: \"Завантажити профіль з файлу\",\n            setAvatar: \"Встановити аватар\",\n            displayName: \"Ім'я користувача\",\n            cryptoSignature: \"Криптографічний підпис\",\n            welcome:\n              \"positive-intentions - це основна платформа профілів та обробки даних на основі браузера, яка безпечно зберігає ваш профіль, ваш сервер та ваші приватні сервери. Це стандартний веб-додаток на основі JavaScript.\",\n            featuresInclude:\n              \"Особливості: цей додаток містить платформу технологій та обробки. Крім того, він має такі функції:\",\n            noCookies: \"Без печива\",\n            noRegistration: \"Без реєстрації\",\n            noInstalling: \"Без установки\",\n            groupMessaging: \"Групові повідомлення\",\n            textMessaging: \"Текстові повідомлення\",\n            multimediaMessaging: \"Мультимедійні повідомлення\",\n            videoCalls: \"Відеодзвінки\",\n            dataOwnership: \"Власність на даних\",\n            screensharing:\n              \"Спільне використання екрана (клієнти робочого столу)\",\n            fileTransfer: \"Передача файлів\",\n            getStarted:\n              \"Налаштуйте свій профіль. Він зберігає ваш профіль, ваш сервер та ваші приватні дані.\",\n          },\n          contactsPage: {\n            pageTitle: \"Контакти\",\n          },\n          profilePage: {\n            pageTitle: \"Профіль\",\n            changeAvatar: \"Змінити аватар\",\n            displayName: \"Ім'я користувача\",\n            more: \"Більше\",\n            regenerateConnectionId: \"Перегенерувати ідентифікатор з'єднання\",\n            preferences: \"Переваги\",\n            backupProfile: \"Резервне копіювання профілю\",\n            logout: \"Вийти\",\n          },\n          podsPage: {\n            pageTitle: \"Поди\",\n            social: \"Соціальний\",\n            cloud: \"Хмара\",\n            network: \"Мережа\",\n            devices: \"Пристрої\",\n            storage: \"Зберігання\",\n            commingSoon: \"Скоро\",\n          },\n          contactDetailsPage: {\n            contactDisplayName: \"Ім'я контакту\",\n            goToPodWith: \"Перейти до Pod з {{displayName}}\",\n            createNewPodWith: \"Створити новий Pod з {{displayName}}\",\n            podName: \"Назва Pod\",\n            createPod: \"Створити Pod\",\n            peerId: \"Ідентифікатор піра\",\n            connectionId: \"Ідентифікатор з'єднання\",\n            registerNewDevice: \"Зареєструйте новий пристрій\",\n            blockContact: \"Заблокувати контакт\",\n          },\n          podPage: {\n            podDetails: \"Деталі Pod\",\n            files: \"Файли\",\n            screenshare: \"Спільне використання екрана\",\n            videoCall: \"Відеодзвінок\",\n            call: \"Дзвінок\",\n          },\n          podDetailsPage: {\n            podName: \"Назва Pod\",\n            addExistingPeerToPod: \"Додати існуючого піра до Pod\",\n          },\n        },\n      },\n    },\n  });\n\n// an array of 2 letter identifiers and the language name in their respective language from the list of translation in this file\n// this is used to populate the language dropdown\nexport const languages = [\n  { id: \"en\", name: \"English\" },\n  { id: \"es\", name: \"Español\" },\n  { id: \"fr\", name: \"Français\" },\n  { id: \"de\", name: \"Deutsch\" },\n  { id: \"it\", name: \"Italiano\" },\n  { id: \"nl\", name: \"Nederlands\" },\n  { id: \"pl\", name: \"Polski\" },\n  { id: \"pt\", name: \"Português\" },\n  { id: \"ar\", name: \"العربية\" },\n  { id: \"ur\", name: \"اردو\" },\n  { id: \"hi\", name: \"हिन्दी\" },\n  { id: \"bn\", name: \"বাংলা\" },\n  { id: \"te\", name: \"తెలుగు\" },\n  { id: \"ta\", name: \"தமிழ்\" },\n  { id: \"gu\", name: \"ગુજરાતી\" },\n  { id: \"id\", name: \"Bahasa Indonesia\" },\n  { id: \"sw\", name: \"Kiswahili\" },\n  { id: \"tr\", name: \"Türkçe\" },\n  { id: \"kr\", name: \"한국어\" },\n  { id: \"zh\", name: \"中文\" },\n  { id: \"yu\", name: \"粵語\" },\n  { id: \"ja\", name: \"日本語\" },\n  { id: \"he\", name: \"עברית\" },\n  { id: \"ru\", name: \"Русский\" },\n  { id: \"uk\", name: \"Українська\" },\n  { id: \"vi\", name: \"Tiếng Việt\" },\n  { id: \"kl\", name: \"Klingon\" },\n  // { id: 'th', name: 'ไทย' },\n  // { id: 'fa', name: 'فارسی' },\n  // { id: 'el', name: 'Ελληνικά' },\n  // { id: 'ro', name: 'Română' },\n  // { id: 'hu', name: 'Magyar' },\n  // { id: 'cs', name: 'Čeština' },\n  // { id: 'sv', name: 'Svenska' },\n  // { id: 'no', name: 'Norsk' },\n  // { id: 'da', name: 'Dansk' },\n  // { id: 'fi', name: 'Suomi' },\n  // { id: 'uk', name: 'Українська' },\n  // { id: 'bg', name: 'български' },\n  // { id: 'sk', name: 'Slovenčina' },\n  // { id: 'hr', name: 'Hrvatski' },\n  // { id: 'ca', name: 'Català' },\n  // { id: 'lt', name: 'Lietuvių' },\n  // { id: 'sr', name: 'Srpski' },\n  // { id: 'sl', name: 'Slovenščina' },\n  // { id: 'et', name: 'Eesti' },\n  // { id: 'lv', name: 'Latviešu' },\n  // { id: 'tl', name: 'Tagalog' },\n  // { id: 'is', name: 'Íslenska' },\n  // { id: 'sq', name: 'Shqip' },\n  // { id: 'mk', name: 'Македонски' },\n  // { id: 'bn', name: 'বাংলা' },\n  // { id: 'hy', name: 'Հայերեն' },\n  // { id: 'az', name: 'Azərbaycan' },\n  // { id: 'ka', name: 'ქართული' },\n  // { id: 'kk', name: 'Қазақ' },\n  // { id: 'uz', name: 'Oʻzbek' },\n  // { id: 'mn', name: 'Монгол' },\n  // { id: 'ky', name: 'Кыргызча' },\n  // { id: 'tg', name: 'Тоҷикӣ' },\n  // { id: 'tk', name: 'Türkmen' },\n  // { id: 'ps', name: 'پښتو' },\n  // { id: 'ur', name: 'اردو' },\n];\n\nexport default i18n;\n","/* eslint-disable */\n\nfunction calculateSHA256(str) {\n  const charToCode = (char) => char.charCodeAt(0);\n  const leftRotate = (value, shift) =>\n    (value >>> shift) | (value << (32 - shift));\n  const rightRotate = (value, shift) =>\n    (value << shift) | (value >>> (32 - shift));\n  const toHex = (value) => value.toString(16).padStart(8, \"0\");\n\n  const addUnsigned = (x, y) => {\n    const MAX_UINT32 = Math.pow(2, 32) - 1;\n    return (x & MAX_UINT32) + (y & MAX_UINT32);\n  };\n\n  const wordsToBlocks = (words) => {\n    const blocks = [];\n    for (let i = 0; i < words.length; i += 16) {\n      blocks.push(words.slice(i, i + 16));\n    }\n    return blocks;\n  };\n\n  const preprocessMessage = (message) => {\n    const bitLength = message.length * 8;\n    const paddingLength =\n      message.length % 64 < 56\n        ? 56 - (message.length % 64)\n        : 120 - (message.length % 64);\n\n    const paddedMessage = new Uint8Array(message.length + paddingLength + 8);\n    paddedMessage.set(message);\n    paddedMessage[message.length] = 0x80;\n    paddedMessage.set(\n      new Uint8Array(bitLengthToArray(bitLength)),\n      paddedMessage.length - 8,\n    );\n\n    return paddedMessage;\n  };\n\n  const bitLengthToArray = (bitLength) => {\n    const arr = new Uint8Array(8);\n    for (let i = 7; i >= 0; i--) {\n      arr[i] = bitLength & 0xff;\n      bitLength >>>= 8;\n    }\n    return arr;\n  };\n\n  const computeSHA256 = (message) => {\n    const K = new Uint32Array([\n      0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n      0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n      0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n      0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n      0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n      0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n      0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n      0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n      0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n      0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n      0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n    ]);\n\n    const blocks = wordsToBlocks(new Uint32Array(message.buffer));\n    const hash = new Uint32Array([\n      0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c,\n      0x1f83d9ab, 0x5be0cd19,\n    ]);\n\n    for (const block of blocks) {\n      const schedule = new Uint32Array(64);\n      schedule.set(block);\n\n      for (let t = 16; t < 64; t++) {\n        const s0 =\n          rightRotate(schedule[t - 15], 7) ^\n          rightRotate(schedule[t - 15], 18) ^\n          (schedule[t - 15] >>> 3);\n        const s1 =\n          rightRotate(schedule[t - 2], 17) ^\n          rightRotate(schedule[t - 2], 19) ^\n          (schedule[t - 2] >>> 10);\n        schedule[t] = addUnsigned(\n          addUnsigned(addUnsigned(schedule[t - 16], s0), schedule[t - 7]),\n          s1,\n        );\n      }\n\n      let a = hash[0];\n      let b = hash[1];\n      let c = hash[2];\n      let d = hash[3];\n      let e = hash[4];\n      let f = hash[5];\n      let g = hash[6];\n      let h = hash[7];\n\n      for (let t = 0; t < 64; t++) {\n        const S1 = rightRotate(e, 6) ^ rightRotate(e, 11) ^ rightRotate(e, 25);\n        const ch = (e & f) ^ (~e & g);\n        const temp1 = addUnsigned(\n          addUnsigned(addUnsigned(addUnsigned(h, S1), ch), K[t]),\n          schedule[t],\n        );\n        const S0 = rightRotate(a, 2) ^ rightRotate(a, 13) ^ rightRotate(a, 22);\n        const maj = (a & b) ^ (a & c) ^ (b & c);\n        const temp2 = addUnsigned(S0, maj);\n\n        h = g;\n        g = f;\n        f = e;\n        e = addUnsigned(d, temp1);\n        d = c;\n        c = b;\n        b = a;\n        a = addUnsigned(temp1, temp2);\n      }\n\n      hash[0] = addUnsigned(hash[0], a);\n      hash[1] = addUnsigned(hash[1], b);\n      hash[2] = addUnsigned(hash[2], c);\n      hash[3] = addUnsigned(hash[3], d);\n      hash[4] = addUnsigned(hash[4], e);\n      hash[5] = addUnsigned(hash[5], f);\n      hash[6] = addUnsigned(hash[6], g);\n      hash[7] = addUnsigned(hash[7], h);\n    }\n\n    const hashArray = new Uint8Array(hash.buffer);\n    const hashHex = Array.from(hashArray, (byte) =>\n      byte.toString(16).padStart(2, \"0\"),\n    ).join(\"\");\n\n    return hashHex;\n  };\n\n  const messageBytes = new TextEncoder().encode(str);\n  const paddedMessage = preprocessMessage(messageBytes);\n  const sha256Hash = computeSHA256(paddedMessage);\n\n  return sha256Hash;\n}\n\n// const inputString = 'Hello, World!';\n// const sha256Hash = calculateSHA256(inputString);\n// console.log('SHA-256:', sha256Hash);\n\nexport default calculateSHA256;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.swipeable-list-item__content {\n    background-color: transparent;\n    height: auto;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/atomic/molecules/conversation/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,6BAA6B;IAC7B,YAAY;AAChB\",\"sourcesContent\":[\".swipeable-list-item__content {\\n    background-color: transparent;\\n    height: auto;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.swipeable-list-item__content {\n    background-color: transparent;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/atomic/molecules/thread/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,6BAA6B;AACjC\",\"sourcesContent\":[\".swipeable-list-item__content {\\n    background-color: transparent;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.Resizer {\n    background: #000;\n    opacity: 0.2;\n    z-index: 1;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    -moz-background-clip: padding;\n    -webkit-background-clip: padding;\n    background-clip: padding-box;\n  }\n  \n  .Resizer:hover {\n    -webkit-transition: all 2s ease;\n    transition: all 2s ease;\n  }\n  \n  .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-top: 5px solid rgba(255, 255, 255, 0);\n    border-bottom: 5px solid rgba(255, 255, 255, 0);\n    cursor: row-resize;\n    width: 100%;\n  }\n  \n  .Resizer.horizontal:hover {\n    border-top: 5px solid rgba(0, 0, 0, 0.5);\n    border-bottom: 5px solid rgba(0, 0, 0, 0.5);\n  }\n  \n  .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-left: 5px solid rgba(255, 255, 255, 0);\n    border-right: 5px solid rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  \n  .Resizer.vertical:hover {\n    border-left: 5px solid rgba(0, 0, 0, 0.5);\n    border-right: 5px solid rgba(0, 0, 0, 0.5);\n  }\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/pages/feed/splitpanestyle.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,gBAAgB;IAChB,YAAY;IACZ,UAAU;IACV,2BAA2B;IAC3B,8BAA8B;IAC9B,sBAAsB;IACtB,6BAA6B;IAC7B,gCAAgC;IAChC,4BAA4B;EAC9B;;EAEA;IACE,+BAA+B;IAC/B,uBAAuB;EACzB;;EAEA;IACE,YAAY;IACZ,cAAc;IACd,4CAA4C;IAC5C,+CAA+C;IAC/C,kBAAkB;IAClB,WAAW;EACb;;EAEA;IACE,wCAAwC;IACxC,2CAA2C;EAC7C;;EAEA;IACE,WAAW;IACX,cAAc;IACd,6CAA6C;IAC7C,8CAA8C;IAC9C,kBAAkB;EACpB;;EAEA;IACE,yCAAyC;IACzC,0CAA0C;EAC5C;EACA;IACE,mBAAmB;EACrB;EACA;IACE,yBAAyB;EAC3B\",\"sourcesContent\":[\".Resizer {\\n    background: #000;\\n    opacity: 0.2;\\n    z-index: 1;\\n    -moz-box-sizing: border-box;\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n    -moz-background-clip: padding;\\n    -webkit-background-clip: padding;\\n    background-clip: padding-box;\\n  }\\n  \\n  .Resizer:hover {\\n    -webkit-transition: all 2s ease;\\n    transition: all 2s ease;\\n  }\\n  \\n  .Resizer.horizontal {\\n    height: 11px;\\n    margin: -5px 0;\\n    border-top: 5px solid rgba(255, 255, 255, 0);\\n    border-bottom: 5px solid rgba(255, 255, 255, 0);\\n    cursor: row-resize;\\n    width: 100%;\\n  }\\n  \\n  .Resizer.horizontal:hover {\\n    border-top: 5px solid rgba(0, 0, 0, 0.5);\\n    border-bottom: 5px solid rgba(0, 0, 0, 0.5);\\n  }\\n  \\n  .Resizer.vertical {\\n    width: 11px;\\n    margin: 0 -5px;\\n    border-left: 5px solid rgba(255, 255, 255, 0);\\n    border-right: 5px solid rgba(255, 255, 255, 0);\\n    cursor: col-resize;\\n  }\\n  \\n  .Resizer.vertical:hover {\\n    border-left: 5px solid rgba(0, 0, 0, 0.5);\\n    border-right: 5px solid rgba(0, 0, 0, 0.5);\\n  }\\n  .Resizer.disabled {\\n    cursor: not-allowed;\\n  }\\n  .Resizer.disabled:hover {\\n    border-color: transparent;\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `#main {\n  position: relative;\n  margin: 0;\n}\n.container, .canvas-wrapper {\n  width: 100%;\n  /* Other styling as needed */\n}\n\n#video, #output {\n  width: 100% !important;\n  height: auto !important;\n  display:\n   block; /* To prevent default margin/padding issues */\n}\n\n#video {\n  display: none;\n}\n.scatter-container {\n  display: none;\n}\n#scatter-gl-container-left, #scatter-gl-container-right {\n  position: relative;\n  float: left;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/pages/hands/style.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;EAClB,SAAS;AACX;AACA;EACE,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,sBAAsB;EACtB,uBAAuB;EACvB;QACM,EAAE,6CAA6C;AACvD;;AAEA;EACE,aAAa;AACf;AACA;EACE,aAAa;AACf;AACA;EACE,kBAAkB;EAClB,WAAW;AACb\",\"sourcesContent\":[\"#main {\\n  position: relative;\\n  margin: 0;\\n}\\n.container, .canvas-wrapper {\\n  width: 100%;\\n  /* Other styling as needed */\\n}\\n\\n#video, #output {\\n  width: 100% !important;\\n  height: auto !important;\\n  display:\\n   block; /* To prevent default margin/padding issues */\\n}\\n\\n#video {\\n  display: none;\\n}\\n.scatter-container {\\n  display: none;\\n}\\n#scatter-gl-container-left, #scatter-gl-container-right {\\n  position: relative;\\n  float: left;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n#root {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;EAClC,aAAa;EACb,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE;aACW;AACb\",\"sourcesContent\":[\"body {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n#root {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n    monospace;\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["createSlice","current","contactsSlice","name","initialState","reducers","addContact","state","action","find","contact","id","payload","push","removeContact","newState","filteredNewState","filter","updateContact","map","_objectSpread","setContacts","updateContactDisplayName","displayName","_contactsSlice$action","actions","reducer","encryptionSlice","addEncryptionKeys","_action$payload","userId","publicKey","privateKey","remotePublicKey","symmetricKey","updateEncryptionKeys","_action$payload2","established","deleteEncryptionKeys","setEncryption","_encryptionSlice$acti","React","TermsAndConditions","_ref","padding","createElement","style","href","PrivacyPolicy","_ref2","version1","version2","version","terms","privacyPolicy","useRef","useEffect","useState","useTheme","makeStyles","Paper","Typography","ClearIcon","useStyles","theme","canvasContainer","display","flexDirection","position","spacing","backgroundColor","palette","background","paper","borderRadius","shape","height","canvas","width","deleteIcon","top","right","cursor","SignatureCanvas","heading","onChange","defaultValue","canvasContainerRef","canvasRef","_useState","_useState2","_slicedToArray","isDrawing","setIsDrawing","_useState3","_useState4","context","setContext","_useState5","_useState6","hasContent","setHasContent","classes","clientWidth","clientHeight","ctx","getContext","strokeStyle","mode","fillStyle","lineWidth","clearRect","img","Image","src","onload","drawImage","preventScroll","e","preventDefault","window","addEventListener","passive","removeEventListener","startDrawing","_getRelativeCoordinat","getRelativeCoordinates","offsetX","offsetY","beginPath","moveTo","draw","_getRelativeCoordinat2","lineTo","stroke","stopDrawing","closePath","canvasDataUrl","toDataURL","clearCanvas","rect","getBoundingClientRect","type","touch","touches","clientX","left","clientY","className","ref","sx","flexShrink","color","onClick","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onConnect","onReceive","updateUsername","updatePeerId","updateAvatar","logout","setInAppNotification","setBrowserNotification","Button","Accordion","AccordionDetails","AccordionSummary","ExpandMoreIcon","QRCode","TextField","InputAdornment","IconButton","ContentCopyIcon","useSelector","useDispatch","useStore","ConnectWithoutContactIcon","useNavigate","useParams","Blockchain","useBlockchain","compiler","profileCompiler","blockBuilders","useTranslation","WebRTCWizard","QRReader","qrcodeReader","zIndex","ConnectToPeer","qr","open","link","collapse","_useTranslation","t","dispatch","navigate","_useParams","contactId","result","setResult","scanning","setScanning","qrcodeRef","_React$useState","_React$useState2","expanded","setExpanded","handleChange","panel","event","isExpanded","prevExpanded","concat","_toConsumableArray","item","contactNamePreset","setContactNamePreset","_useState7","_useState8","peerLink","setPeerLink","storedBlockchain","userProfile","blockchain","_useBlockchain","compiledProfile","compiledBlockchain","storedConnectionId","connectionId","updateConnectionIdDispatch","handleConnectionIdChange","target","value","handlePeerLinkChange","_extractIDFromLink","previousValue","extractIDFromLink","isPasted","Math","abs","length","handlePeerLinkConnect","pattern","match","handleCopyConnectionIdToClipboard","navigator","clipboard","writeText","location","origin","handleScan","data","_URL","_URL$split","text","URL","hash","split","call","handleError","err","console","error","includes","undefined","expandIcon","noWrap","variant","margin","fullWidth","label","InputProps","readOnly","endAdornment","edge","autoComplete","onKeyPress","ev","key","shiftKey","disabled","size","maxWidth","viewBox","delay","onError","onScan","constraints","video","facingMode","_regeneratorRuntime","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","_asyncToGenerator","fn","self","args","arguments","apply","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","iter","Array","from","isArray","_arrayLikeToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","minLen","toString","test","len","arr2","useMemo","Component","Avatar","AppBar","updateAgreedToTerms","setUserProfile","addToBlockchain","setPods","PageContainer","Checkbox","AllTermsAndConditions","Box","RefreshIcon","FormControl","InputLabel","Select","MenuItem","useNotification","Switch","FormGroup","FormControlLabel","ColorModeContext","Slider","JSZip","useCryptography","CoachMark","hipaintImage","decentralisedImage","agnosticImage","dataImportExportImage","noRegistration","pushNotifications","videoCalls","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","avatars","SimpleSlider","onSelect","settings","centerMode","infinite","centerPadding","slidesToShow","speed","avatar","index","minHeight","minWidth","root","flexGrow","appBar","form","title","fontWeight","textAlign","alignItems","hidden","visibility","LoginPage","_compiledProfile$sett","_compiledProfile$sett2","_useCryptography","chance","randomString","contactName","_AllTermsAndCondition","latestTermsAndConditionsVersion","colorMode","useContext","store","updateUsernameDispatch","username","updateAgreedToTermsDispatch","agreedToTerms","setUserProfileDispatch","updateAvatarDispatch","setPodsDispatch","pods","setContactsDispatch","contacts","setEncryptionDispatch","encryption","setInAppNotificationDispatch","inAppNotification","setBrowserNotificationDispatch","browserNotification","fileRef","setAvatarRef","animal","setUsername","avatarBase64","setAvatarBase64","setAgreedToTerms","addToBlockchainDispatch","block","blocks","storage","addBlocksToProfile","addBlocks","storedUsername","storedId","storedInAppNotification","storedBrowserNotification","peerjsServer","setPeerjsServer","handlePeerjsServerChange","_useState9","_useState10","encryptionSignature","setEncryptionSignature","handleEncryptionSignatureChange","signature","setAvatar","fetch","res","blob","reader","FileReader","readAsDataURL","onloadend","randomAvatar","floor","random","isInstalledPwa","matchMedia","matches","standalone","document","referrer","randomGroups","_useState11","_useState12","idType","setIdType","_useState13","_useState14","fromUser","setFromUser","removeAllNonAlphaNumeric","str","replace","setNewId","animals","toLowerCase","join","countries","country","full","months","month","_useState15","_useState16","appNotifications","setAppNotifications","_useState17","_useState18","browserNotifications","setBrowserNotifications","handleAppNotificationChange","checked","handleBrowserNotificationChange","inAppNotifications","inputProps","defaultChecked","i18n","pageTitle","handleUsernameChange","handleSubmit","newProfileBlocks","updateId","updateConnectionId","updateDisplayName","updateInAppNotification","updateBrowserNotification","updatePeerjsServer","updateEncryptionSignature","tacCheckbox","stopPropagation","log","handleFile","_x","_handleFile","_callee2","_ref3","files","zip","_callee2$","_context2","loadAsync","_ref5","_callee","relativePath","zipEntry","content","_JSON$parse","_callee$","_context","file","JSON","parse","_x2","_x3","t0","handleAvatar","_ref4","maxWidthHeight","base64String","createObjectURL","_useState19","_useState20","activatedNumber","setActivateNumber","NextButton","PrevButton","ref1","ref2","ref3","ref4","ref5","ref6","ref7","coachList","activate","component","reference","tooltip","coach","isSubmitDisabled","headerProps","noValidate","required","customButtons","menuProps","icon","items","Fragment","gutterBottom","connect","_setAvatarRef$current","click","accept","autoFocus","labelId","control","placeholder","_fileRef$current","List","ListItem","ListItemText","styled","Badge","ListItemIcon","ChevronRight","MailIcon","DoubleArrowIcon","DownloadIcon","CloudIcon","StorageIcon","DevicesIcon","SwipeableList","SwipeableListItem","Divider","Chip","CollectionsIcon","ViewInArIcon","NavigationIcon","SmartToyIcon","BrushIcon","GroupsIcon","chevron","justifyContent","StyledBadge","boxShadow","animation","border","transform","opacity","Root","typography","body2","marginTop","ListComponent","list","chevronOverride","sections","isSwiping","setIsSwiping","handleClick","itemOnClick","handleStartSwiping","handleEndSwiping","section","button","isOnline","overlap","anchorOrigin","vertical","horizontal","invisible","isSomeOnline","isCloud","isGram","isVerse","isMap","isAI","isVinnC","isContacts","avatarUrl","alt","primary","primaryTypographyProps","whiteSpace","overflow","textOverflow","isClone","badgeContent","unreadCount","handleEndSwipingWithClick","logToNLevelAnalytics","url","propKey","accountId","timestamp","area","Date","now","eventCategory","headers","body","stringify","forwardRef","usePeer","podCompiler","GroupsListPage","storedPods","storedContacts","sendNotification","userProfileBlockchain","storedPersonalId","_usePeer","activeConnections","_useBlockchain2","blockchains","pod","compiledPods","compiledBlockchains","podsList","_storedPods$find","_pod$users","_storedContacts$find$","_storedContacts$find","_pod$users3","_storedContacts$find$2","_storedContacts$find2","users","_pod$users2","memberId","_pod$users4","every","some","clone","Pods","profileBlockchain","chain","b","compile","Notification","permission","requestPermission","VoiceRecorderButton","onVoiceRecording","recording","setRecording","mediaRecorder","setMediaRecorder","audioUrl","setAudioUrl","audioRef","startRecording","mediaDevices","getUserMedia","audio","stream","recorder","MediaRecorder","start","ondataavailable","base64AudioMessage","stopRecording","playRecording","play","controls","_extends","assign","bind","source","OutlinedInput","SendIcon","AttachFileIcon","json","Toolbar","Container","Conversation","formatDate","Message","addMessage","updatePodUnreadCount","setShouldHangup","ImageIcon","PlaceIcon","calculateMD5","calculateSHA256","addStorageItem","MicIcon","AttachmentIcon","encodeEmojisToUnicode","Slide","Dialog","DialogTitle","DialogContent","DialogActions","CloseIcon","lightBackground","darkBackground","calculateHash","paddingBottom","conversation","messageInput","BootstrapDialog","Transition","props","direction","Pod","_podBlockchain$users2","_podBlockchain$name","_contactDetails$displ","_podBlockchain$users3","_podBlockchain$users4","_podBlockchain$users5","_podBlockchain$messag","_replyMessage$timesta","podId","storedAvatar","addMessageDispatch","message","setShouldHangupDispatch","shouldHangUp","updatePodUnreadCountDispatch","messageInputValue","setMessageInputValue","mediaStream","setMediaStream","callActive","setCallActive","imageAttachment","setImageAttachment","videoAttachment","setVideoAttachment","fileAttachment","setFileAttachment","locationAttachment","setLocationAttachment","audioAttachment","setAudioAttachment","linkAttachment","setLinkAttachment","isLoadingFile","setIsLoadingFile","inputRef","fileInputRef","setOpen","handleClickOpen","handleClose","addStorageItemDispatch","podBlockchain","addBlocksToPod","sendMessage","makeCall","endCall","calls","callsHash","storedShouldHangup","shouldHangup","peerIsTyping","_useState21","_useState22","peersActivelyTyping","setPeersActivelyTyping","k","handleEndCall","activeCalls","handleAttachFile","handleAttachImage","handleAttachLocation","geolocation","getCurrentPosition","_position$coords","coords","latitude","longitude","handleAttachAudio","attachImage","newAttachment","sha","onerror","onabort","attachFile","handleUpvote","messageId","newBlocks","upvoteMessage","pendingUpdate","pendingBlocks","pendingStorage","handleSendMessage","_useState23","_useState24","replyMessage","setReplyMessage","handleOnReply","messageObject","image","reply","timestampSent","valueOf","timestampRecieved","newMessageBlocks","peerDisplayName","isTyping","podDetails","messages","response","handleMessageChange","remoteStreamCount","_remoteStream","remote","local","_localStream","metadata","_ref6","isCasting","cast","getElementById","srcObject","handleAnswerCall","_ref7","_call$metadata","_call$_remoteStream","hasVideo","newMediaStream","_call$_remoteStream2","_hasVideo","_newMediaStream","getVideoTracks","answer","contactDetails","_podBlockchain$users","member","user","headerActions","isMobile","userAgent","isGroup","handleItemDelete","deleteMessage","subMenuItems","screen","backgroundImage","backButton","backCount","avatarProps","deleteItem","onReply","onUpvote","_message$payload","attachmentSha","loading","marginBottom","bottom","disableGutters","attachment","created","multiline","onClose","TransitionComponent","m","grey","dividers","_call$metadata2","localStream","oninactive","tracks","getTracks","track","playsInline","muted","mb","updatePodName","addUserToPod","removePod","Menu","AddIcon","Profile","_useTranslation2","anchorEl","setAnchorEl","updatePodNameDispatch","podName","addUserToPodDispatch","removePodDispatch","append","compiledPodBlockchain","addPodBlocks","members","connectToPeer","membersNotConnectedTo","_React$useState3","_React$useState4","handlePodNameChange","handleMenu","currentTarget","membersList","contactsThatCanBeAdded","handleAddPeerToGroup","addNewUserBlocks","addMember","newPod","recipients","marginRight","ListItemAvatar","Fab","FileCopyIcon","SaveIcon","PrintIcon","ShareIcon","CameraAltIcon","QrCode2Icon","LinkIcon","red","fab","ContactsListPage","headerOverride","contactsList","previewStyle","createNewPod","removeUserFromConversationFromAllPods","update","userProfileId","removeContactDispatch","updateContactDisplayNameDispatch","newDisplayName","createNewPodDispatch","removeUserFromConversationFromAllPodsDispatch","chatName","setChatName","podWithPeer","_pod$blockchain$chain","_pod$blockchain","_pod$blockchain$stora","_pod$blockchain2","_compiledBlockchain$u","anyPodWithPeer","_pod$blockchain$chain2","_pod$blockchain3","_pod$blockchain$stora2","_pod$blockchain4","_storedPods$find$bloc","storedPod","numberOfPod","handleConnectToPeer","handleCreateNewPod","newPodDetails","newPodBlocks","createPod","getUpdate","handleRegisterNewDevice","canCreateClone","handleUpdateContactDisplayName","FileSaver","SyncIcon","ConectToPeer","_userProfile$settings","_userProfile$settings2","addProfileBlocks","storeInAppNotication","storeBrowserNotication","storedEncryptionSignature","addInappNotificationBlock","addBrowserNotificationBlock","addEncryptionSignatureBlock","newSignature","logoutDispatch","scrollIntoView","behaviour","handleContactNamePresetChange","handleLogout","inAppNotificationLocale","browserNotificationLocale","_inputRef$current","getState","generateAsync","saveAs","TranslateIcon","filesForPod","fileList","fileKey","removeFileFromPod","File","fileId","removeFileFromPodDispatch","calculateSize","sizeInBytes","suffixes","suffixIndex","toFixed","calculateSizeFromBase64","paddingFactor","endsWith","decodedSize","_state$pods$find","element","download","appendChild","rotateLeft","shift","addUnsigned","x","carry","sum","xWord","yWord","bitX","bitY","sumBits","bitSum","toHex","hex","charSet","byte","utf8Encode","utf8Text","charCode","charCodeAt","String","fromCharCode","strToWords","wordCount","words","fill","strLength","md5Calc","input","constants","sin","aa","bb","cc","dd","j","temp","hashWords","hashHex","Thread","SplitPane","Feed","addToPodsBlockchainDispatch","md5","sha256","_useBlockchain3","posts","flat","allReplies","_m$payload$reply","fetchComments","comments","_reply$payload$reply","newComments","resolveComments","post","postWithComments","Maintainance","playsinline","QRText","setText","useCallback","DeleteIcon","SkipNextIcon","SkipPreviousIcon","PlayArrowIcon","PauseIcon","valuetext","QRFile","fileParts","setFileParts","selectedPart","setSelectedPart","partDensity","setPartDensity","isPlaying","setIsPlaying","timeoutInterval","setTimeoutInterval","scannedData","hasPartBeenScanned","part","newFileParts","_fileParts$","areAllPartsScanned","total","_fileParts$2","reduce","acc","filename","handleFileSelect","base64","btoa","unescape","encodeURIComponent","base64BackToString","atob","partSize","numberOfParts","ceil","parts","substr","partNumber","partData","readAsText","handleDownloadFile","Blob","recalculateFileParts","newPartDensity","setTimeout","getAriaValueText","step","marks","min","max","valueLabelDisplay","fontSize","PropTypes","SwipeableViews","Tabs","Tab","TabPanel","children","other","_objectWithoutProperties","_excluded","role","propTypes","node","number","isRequired","a11yProps","setValue","newValue","handleChangeIndex","bgcolor","indicatorColor","textColor","axis","onChangeIndex","dir","UploadIcon","HashInputs","RSA","Symmetric","Hashing","_TermsAndConditions","LatestTermsAndConditions","LatestPrivacyPolicy","memo","MapContainer","TileLayer","Marker","Popup","L","Map","initialPosition","setPosition","setLocation","alert","enableHighAccuracy","timeout","maximumAge","MapComponent","center","zoom","scrollWheelZoom","attribution","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","LinearProgress","LinearProgressWithLabel","mr","round","isQRMode","setIsQRMode","handleCopyToClipboard","QRInput","peer","rtc","setRtc","dc","setDc","rtcIceCandidate","setRtcIceCandidate","rtcRemoteIceCandidate","setRtcRemoteIceCandidate","rtcOffer","setRtcOffer","rtcRemoteOffer","setRtcRemoteOffer","rtcAnswer","setRtcAnswer","rtcRemoteAnswer","setRtcRemoteAnswer","setMessage","peerConnection","onicecandidate","candidate","serialisedIceCandidate","ondatachannel","channel","onopen","send","onmessage","createDataChannel","handleCreateOffer","offer","createOffer","setLocalDescription","handleRemoteOffer","offerDescption","RTCSessionDescription","setRemoteDescription","handleAnswer","_callee3","_callee3$","_context3","createAnswer","handleRemoteAnswer","_callee4","answerDescption","_callee4$","_context4","handleIceCandidate","_callee5","iceCandidate","_callee5$","_context5","addIceCandidate","useLocation","matchPath","PodDetails","Contacts","ContactDetails","ListItemButton","FullScreenDialog","_useLocation","pathname","inContacts","inContactDetails","inPod","inPodDetails","inPods","inProfile","setIsContacts","isContactDetails","setIsContactDetails","_React$useState5","_React$useState6","isPod","setIsPod","_React$useState7","_React$useState8","isProfile","setIsProfile","_React$useState9","_React$useState10","isPodDetails","setIsPodDetails","fullScreen","useViewport","viewport","setViewport","determineViewport","innerWidth","Suspense","lazy","createHashRouter","createBrowserRouter","RouterProvider","Navigate","Login","Files","Hands","ShareQR","Encryption","TermsAndConditionsComponent","PrivacyPolicyComponent","AI","WebRTC","Layout","Verse","router","setRouter","agreedToLatestTerms","path","to","fallback","configureStore","combineReducers","getDefaultMiddleware","persistStore","persistReducer","userProfileReducer","contactsReducer","podsReducer","encryptionReducer","storageReducer","persistConfig","appReducer","rootReducer","persistedReducer","persistor","Provider","PersistGate","reduxPersistConfig","_reduxPersistConfig","decrypt","encrypt","createEncryptionMiddleware","encryptionKeys","req","_encryptionKeys$req$s","deserializedPrivateKey","deserializedRemotePublicKey","decryptedMessage","sender","crypto","subtle","importKey","sendEncrypted","encryptedPayload","_x4","_x5","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","_toPropertyKey","_toPrimitive","toPrimitive","Number","generateKeyPair","generateSymmetricKey","deserializePrivateKey","deserializePublicKey","decryptWithSymmetricKey","deserializeSymmetricKey","handshakeEndpoints","addContactDispatch","updateContactDispatch","addEncryptionKeysDispatch","updateEncryptionKeysDispatch","encryptionMiddleware","requestUserDetails","request","validateIdentity","_encryptionKeys$reque","decryptedrsaMessage","encryptedMessage","t1","t2","t3","t4","t5","createEncryption","_yield$generateKeyPai","serializedPublicKey","serializedPrivateKey","serializedSymmetricKey","exportKey","_x6","ping","pong","podEndpoints","addMessageToConversationDispatch","setPeerIsTypingDispatch","setEphemeralStoreDispatch","requestPodDetails","recievePodDetails","addNewPod","_blockchainInstance$c","blockchainInstance","payLoadContainsClone","cloneAlreadyExists","_blockchainInstance$c2","newMember","_request$payload$mess","isNotOnPodPage","isNotOnPodsOverViewPage","storedUnreadCount","newUnreadCount","largeFile","_request$payload","_request$payload2","insist","setPeerIsTyping","updateEphemeralStorage","ephemeralStorage","syncPodBlockchains","_blockchainInstance$c3","_request$payload$user","_request$payload3","pingPingEndpoints","appiSchema","setEphemeralStorage","PeerProvider","createAppiSchema","onConnection","connection","managedState","_encryptionKeys$conta","_encryptionKeys$conta2","randomHash","encryptedRandomHash","_peerPods$pods","peerPods","myUserDetails","connectingMessage","userDetails","storedContact","_encryptionKeys$store","_publicKey","_randomHash","_encryptedRandomHash","_response","connectedMessage","_peerPods","_pods","_publicKey2","_privateKey","_response2","_connectedMessage","_peerPods2","t6","t7","ppod","close","t8","t9","t10","CryptographyProvider","ReduxConnectedCryptography","entropy","ErrorBoundary","hasError","setHasError","setError","Router","Redux","ReduxConnectedPeerProvider","createTheme","ThemeProvider","StylesProvider","jssPreset","SnackbarProvider","I18nextProvider","rtl","jss","plugins","createContext","toggleColorMode","App","userPreferredTheme","setMode","prevMode","StrictMode","rest","_objectDestructuringEmpty","createRoot","Example","MainApp","container","render","serviceWorker","register","registration","registrationError","ArrowRight","ForkLeft","NestedMenuItem","parentMenuOpen","rightIcon","leftIcon","keepOpen","customTheme","tabIndexProp","tabIndex","_props$ContainerProps","ContainerProps","ContainerPropsProp","rightAnchored","MenuItemProps","containerRefProp","_excluded2","menuItemRef","useImperativeHandle","containerRef","menuContainerRef","isSubMenuOpen","setIsSubMenuOpen","handleMouseEnter","onMouseEnter","handleMouseLeave","onMouseLeave","isSubmenuFocused","_containerRef$current","_menuContainerRef$cur","_menuContainerRef$cur2","active","ownerDocument","activeElement","_iterator","_createForOfIteratorHelper","_step","child","handleFocus","onFocus","handleKeyDown","_containerRef$current2","_containerRef$current3","focus","_menuContainerRef$cur3","firstChild","onKeyDown","hideBackdrop","pointerEvents","transformOrigin","css","disableAutoFocus","disableEnforceFocus","disablePortal","Dropdown","trigger","menu","keepOpenGlobal","controlledIsOpen","isOpen","onControlledOpen","onOpen","floatLeft","isInternalOpen","setInternalOpen","anchorRef","handleOpen","contains","handleForceClose","renderMenu","menuItem","_menuItem$props","keepOpenLocal","extraProps","Children","cloneElement","PaperProps","DropdownMenuItem","_templateObject","_taggedTemplateLiteral","DropdownNestedMenuItem","_templateObject2","_state$storage$podId","maxHeight","_initialPosition$lati","_initialPosition$long","Location","_payload$image","_payload$audio","_payload$audio2","_payload$file","_payload$reply","_payload$reply2","_payload$file2","_payload$image2","_payload$reply3","_payload$content","behavior","Card","CardContent","CardHeader","Attachment","Payload","sentMessage","contrastText","main","alignSelf","messageContent","messageHeader","greenBackground","blueBackground","date","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","formattedTime","votes","cardClass","upvotes","subheader","KeyboardDoubleArrowDownIcon","ReplyIcon","CircularProgress","useLongPress","ConstructionOutlined","swipeableListItem","scrollRef","handleScroll","isNearBottom","setIsNearBottom","distantFromBottom","documentElement","scrollHeight","scrollTop","handleScrollToBottom","scrollTo","handleDelete","handleReply","parentNode","threshold","cancelOnMovement","captureEvent","onSc","_item$timestamp","swipeLeft","swipeRight","marginLeft","textTransform","CommentIcon","borderLeft","CustomAccordion","_ref$showExpandIcon","showExpandIcon","setIsExpanded","CardMedia","MoreVertIcon","FavoriteIcon","messageInputContainer","Post","_postDetails$payload","_postDetails$payload2","isDarkMode","imageId","postDetails","dense","setDense","secondary","setSecondary","num","randomNumber","randomAnimalName","randomDate","string","randomLongSentence","sentence","randomShortSentence","defaultMenuItems","InputComponent","_item$subMenuItems","_item$subMenuItems2","subItem","disableRipple","KeyboardDoubleArrowUpIcon","isNearTop","setIsNearTop","distantFromTop","handleScrollToTop","randomNumbers","sort","MenuIcon","AccountCircle","ArrowBackIcon","VideocamIcon","SettingsIcon","LogoutIcon","InfoIcon","ContentCut","ScreenShareIcon","CallIcon","FullscreenIcon","FullscreenExitIcon","LightModeIcon","DarkModeIcon","InstallMobileIcon","AssistantDirectionIcon","CssBaseline","useScrollTrigger","PermMediaIcon","SupportIcon","DescriptionIcon","LibraryBooksIcon","KeyIcon","ScienceIcon","GitHubIcon","MenuBookIcon","RedditIcon","YouTubeIcon","LiveTvIcon","ContactPhoneIcon","Download","HelpOutlineIcon","VolunteerActivismIcon","PrivacyTipIcon","WavingHandIcon","QuestionMarkIcon","languages","presetIcons","account","arrowBack","camera","more","folder","fullscreen","fullscreenExit","lightMode","darkMode","translate","install","docs","github","reddit","youtube","labs","gram","verse","callContact","help","privacy","support","hand","donate","HideOnScroll","appear","CustomDropdown","_menuItems$icon","_menuItems$items","menuItems","isFullScreen","setIsFullScreen","handleFullscreenChange","isInFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","requestFullscreen","exitFullscreen","deferredPrompt","setDeferredPrompt","handleBeforeInstallPromptEvent","bipEvent","Event","prompt","outcome","dispatchEvent","language","changeLanguage","AppHeader","_ref4$avatarProps","_ref4$menuProps","_ref4$customButtons","hideOnScroll","auth","setAuth","subMenuAnchorEl","setSubMenuAnchorEl","menuRef","subMenuRef","handleSubMenuMenu","handleSubMenuClose","subMenuOpen","setSubMenuOpen","AppBarRender","_avatarProps$src","_avatarProps$alt","_len","_key","SpeedDial","SpeedDialIcon","SpeedDialAction","add","func","defaultLightBackgroundImage","defaultDarkBackgroundImage","_speedDialProps$icon","_props$headerProps","_props$fabProps","fabProps","_props$speedDialProps","speedDialProps","defaultBackgroundImage","ariaLabel","tooltipTitle","BigInt","maxLength","isThisNegative","isOtherNegative","negate","subtract","parseInt","substring","applyPadding","binaryMessage","bin","initializeState","w","applyTheta","C","D","applyRho","rotationOffsets","offset","applyPi","newX","newY","applyChi","nextLane","twoPlacesAheadLane","ROUND_CONSTANTS","applyIota","roundNumber","generateOutput","outputLength","output","lane","binaryLane","padStart","absorbInput","segment","keccakF","calculateSHA3_512","paddedInput","binaryToHex","xorStateWithBlock","chunk","binaryString","hexString","calculateSha256","_createClass","_this","onNewBlock","onNewChain","_classCallCheck","_this$chain","resolveStorage","addBlock","_this$chain2","_block$payload","newBlock","previousBlockHash","payloadHash","mergeChain","filteredChain","blockId","newChain","sortedChain","chainWithUpdatedHashes","previousBlock","blockHash","_ref2$blockchains","_blockchain$chain","_blockchain$storage","_blockchainInstance$g","_blockchain$chain2","_blockchain$storage2","_blockchainInstance$g2","inputString","decodeUnicodeToEmojis","encodedString","group1","propState","newMessage","reciept","recievedBy","readBy","downvotes","salt","setPodId","setPodName","sendMessageBlocks","mutations","_state$pastConnection","pastConnections","sha3_512","Chance","cryptography","CryptographyContext","additionalSalt","randomStringLength","randomValues","getRandomValues","Uint8Array","randomHex","keyPair","generateKey","modulusLength","publicExponent","setClassPropsFromJson","instance","prop","deSerializedublicKey","kty","deSerializedPrivateKey","encodedMessage","encrypted","TextEncoder","encode","_encrypt","passphrase","buffer","decrypted","TextDecoder","decode","_x7","_decrypt","getEncryptionMethods","_callee8","_callee8$","_context8","_encrypt2","_callee6","_callee6$","_context6","_x10","_decrypt2","_callee7","_callee7$","_context7","_x11","_x8","_x9","_callee9","_callee9$","_context9","_ref8","_callee10","deSerializedSymmetricKey","_callee10$","_context10","_x12","encryptWithSymmetricKey","_ref9","_callee11","iv","_callee11$","_context11","ciphertext","_x13","_x14","_ref10","_callee12","encryptedData","ivBuffer","_callee12$","_context12","_x15","_x16","getSymmetricKeyEncryptionMethods","_ref11","_callee15","_callee15$","_context15","_encrypt3","_callee13","_callee13$","_context13","_x17","_decrypt3","_callee14","_callee14$","_context14","_x18","SnackbarProviderOriginal","closeSnackbar","useSnackbar","maxSnack","preventDuplicate","autoHideDuration","snackbarId","_useSnackbar","enqueueSnackbar","_window$Notification","_window$Notification2","_window$Notification3","_window$Notification4","notification","_window$Notification5","Peer","PeerContext","setPeer","pendingCallbacks","setPendingCallbacks","connections","setConnections","setCalls","streams","setStreams","EE","once","_compiledProfile$agre","peerHash","setPeerHash","setActiveConnections","peerEncryptionKeys","setPeerEncryptionKeys","setCallsHash","storedPeerId","setPeerId","peerId","peerOnDataHandler","handleConnectionDataWithManagedState","peerConnectionHandler","off","on","_calls$find","newConnections","remoteStreamId","sendMessageWithCallback","activeConnectionsToManage","deserializedEncryptionKeys","keyPairs","all","_encryptionKeys$userI","deserializedSymmetricKey","_setClassPropsFromJso","handleConnectionData","rawData","_peerEncryptionKeys$f","callback","_managedState$contact","cb","recieved","_send","payloadToSend","disconnectFromPeer","connectToAllContacts","connectedContacts","_connections$contact","iceConnectionState","contactsToConnect","contactsToDisconnect","disconnectedContacts","_connections$contact2","handlePeerInitialisation","newPeer","_console","reconnect","host","destroy","newPeerId","newActiveConnections","_connections$c","_calls$find2","getManagedState","peerOverride","clearTimeout","connectionOverride","_peerEncryptionKeys$f2","_ref13","_ref12","callsLength","peersToConnect","connectedPeers","filteredPeersToConnect","_context$peer","_ref$callback","responses","_args3","_context$peer2","_context$peer3","merge","chatsSlice","chats","chat","newChat","removeUserFromConversation","_action$payload3","chatId","findIndex","_action$payload4","_action$payload5","_action$payload6","_action$payload7","_action$payload8","_action$payload9","_chats$find","_chat","_chat2","_chat3","_action$payload10","_action$payload10$sto","_action$payload10$app","_chats$find2","_chat4","_chat5","_action$payload11","_chatsSlice$actions","storageSlice","existingItem","existing","removeStorageItem","itemId","updateStorageItem","updatedItem","setStorageForPod","_storageSlice$actions","userProfileSlice","pastConnectionIds","_profile","_profile2","_profile3","_action$payload$block","_action$payload$stora","_action$payload$appen","profile","_userProfileSlice$act","detector","backend","initReactI18next","use","init","fallbackLng","saveMissing","resources","en","translation","common","components","cryptoSignature","shareLink","shareToConnect","enterLink","shareQr","scanQr","stopScanning","shareWebRtcQr","about","options","downloadZip","sponsor","requestingToInstall","installPossible","installDismissed","installFailed","installNotSupported","loginPage","setProfile","setPreference","goToTermsAndConditions","goToPrivacyPolicy","termsAgreement","loadProfileFromFile","decentralized","noInstall","p2pCalls","dataImportExport","agnostic","welcome","featuresInclude","noCookies","noInstalling","groupMessaging","textMessaging","multimediaMessaging","dataOwnership","screensharing","fileTransfer","getStarted","contactsPage","profilePage","changeAvatar","regenerateConnectionId","preferences","backupProfile","podsPage","social","cloud","network","devices","ai","webrtc","hands","vinnc","commingSoon","contactDetailsPage","contactDisplayName","goToPodWith","createNewPodWith","registerNewDevice","blockContact","podPage","screenshare","videoCall","replyingTo","cancelReply","goToRepliedMessage","podDetailsPage","addExistingPeerToPod","gu","es","zh","hi","ru","pt","ja","fr","bn","de","it","kr","nl","pl","sw","tr","ar","vi","he","kl","te","ta","ur","yu","uk","charToCode","char","leftRotate","rightRotate","MAX_UINT32","pow","wordsToBlocks","preprocessMessage","bitLength","paddingLength","paddedMessage","set","bitLengthToArray","computeSHA256","K","Uint32Array","schedule","s0","s1","S1","ch","temp1","S0","maj","temp2","hashArray","messageBytes","sha256Hash"],"sourceRoot":""}